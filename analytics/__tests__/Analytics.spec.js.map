{"version":3,"sources":["../../../src/analytics/__tests__/Analytics.spec.js"],"names":["describe","analytics","beforeEach","Analytics","AnalyticsAggregate","AnalyticsEvents","AnalyticsRequest","it","expect","getAnalytics","toBeInstanceOf","toThrowErrorMatchingSnapshot","aggregate","events","request","toBe"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;;;AAEAA,QAAQ,CAAC,WAAD,EAAc,YAAM;AACxB,MAAIC,SAAJ;AAEAC,EAAAA,UAAU,CAAC,YAAM;AACbD,IAAAA,SAAS,GAAG,IAAIE,kBAAJ,CAAc,IAAIC,2BAAJ,EAAd,EAAwC,IAAIC,wBAAJ,EAAxC,EAA+DC,yBAA/D,CAAZ;AACH,GAFS,CAAV;AAIAC,EAAAA,EAAE,CAAC,wCAAD,EAA2C,YAAM;AAC/CC,IAAAA,MAAM,CAACL,mBAAUM,YAAV,EAAD,CAAN,CAAiCC,cAAjC,CAAgDP,kBAAhD;AACH,GAFC,CAAF;AAIAI,EAAAA,EAAE,CAAC,gDAAD,EAAmD,YAAM;AACvDC,IAAAA,MAAM,CAAC;AAAA,aAAM,yBAAN;AAAA,KAAD,CAAN,CAA0BG,4BAA1B;AACH,GAFC,CAAF;AAIAJ,EAAAA,EAAE,CAAC,kDAAD,EAAqD,YAAM;AACzDC,IAAAA,MAAM,CAACP,SAAS,CAACW,SAAX,CAAN,CAA4BF,cAA5B,CAA2CN,2BAA3C;AACH,GAFC,CAAF;AAIAG,EAAAA,EAAE,CAAC,+CAAD,EAAkD,YAAM;AACtDC,IAAAA,MAAM,CAACP,SAAS,CAACY,MAAX,CAAN,CAAyBH,cAAzB,CAAwCL,wBAAxC;AACH,GAFC,CAAF;AAIAE,EAAAA,EAAE,CAAC,gDAAD,EAAmD,YAAM;AACvDC,IAAAA,MAAM,CAACP,SAAS,CAACa,OAAX,CAAN,CAA0BC,IAA1B,CAA+BT,yBAA/B;AACH,GAFC,CAAF;AAIAN,EAAAA,QAAQ,CAAC,cAAD,EAAiB,YAAM;AAC3BO,IAAAA,EAAE,CAAC,yDAAD,EAA4D,YAAM;AAChEC,MAAAA,MAAM,CAACL,mBAAUM,YAAV,EAAD,CAAN,CAAiCM,IAAjC,CAAsCZ,mBAAUM,YAAV,EAAtC;AACH,KAFC,CAAF;AAGH,GAJO,CAAR;AAKH,CAhCO,CAAR","sourcesContent":["import Analytics from '../Analytics';\nimport AnalyticsAggregate from '../AnalyticsAggregate';\nimport AnalyticsEvents from '../AnalyticsEvents';\nimport AnalyticsRequest from '../AnalyticsRequest';\n\ndescribe('Analytics', () => {\n    let analytics;\n\n    beforeEach(() => {\n        analytics = new Analytics(new AnalyticsAggregate(), new AnalyticsEvents(), AnalyticsRequest);\n    });\n\n    it('should create an instance of Analytics', () => {\n        expect(Analytics.getAnalytics()).toBeInstanceOf(Analytics);\n    });\n\n    it('should not be allowed to be called without new', () => {\n        expect(() => Analytics()).toThrowErrorMatchingSnapshot();\n    });\n\n    it('should contain an instance of AnalyticsAggregate', () => {\n        expect(analytics.aggregate).toBeInstanceOf(AnalyticsAggregate);\n    });\n\n    it('should contain an instance of AnalyticsEvents', () => {\n        expect(analytics.events).toBeInstanceOf(AnalyticsEvents);\n    });\n\n    it('should contain a reference to AnalyticsRequest', () => {\n        expect(analytics.request).toBe(AnalyticsRequest);\n    });\n\n    describe('getAnalytics', () => {\n        it('should return the same instance on consecutive requests', () => {\n            expect(Analytics.getAnalytics()).toBe(Analytics.getAnalytics());\n        });\n    });\n});\n"],"file":"Analytics.spec.js"}