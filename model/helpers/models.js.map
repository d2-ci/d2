{"version":3,"sources":["../../../src/model/helpers/models.js"],"names":["hasPropertyOnModelValidation","property","model","Boolean","hasModelValidationForProperty","modelDefinition","modelValidations","pickHttpStatus","pickResponseUid","getModelValidationForProperty","propertyName","pickType","pickEmbeddedObject","pickOwner","pickTypeFromModelValidation","pickEmbeddedObjectFromModelValidation","pickOwnerFromModelValidation","updateModelFromResponseStatus","result","responseUid","dataValues","id","href","apiEndpoint","join","resetDirtyState"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACC,QAAD,EAAWC,KAAX;AAAA,SAAqBC,OAAO,CAC7D,4DAAyCF,QAAzC,GAAqDC,KAArD,CAD6D,CAA5B;AAAA,CAArC;;AAIO,SAASE,6BAAT,CAAuCF,KAAvC,EAA8CD,QAA9C,EAAwD;AAC3D,SAAOE,OAAO,CACVH,4BAA4B,CAACC,QAAD,EAAWC,KAAX,CAA5B,IACA,2BAAeA,KAAK,CAACG,eAAN,CAAsBC,gBAArC,EAAuDL,QAAvD,CAFU,CAAd;AAIH;;AAED,IAAMM,cAAc,GAAG,iBAAK,YAAL,CAAvB;AACA,IAAMC,eAAe,GAAG,iBAAK,cAAL,CAAxB;;AACA,IAAMC,6BAA6B,GAAG,SAAhCA,6BAAgC,CAAAC,YAAY;AAAA,SAAI,4DAAyCA,YAAzC,EAAJ;AAAA,CAAlD;;AACA,IAAMC,QAAQ,GAAG,iBAAK,MAAL,CAAjB;AACA,IAAMC,kBAAkB,GAAG,iBAAK,gBAAL,CAA3B;AACA,IAAMC,SAAS,GAAG,iBAAK,OAAL,CAAlB;;AAEO,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACb,QAAD,EAAWC,KAAX;AAAA,SAAqBS,QAAQ,CACpEF,6BAA6B,CAACR,QAAD,CAA7B,CAAwCC,KAAxC,CADoE,CAA7B;AAAA,CAApC;;;;AAGA,IAAMa,qCAAqC,GAAG,SAAxCA,qCAAwC,CAACd,QAAD,EAAWC,KAAX;AAAA,SAAqBU,kBAAkB,CACxFH,6BAA6B,CAACR,QAAD,CAA7B,CAAwCC,KAAxC,CADwF,CAAvC;AAAA,CAA9C;;;;AAIA,IAAMc,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACf,QAAD,EAAWC,KAAX;AAAA,SAAqBW,SAAS,CACtEJ,6BAA6B,CAACR,QAAD,CAA7B,CAAwCC,KAAxC,CADsE,CAA9B;AAAA,CAArC,C,CAIP;;;;;AACO,SAASe,6BAAT,CAAuCC,MAAvC,EAA+C;AAClD,MAAMC,WAAW,GAAGX,eAAe,CAACU,MAAD,CAAnC,CADkD,CAGlD;;AACA,MAAIX,cAAc,CAACW,MAAD,CAAd,KAA2B,SAA3B,IAAwC,qBAAWC,WAAX,CAA5C,EAAqE;AACjE,SAAKC,UAAL,CAAgBC,EAAhB,GAAqBF,WAArB;AACA,SAAKC,UAAL,CAAgBE,IAAhB,GAAuB,CAAC,KAAKjB,eAAL,CAAqBkB,WAAtB,EAAmC,KAAKH,UAAL,CAAgBC,EAAnD,EAAuDG,IAAvD,CAA4D,GAA5D,CAAvB;AACH,GAPiD,CASlD;;;AACA,OAAKC,eAAL;AAEA,SAAOP,MAAP;AACH","sourcesContent":["import { isValidUid } from '../../uid';\nimport { hasOwnProperty } from '../../lib/check';\nimport { pick } from '../../lib/utils';\n\nconst hasPropertyOnModelValidation = (property, model) => Boolean(\n    pick(`modelDefinition.modelValidations.${property}`)(model),\n);\n\nexport function hasModelValidationForProperty(model, property) {\n    return Boolean(\n        hasPropertyOnModelValidation(property, model) &&\n        hasOwnProperty(model.modelDefinition.modelValidations, property),\n    );\n}\n\nconst pickHttpStatus = pick('httpStatus');\nconst pickResponseUid = pick('response.uid');\nconst getModelValidationForProperty = propertyName => pick(`modelDefinition.modelValidations.${propertyName}`);\nconst pickType = pick('type');\nconst pickEmbeddedObject = pick('embeddedObject');\nconst pickOwner = pick('owner');\n\nexport const pickTypeFromModelValidation = (property, model) => pickType(\n    getModelValidationForProperty(property)(model),\n);\nexport const pickEmbeddedObjectFromModelValidation = (property, model) => pickEmbeddedObject(\n    getModelValidationForProperty(property)(model),\n);\n\nexport const pickOwnerFromModelValidation = (property, model) => pickOwner(\n    getModelValidationForProperty(property)(model),\n);\n\n// This function is called with `.call` with the Model as it's `this`\nexport function updateModelFromResponseStatus(result) {\n    const responseUid = pickResponseUid(result);\n\n    // Set the id and href of the newly created object if we got an id in the response\n    if (pickHttpStatus(result) === 'Created' && isValidUid(responseUid)) {\n        this.dataValues.id = responseUid;\n        this.dataValues.href = [this.modelDefinition.apiEndpoint, this.dataValues.id].join('/');\n    }\n\n    // Object is saved to the api, so it's now clean\n    this.resetDirtyState();\n\n    return result;\n}\n"],"file":"models.js"}