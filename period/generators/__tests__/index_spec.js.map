{"version":3,"sources":["../../../../src/period/generators/__tests__/index_spec.js"],"names":["describe","beforeEach","jest","spyOn","daily","afterEach","generateDailyPeriodsForYear","mockRestore","it","expect","toBe","generators","toBeCalledWith","toEqual","weekly","generateWeeklyPeriodsForYear","monthly","generateMonthlyPeriodsForYear","bimonthly","generateBiMonthlyPeriodsForYear","quarterly","generateQuarterlyPeriodsForYear","sixmonthly","generateSixMonthlyPeriodsForYear","sixmonthlyapril","generateSixMonthlyAprilPeriodsForYear","yearly","generateYearlyPeriodsUpToYear","undefined","financialoctober","generateFinancialOctoberPeriodsUpToYear","financialjuly","generateFinancialJulyPeriodsUpToYear","financialapril","generateFinancialAprilPeriodsUpToYear"],"mappings":"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","sourcesContent":["import { createPeriodGeneratorsForLocale } from '..';\nimport * as daily from '../daily';\nimport * as weekly from '../weekly';\nimport * as monthly from '../monthly';\nimport * as bimonthly from '../bi-monthly';\nimport * as quarterly from '../quarterly';\nimport * as sixmonthly from '../six-monthly';\nimport * as sixmonthlyapril from '../six-monthly-april';\nimport * as yearly from '../yearly';\nimport * as financialoctober from '../financial-october';\nimport * as financialjuly from '../financial-july';\nimport * as financialapril from '../financial-april';\n\ndescribe('generators', () => {\n    describe('createPeriodGeneratorsForLocale()', () => {\n        describe('daily', () => {\n            beforeEach(() => {\n                jest.spyOn(daily, 'generateDailyPeriodsForYear');\n            });\n\n            afterEach(() => {\n                daily.generateDailyPeriodsForYear.mockRestore();\n            });\n\n            it('should have the daily period generator', () => {\n                expect(typeof createPeriodGeneratorsForLocale('nl').generateDailyPeriodsForYear).toBe('function');\n            });\n\n            it('should call the the daily generator with the correct locale', () => {\n                const generators = createPeriodGeneratorsForLocale('nl');\n\n                generators.generateDailyPeriodsForYear(2017);\n\n                expect(daily.generateDailyPeriodsForYear).toBeCalledWith(2017, 'nl');\n            });\n\n            it('should return the same result as when calling the generator directly', () => {\n                const generators = createPeriodGeneratorsForLocale('nl');\n\n                generators.generateDailyPeriodsForYear(2017);\n\n                expect(generators.generateDailyPeriodsForYear(2017))\n                    .toEqual(daily.generateDailyPeriodsForYear(2017, 'nl'));\n            });\n        });\n\n        describe('weekly', () => {\n            beforeEach(() => {\n                jest.spyOn(weekly, 'generateWeeklyPeriodsForYear');\n            });\n\n            afterEach(() => {\n                weekly.generateWeeklyPeriodsForYear.mockRestore();\n            });\n\n            it('should have the weekly period generator', () => {\n                expect(typeof createPeriodGeneratorsForLocale('nl').generateWeeklyPeriodsForYear).toBe('function');\n            });\n\n            it('should call the weekly generator with the correct locale', () => {\n                const generators = createPeriodGeneratorsForLocale('nl');\n\n                generators.generateWeeklyPeriodsForYear(2017);\n\n                expect(weekly.generateWeeklyPeriodsForYear).toBeCalledWith(2017, 'nl');\n            });\n\n            it('should return the same result as when calling the generator directly', () => {\n                const generators = createPeriodGeneratorsForLocale('nl');\n\n                generators.generateWeeklyPeriodsForYear(2017);\n\n                expect(generators.generateWeeklyPeriodsForYear(2017))\n                    .toEqual(weekly.generateWeeklyPeriodsForYear(2017, 'nl'));\n            });\n        });\n\n        describe('monthly', () => {\n            beforeEach(() => {\n                jest.spyOn(monthly, 'generateMonthlyPeriodsForYear');\n            });\n\n            afterEach(() => {\n                monthly.generateMonthlyPeriodsForYear.mockRestore();\n            });\n\n            it('should have the weekly period generator', () => {\n                expect(typeof createPeriodGeneratorsForLocale('nl').generateMonthlyPeriodsForYear).toBe('function');\n            });\n\n            it('should call the weekly generator with the correct locale', () => {\n                const generators = createPeriodGeneratorsForLocale('nl');\n\n                generators.generateMonthlyPeriodsForYear(2017);\n\n                expect(monthly.generateMonthlyPeriodsForYear).toBeCalledWith(2017, 'nl');\n            });\n\n            it('should return the same result as when calling the generator directly', () => {\n                const generators = createPeriodGeneratorsForLocale('nl');\n\n                generators.generateMonthlyPeriodsForYear(2017);\n\n                expect(generators.generateMonthlyPeriodsForYear(2017))\n                    .toEqual(monthly.generateMonthlyPeriodsForYear(2017, 'nl'));\n            });\n        });\n\n        describe('bi-monthly', () => {\n            beforeEach(() => {\n                jest.spyOn(bimonthly, 'generateBiMonthlyPeriodsForYear');\n            });\n\n            afterEach(() => {\n                bimonthly.generateBiMonthlyPeriodsForYear.mockRestore();\n            });\n\n            it('should have the weekly period generator', () => {\n                expect(\n                    typeof createPeriodGeneratorsForLocale('nl').generateBiMonthlyPeriodsForYear,\n                ).toBe('function');\n            });\n\n            it('should call the weekly generator with the correct locale', () => {\n                const generators = createPeriodGeneratorsForLocale('nl');\n\n                generators.generateBiMonthlyPeriodsForYear(2017);\n\n                expect(bimonthly.generateBiMonthlyPeriodsForYear).toBeCalledWith(2017, 'nl');\n            });\n\n            it('should return the same result as when calling the generator directly', () => {\n                const generators = createPeriodGeneratorsForLocale('nl');\n\n                generators.generateBiMonthlyPeriodsForYear(2017);\n\n                expect(generators.generateBiMonthlyPeriodsForYear(2017))\n                    .toEqual(bimonthly.generateBiMonthlyPeriodsForYear(2017, 'nl'));\n            });\n        });\n\n        describe('quarterly', () => {\n            beforeEach(() => {\n                jest.spyOn(quarterly, 'generateQuarterlyPeriodsForYear');\n            });\n\n            afterEach(() => {\n                quarterly.generateQuarterlyPeriodsForYear.mockRestore();\n            });\n\n            it('should have the weekly period generator', () => {\n                expect(\n                    typeof createPeriodGeneratorsForLocale('nl').generateQuarterlyPeriodsForYear,\n                ).toBe('function');\n            });\n\n            it('should call the weekly generator with the correct locale', () => {\n                const generators = createPeriodGeneratorsForLocale('nl');\n\n                generators.generateQuarterlyPeriodsForYear(2017);\n\n                expect(quarterly.generateQuarterlyPeriodsForYear).toBeCalledWith(2017, 'nl');\n            });\n\n            it('should return the same result as when calling the generator directly', () => {\n                const generators = createPeriodGeneratorsForLocale('nl');\n\n                generators.generateQuarterlyPeriodsForYear(2017);\n\n                expect(generators.generateQuarterlyPeriodsForYear(2017))\n                    .toEqual(quarterly.generateQuarterlyPeriodsForYear(2017, 'nl'));\n            });\n        });\n\n        describe('six-monthly', () => {\n            beforeEach(() => {\n                jest.spyOn(sixmonthly, 'generateSixMonthlyPeriodsForYear');\n            });\n\n            afterEach(() => {\n                sixmonthly.generateSixMonthlyPeriodsForYear.mockRestore();\n            });\n\n            it('should have the weekly period generator', () => {\n                expect(\n                    typeof createPeriodGeneratorsForLocale('nl').generateSixMonthlyPeriodsForYear,\n                ).toBe('function');\n            });\n\n            it('should call the weekly generator with the correct locale', () => {\n                const generators = createPeriodGeneratorsForLocale('nl');\n\n                generators.generateSixMonthlyPeriodsForYear(2017);\n\n                expect(sixmonthly.generateSixMonthlyPeriodsForYear).toBeCalledWith(2017, 'nl');\n            });\n\n            it('should return the same result as when calling the generator directly', () => {\n                const generators = createPeriodGeneratorsForLocale('nl');\n\n                generators.generateSixMonthlyPeriodsForYear(2017);\n\n                expect(generators.generateSixMonthlyPeriodsForYear(2017))\n                    .toEqual(sixmonthly.generateSixMonthlyPeriodsForYear(2017, 'nl'));\n            });\n        });\n\n        describe('six-monthly-april', () => {\n            beforeEach(() => {\n                jest.spyOn(sixmonthlyapril, 'generateSixMonthlyAprilPeriodsForYear');\n            });\n\n            afterEach(() => {\n                sixmonthlyapril.generateSixMonthlyAprilPeriodsForYear.mockRestore();\n            });\n\n            it('should have the weekly period generator', () => {\n                expect(\n                    typeof createPeriodGeneratorsForLocale('nl').generateSixMonthlyPeriodsForYear,\n                ).toBe('function');\n            });\n\n            it('should call the weekly generator with the correct locale', () => {\n                const generators = createPeriodGeneratorsForLocale('nl');\n\n                generators.generateSixMonthlyAprilPeriodsForYear(2017);\n\n                expect(sixmonthlyapril.generateSixMonthlyAprilPeriodsForYear).toBeCalledWith(2017, 'nl');\n            });\n\n            it('should return the same result as when calling the generator directly', () => {\n                const generators = createPeriodGeneratorsForLocale('nl');\n\n                generators.generateSixMonthlyAprilPeriodsForYear(2017);\n\n                expect(generators.generateSixMonthlyAprilPeriodsForYear(2017))\n                    .toEqual(sixmonthlyapril.generateSixMonthlyAprilPeriodsForYear(2017, 'nl'));\n            });\n        });\n\n        describe('yearly', () => {\n            beforeEach(() => {\n                jest.spyOn(yearly, 'generateYearlyPeriodsUpToYear');\n            });\n\n            afterEach(() => {\n                yearly.generateYearlyPeriodsUpToYear.mockRestore();\n            });\n\n            it('should have the weekly period generator', () => {\n                expect(typeof createPeriodGeneratorsForLocale('nl').generateYearlyPeriodsUpToYear).toBe('function');\n            });\n\n            it('should call the weekly generator with the correct locale', () => {\n                const generators = createPeriodGeneratorsForLocale('nl');\n\n                generators.generateYearlyPeriodsUpToYear(2017);\n\n                expect(yearly.generateYearlyPeriodsUpToYear).toBeCalledWith(2017, undefined, 'nl');\n            });\n\n            it('should return the same result as when calling the generator directly', () => {\n                const generators = createPeriodGeneratorsForLocale('nl');\n\n                generators.generateYearlyPeriodsUpToYear(2017);\n\n                expect(generators.generateYearlyPeriodsUpToYear(2017, 10))\n                    .toEqual(yearly.generateYearlyPeriodsUpToYear(2017, 10, 'nl'));\n            });\n        });\n\n        describe('yearly', () => {\n            beforeEach(() => {\n                jest.spyOn(yearly, 'generateYearlyPeriodsUpToYear');\n            });\n\n            afterEach(() => {\n                yearly.generateYearlyPeriodsUpToYear.mockRestore();\n            });\n\n            it('should have the weekly period generator', () => {\n                expect(typeof createPeriodGeneratorsForLocale('nl').generateYearlyPeriodsUpToYear).toBe('function');\n            });\n\n            it('should call the weekly generator with the correct locale', () => {\n                const generators = createPeriodGeneratorsForLocale('nl');\n\n                generators.generateYearlyPeriodsUpToYear(2017);\n\n                expect(yearly.generateYearlyPeriodsUpToYear).toBeCalledWith(2017, undefined, 'nl');\n            });\n\n            it('should return the same result as when calling the generator directly', () => {\n                const generators = createPeriodGeneratorsForLocale('nl');\n\n                generators.generateYearlyPeriodsUpToYear(2017);\n\n                expect(generators.generateYearlyPeriodsUpToYear(2017, 10))\n                    .toEqual(yearly.generateYearlyPeriodsUpToYear(2017, 10, 'nl'));\n            });\n        });\n\n        describe('financial-october', () => {\n            beforeEach(() => {\n                jest.spyOn(financialoctober, 'generateFinancialOctoberPeriodsUpToYear');\n            });\n\n            afterEach(() => {\n                financialoctober.generateFinancialOctoberPeriodsUpToYear.mockRestore();\n            });\n\n            it('should have the weekly period generator', () => {\n                expect(\n                    typeof createPeriodGeneratorsForLocale('nl').generateFinancialOctoberPeriodsUpToYear,\n                ).toBe('function');\n            });\n\n            it('should call the weekly generator with the correct locale', () => {\n                const generators = createPeriodGeneratorsForLocale('nl');\n\n                generators.generateFinancialOctoberPeriodsUpToYear(2017);\n\n                expect(financialoctober.generateFinancialOctoberPeriodsUpToYear).toBeCalledWith(2017, undefined, 'nl');\n            });\n\n            it('should return the same result as when calling the generator directly', () => {\n                const generators = createPeriodGeneratorsForLocale('nl');\n\n                generators.generateFinancialOctoberPeriodsUpToYear(2017);\n\n                expect(generators.generateFinancialOctoberPeriodsUpToYear(2017, 5))\n                    .toEqual(financialoctober.generateFinancialOctoberPeriodsUpToYear(2017, 5, 'nl'));\n            });\n        });\n\n        describe('financial-july', () => {\n            beforeEach(() => {\n                jest.spyOn(financialjuly, 'generateFinancialJulyPeriodsUpToYear');\n            });\n\n            afterEach(() => {\n                financialjuly.generateFinancialJulyPeriodsUpToYear.mockRestore();\n            });\n\n            it('should have the weekly period generator', () => {\n                expect(\n                    typeof createPeriodGeneratorsForLocale('nl').generateFinancialJulyPeriodsUpToYear,\n                ).toBe('function');\n            });\n\n            it('should call the weekly generator with the correct locale', () => {\n                const generators = createPeriodGeneratorsForLocale('nl');\n\n                generators.generateFinancialJulyPeriodsUpToYear(2017);\n\n                expect(financialjuly.generateFinancialJulyPeriodsUpToYear).toBeCalledWith(2017, undefined, 'nl');\n            });\n\n            it('should return the same result as when calling the generator directly', () => {\n                const generators = createPeriodGeneratorsForLocale('nl');\n\n                generators.generateFinancialJulyPeriodsUpToYear(2017);\n\n                expect(generators.generateFinancialJulyPeriodsUpToYear(2017, 5))\n                    .toEqual(financialjuly.generateFinancialJulyPeriodsUpToYear(2017, 5, 'nl'));\n            });\n        });\n\n        describe('financial-april', () => {\n            beforeEach(() => {\n                jest.spyOn(financialapril, 'generateFinancialAprilPeriodsUpToYear');\n            });\n\n            afterEach(() => {\n                financialapril.generateFinancialAprilPeriodsUpToYear.mockRestore();\n            });\n\n            it('should have the weekly period generator', () => {\n                expect(\n                    typeof createPeriodGeneratorsForLocale('nl').generateFinancialAprilPeriodsUpToYear,\n                ).toBe('function');\n            });\n\n            it('should call the weekly generator with the correct locale', () => {\n                const generators = createPeriodGeneratorsForLocale('nl');\n\n                generators.generateFinancialAprilPeriodsUpToYear(2017);\n\n                expect(financialapril.generateFinancialAprilPeriodsUpToYear).toBeCalledWith(2017, undefined, 'nl');\n            });\n\n            it('should return the same result as when calling the generator directly', () => {\n                const generators = createPeriodGeneratorsForLocale('nl');\n\n                generators.generateFinancialAprilPeriodsUpToYear(2017);\n\n                expect(generators.generateFinancialAprilPeriodsUpToYear(2017, 5))\n                    .toEqual(financialapril.generateFinancialAprilPeriodsUpToYear(2017, 5, 'nl'));\n            });\n        });\n    });\n\n    describe('default values', () => {\n        beforeEach(() => {\n            jest.spyOn(daily, 'generateDailyPeriodsForYear');\n        });\n\n        it('should use the default locale when no locale is passed', () => {\n            const generators = createPeriodGeneratorsForLocale();\n\n            generators.generateDailyPeriodsForYear(2017);\n\n            expect(daily.generateDailyPeriodsForYear).toBeCalledWith(2017, 'en');\n        });\n    });\n});\n"],"file":"index_spec.js"}