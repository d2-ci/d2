{"version":3,"sources":["../../../src/model/helpers/models.js"],"names":["hasModelValidationForProperty","updateModelFromResponseStatus","hasPropertyOnModelValidation","property","model","Boolean","modelDefinition","modelValidations","pickHttpStatus","pickResponseUid","getModelValidationForProperty","propertyName","pickType","pickEmbeddedObject","pickOwner","pickTypeFromModelValidation","pickEmbeddedObjectFromModelValidation","pickOwnerFromModelValidation","result","responseUid","dataValues","id","href","apiEndpoint","join","resetDirtyState"],"mappings":";;;;;;QAQgBA,6B,GAAAA,6B;QA0BAC,6B,GAAAA,6B;;AAlChB;;AACA;;AACA;;AAEA,IAAMC,+BAA+B,SAA/BA,4BAA+B,CAACC,QAAD,EAAWC,KAAX;AAAA,WAAqBC,QACtD,uDAAyCF,QAAzC,EAAqDC,KAArD,CADsD,CAArB;AAAA,CAArC;;AAIO,SAASJ,6BAAT,CAAuCI,KAAvC,EAA8CD,QAA9C,EAAwD;AAC3D,WAAOE,QACHH,6BAA6BC,QAA7B,EAAuCC,KAAvC,KACA,2BAAeA,MAAME,eAAN,CAAsBC,gBAArC,EAAuDJ,QAAvD,CAFG,CAAP;AAIH;;AAED,IAAMK,iBAAiB,iBAAK,YAAL,CAAvB;AACA,IAAMC,kBAAkB,iBAAK,cAAL,CAAxB;AACA,IAAMC,gCAAgC,SAAhCA,6BAAgC;AAAA,WAAgB,uDAAyCC,YAAzC,CAAhB;AAAA,CAAtC;AACA,IAAMC,WAAW,iBAAK,MAAL,CAAjB;AACA,IAAMC,qBAAqB,iBAAK,gBAAL,CAA3B;AACA,IAAMC,YAAY,iBAAK,OAAL,CAAlB;;AAEO,IAAMC,oEAA8B,SAA9BA,2BAA8B,CAACZ,QAAD,EAAWC,KAAX;AAAA,WAAqBQ,SAC5DF,8BAA8BP,QAA9B,EAAwCC,KAAxC,CAD4D,CAArB;AAAA,CAApC;AAGA,IAAMY,wFAAwC,SAAxCA,qCAAwC,CAACb,QAAD,EAAWC,KAAX;AAAA,WAAqBS,mBACtEH,8BAA8BP,QAA9B,EAAwCC,KAAxC,CADsE,CAArB;AAAA,CAA9C;;AAIA,IAAMa,sEAA+B,SAA/BA,4BAA+B,CAACd,QAAD,EAAWC,KAAX;AAAA,WAAqBU,UAC7DJ,8BAA8BP,QAA9B,EAAwCC,KAAxC,CAD6D,CAArB;AAAA,CAArC;;AAIP;AACO,SAASH,6BAAT,CAAuCiB,MAAvC,EAA+C;AAClD,QAAMC,cAAcV,gBAAgBS,MAAhB,CAApB;;AAEA;AACA,QAAIV,eAAeU,MAAf,MAA2B,SAA3B,IAAwC,qBAAWC,WAAX,CAA5C,EAAqE;AACjE,aAAKC,UAAL,CAAgBC,EAAhB,GAAqBF,WAArB;AACA,aAAKC,UAAL,CAAgBE,IAAhB,GAAuB,CAAC,KAAKhB,eAAL,CAAqBiB,WAAtB,EAAmC,KAAKH,UAAL,CAAgBC,EAAnD,EAAuDG,IAAvD,CAA4D,GAA5D,CAAvB;AACH;;AAED;AACA,SAAKC,eAAL;;AAEA,WAAOP,MAAP;AACH","file":"models.js","sourcesContent":["import { isValidUid } from '../../uid';\nimport { hasOwnProperty } from '../../lib/check';\nimport { pick } from '../../lib/utils';\n\nconst hasPropertyOnModelValidation = (property, model) => Boolean(\n    pick(`modelDefinition.modelValidations.${property}`)(model),\n);\n\nexport function hasModelValidationForProperty(model, property) {\n    return Boolean(\n        hasPropertyOnModelValidation(property, model) &&\n        hasOwnProperty(model.modelDefinition.modelValidations, property),\n    );\n}\n\nconst pickHttpStatus = pick('httpStatus');\nconst pickResponseUid = pick('response.uid');\nconst getModelValidationForProperty = propertyName => pick(`modelDefinition.modelValidations.${propertyName}`);\nconst pickType = pick('type');\nconst pickEmbeddedObject = pick('embeddedObject');\nconst pickOwner = pick('owner');\n\nexport const pickTypeFromModelValidation = (property, model) => pickType(\n    getModelValidationForProperty(property)(model),\n);\nexport const pickEmbeddedObjectFromModelValidation = (property, model) => pickEmbeddedObject(\n    getModelValidationForProperty(property)(model),\n);\n\nexport const pickOwnerFromModelValidation = (property, model) => pickOwner(\n    getModelValidationForProperty(property)(model),\n);\n\n// This function is called with `.call` with the Model as it's `this`\nexport function updateModelFromResponseStatus(result) {\n    const responseUid = pickResponseUid(result);\n\n    // Set the id and href of the newly created object if we got an id in the response\n    if (pickHttpStatus(result) === 'Created' && isValidUid(responseUid)) {\n        this.dataValues.id = responseUid;\n        this.dataValues.href = [this.modelDefinition.apiEndpoint, this.dataValues.id].join('/');\n    }\n\n    // Object is saved to the api, so it's now clean\n    this.resetDirtyState();\n\n    return result;\n}\n"]}