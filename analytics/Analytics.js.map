{"version":3,"sources":["../../src/analytics/Analytics.js"],"names":["Analytics","analyticsAggregate","analyticsEvents","analyticsRequest","analyticsResponse","aggregate","events","request","response","getAnalytics","analytics","AnalyticsAggregate","AnalyticsEvents","AnalyticsRequest","AnalyticsResponse"],"mappings":";;;;;;;AAGA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA;;;;;;;;;;;;;;;;;;;;;IAqBMA,S;;;AACF;;;;;;AAMA,qBAAYC,kBAAZ,EAAgCC,eAAhC,EAAiDC,gBAAjD,EAAmEC,iBAAnE,EAAsF;AAAA;;AAClF,SAAKC,SAAL,GAAiBJ,kBAAjB;AACA,SAAKK,MAAL,GAAcJ,eAAd;AACA,SAAKK,OAAL,GAAeJ,gBAAf;AACA,SAAKK,QAAL,GAAgBJ,iBAAhB;AACH;AAED;;;;;;;;;;;;;;;;mCAYsB;AAClB,UAAI,CAACJ,SAAS,CAACS,YAAV,CAAuBC,SAA5B,EAAuC;AACnCV,QAAAA,SAAS,CAACS,YAAV,CAAuBC,SAAvB,GAAmC,IAAIV,SAAJ,CAC/B,IAAIW,2BAAJ,EAD+B,EAE/B,IAAIC,wBAAJ,EAF+B,EAG/BC,yBAH+B,EAI/BC,0BAJ+B,CAAnC;AAMH;;AAED,aAAOd,SAAS,CAACS,YAAV,CAAuBC,SAA9B;AACH;;;;;;eAGUV,S","sourcesContent":["/**\n * @module analytics\n */\nimport AnalyticsAggregate from './AnalyticsAggregate';\nimport AnalyticsEvents from './AnalyticsEvents';\nimport AnalyticsRequest from './AnalyticsRequest';\nimport AnalyticsResponse from './AnalyticsResponse';\n\n/**\n * @description\n * Analytics class used to request analytics data from Web API.\n *\n * @requires analytics.AnalyticsAggregate\n * @requires analytics.AnalyticsEvents\n * @requires analytics.AnalyticsRequest\n * @requires analytics.AnalyticsResponse\n *\n * @example\n * const d2Analytics = new Analytics(\n *  new AnalyticsAggregate(),\n *  new AnalyticsEvents(),\n *  AnalyticsRequest,\n *  AnalyticsResponse\n * )\n *\n * @memberof module:analytics\n * @see {@link https://docs.dhis2.org/master/en/developer/html/webapi_analytics.html} Analytics API documentation\n * @see {@link https://docs.dhis2.org/master/en/developer/html/webapi_event_analytics.html} Event analytics API documentation\n */\nclass Analytics {\n    /**\n     * @param {!module:analytics.AnalyticsAggregate} analyticsAggregate The AnalyticsAggregate instance\n     * @param {!module:analytics.AnalyticsEvents} analyticsEvents The AnalyticsEvents instance\n     * @param {!module:analytics.AnalyticsRequest} analyticsRequest The AnalyticsRequest class\n     * @param {!module:analytics.AnalyticsResponse} analyticsResponse The AnalyticsResponse class\n     */\n    constructor(analyticsAggregate, analyticsEvents, analyticsRequest, analyticsResponse) {\n        this.aggregate = analyticsAggregate;\n        this.events = analyticsEvents;\n        this.request = analyticsRequest;\n        this.response = analyticsResponse;\n    }\n\n    /**\n     * @static\n     *\n     * @description\n     * Get a new instance of the Analytics object. This will function as a singleton, once Analytics object\n     * has been created when requesting getAnalytics again the original version will be returned.\n     *\n     * @returns {Analytics} Object with the analytics interaction properties\n     *\n     * @example\n     * const d2Analytics = d2.getAnalytics();\n     */\n    static getAnalytics() {\n        if (!Analytics.getAnalytics.analytics) {\n            Analytics.getAnalytics.analytics = new Analytics(\n                new AnalyticsAggregate(),\n                new AnalyticsEvents(),\n                AnalyticsRequest,\n                AnalyticsResponse,\n            );\n        }\n\n        return Analytics.getAnalytics.analytics;\n    }\n}\n\nexport default Analytics;\n"],"file":"Analytics.js"}