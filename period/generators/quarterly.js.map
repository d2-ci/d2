{"version":3,"sources":["../../../src/period/generators/quarterly.js"],"names":["generateQuarterlyPeriodsForYear","year","locale","periods","date","Date","quarter","monthNames","getFullYear","period","endDate","setDate","startDate","name","getMonth","id","push","reverse"],"mappings":";;;;;QAuBgBA,+B,GAAAA,+B;;AAvBhB;;AAEA;;;;;;;;;;;;;;;;;;;;;AAqBO,SAASA,+BAAT,GAAoF;AAAA,QAA3CC,IAA2C,uEAApC,8BAAoC;AAAA,QAAlBC,MAAkB,uEAAT,OAAS;AAAE;AACzF,2CAAyBD,IAAzB;;AAEA,QAAME,UAAU,EAAhB;AACA,QAAMC,OAAO,IAAIC,IAAJ,aAAmBJ,IAAnB,CAAb;AACA,QAAIK,UAAU,CAAd;AACA,QAAMC,aAAa,qCAAuBL,MAAvB,CAAnB;;AAEA,WAAOE,KAAKI,WAAL,OAAuBP,IAA9B,EAAoC;AAChC,YAAMQ,SAAS,EAAf;AACAA,eAAOC,OAAP,GAAiB,8BAAgBN,IAAhB,CAAjB;AACAA,aAAKO,OAAL,CAAa,CAAb;AACAP,aAAKO,OAAL,CAAa,CAAb;AACAP,aAAKO,OAAL,CAAa,CAAb;AACAF,eAAOG,SAAP,GAAmB,8BAAgBR,IAAhB,CAAnB;AACAK,eAAOI,IAAP,GAAiBN,WAAWH,KAAKU,QAAL,EAAX,CAAjB,WAAkDP,WAAWH,KAAKU,QAAL,KAAkB,CAA7B,CAAlD,SAAqFV,KAAKI,WAAL,EAArF;AACAC,eAAOM,EAAP,GAAed,IAAf,SAAuBK,OAAvB;AACAH,gBAAQa,IAAR,CAAaP,MAAb;AACAL,aAAKO,OAAL,CAAa,CAAb;AACAL,mBAAW,CAAX;AACH;;AAED;AACA,WAAOH,QAAQc,OAAR,EAAP;AACH","file":"quarterly.js","sourcesContent":["import { validateIfValueIsInteger, formatAsISODate, getCurrentYear, getMonthNamesForLocale } from '../helpers';\n\n/**\n * Generate Quarterly periods for a year.\n *\n * This will generate four quarters for a given year. The generated quarterly periods looks as follows.\n *\n * {\n *   startDate: '2017-10-01',\n *   endDate: '2017-12-31',\n *   name: 'October - December 2017',\n *   id: '2017Q4',\n * }\n *\n * The id is an unofficial ISO 8601 style notation for quarters. The old period generator used to have\n * and `iso` field but as some of the notations are not official ISO 8601 notations this property has been removed.\n * In most cases the `id` property contained the same value so this can be used instead.\n *\n * @private\n *\n * @param {Integer} [year=new Date().getFullYear()] The year to generate the daily periods for.\n * @param {String} [locale='en-gb'] The locale to use when getting month names.\n */\nexport function generateQuarterlyPeriodsForYear(year = getCurrentYear(), locale = 'en-gb') { // eslint-disable-line import/prefer-default-export\n    validateIfValueIsInteger(year);\n\n    const periods = [];\n    const date = new Date(`31 Dec ${year}`);\n    let quarter = 4;\n    const monthNames = getMonthNamesForLocale(locale);\n\n    while (date.getFullYear() === year) {\n        const period = {};\n        period.endDate = formatAsISODate(date);\n        date.setDate(0);\n        date.setDate(0);\n        date.setDate(1);\n        period.startDate = formatAsISODate(date);\n        period.name = `${monthNames[date.getMonth()]} - ${monthNames[date.getMonth() + 2]} ${date.getFullYear()}`;\n        period.id = `${year}Q${quarter}`;\n        periods.push(period);\n        date.setDate(0);\n        quarter -= 1;\n    }\n\n    // Quarters are collected backwards. So we reverse to get the chronological order.\n    return periods.reverse();\n}\n"]}