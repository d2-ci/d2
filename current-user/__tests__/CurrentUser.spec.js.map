{"version":3,"sources":["../../../src/current-user/__tests__/CurrentUser.spec.js"],"names":["describe","currentUser","userData","modelDefinitions","mockUserAuthorities","beforeEach","userGroup","list","jest","fn","mockReturnValue","Promise","resolve","authorities","type","userRole","organisationUnit","organisationUnitLevel","categoryOptionCombo","name","noCreateAllowedFor","clear","add","fixtures","get","spyOn","UserAuthorities","CurrentUser","create","it","expect","toBeInstanceOf","userSettings","UserSettings","toBeCalledWith","toBe","jobTitle","username","userCredentials","toBeUndefined","toBeDefined","created","userGroups","userRoles","organisationUnits","dataViewOrganisationUnits","getUserGroups","filter","paging","getUserRoles","getOrganisationUnits","fields","getDataViewOrganisationUnits","canCreate","canDelete","canUpdate","canCreatePublic","canCreatePrivate"],"mappings":"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","sourcesContent":["import fixtures from '../../__fixtures__/fixtures';\nimport CurrentUser from '../../current-user/CurrentUser';\nimport UserAuthorities from '../../current-user/UserAuthorities';\nimport UserSettings from '../../current-user/UserSettings';\nimport { noCreateAllowedFor } from '../../defaultConfig';\n\ndescribe('CurrentUser', () => {\n    let currentUser;\n    let userData;\n    let modelDefinitions;\n    let mockUserAuthorities;\n\n    beforeEach(() => {\n        modelDefinitions = {\n            userGroup: {\n                list: jest.fn().mockReturnValue(Promise.resolve([])),\n                authorities: [\n                    {\n                        type: 'CREATE_PUBLIC',\n                        authorities: ['F_USERGROUP_PUBLIC_ADD'],\n                    },\n                ],\n            },\n            userRole: {\n                list: jest.fn().mockReturnValue(Promise.resolve([])),\n            },\n            organisationUnit: {\n                list: jest.fn().mockReturnValue(Promise.resolve([])),\n                authorities: [\n                    {\n                        type: 'CREATE',\n                        authorities: [\n                            'F_ORGANISATIONUNIT_ADD',\n                        ],\n                    }, {\n                        type: 'DELETE',\n                        authorities: [\n                            'F_ORGANISATIONUNIT_DELETE',\n                        ],\n                    },\n                ],\n            },\n            organisationUnitLevel: {\n                authorities: [{ type: 'UPDATE', authorities: ['F_ORGANISATIONUNITLEVEL_UPDATE'] }],\n            },\n            categoryOptionCombo: {\n                name: 'categoryOptionCombo',\n                authorities: [\n                    {\n                        type: 'CREATE',\n                        authorities: [\n                            'F_CATEGORY_COMBO_PUBLIC_ADD',\n                            'F_CATEGORY_COMBO_PRIVATE_ADD',\n                        ],\n                    }, {\n                        type: 'DELETE',\n                        authorities: [\n                            'F_CATEGORY_COMBO_DELETE',\n                        ],\n                    },\n                ],\n            },\n        };\n\n        noCreateAllowedFor.clear();\n        noCreateAllowedFor.add('categoryOptionCombo');\n\n        userData = fixtures.get('/me');\n        jest.spyOn(UserAuthorities, 'create');\n        mockUserAuthorities = [\n            'F_ORGANISATIONUNIT_ADD',\n            'F_ORGANISATIONUNIT_DELETE',\n            'F_ORGANISATIONUNITLEVEL_UPDATE',\n            'F_USERGROUP_PUBLIC_ADD',\n            'F_CATEGORY_COMBO_PRIVATE_ADD',\n        ];\n        currentUser = CurrentUser.create(userData, mockUserAuthorities, modelDefinitions);\n    });\n\n    it('should be an instance of CurrentUser', () => {\n        expect(currentUser).toBeInstanceOf(CurrentUser);\n    });\n\n    it('should contain an instance of UserSettings', () => {\n        expect(currentUser.userSettings).toBeInstanceOf(UserSettings);\n    });\n\n    it('should have an authorities property', () => {\n        expect(currentUser.authorities).toBeInstanceOf(UserAuthorities);\n    });\n\n    describe('create', () => {\n        it('should call create on UserAuthorities with the user authorities array', () => {\n            expect(UserAuthorities.create).toBeCalledWith(mockUserAuthorities);\n        });\n    });\n\n    describe('properties', () => {\n        it('should have set the properties from the data object', () => {\n            expect(currentUser.name).toBe('John Traore');\n            expect(currentUser.jobTitle).toBe('Super user');\n        });\n\n        it('should not override the authorities property', () => {\n            currentUser = CurrentUser.create({ authorities: [] }, ['ALL'], modelDefinitions);\n            expect(currentUser.authorities).toBeInstanceOf(UserAuthorities);\n        });\n    });\n\n    describe('userCredentials', () => {\n        it('should set the userCredentials properties onto the currentUser object', () => {\n            expect(currentUser.username).toBe('admin');\n        });\n\n        it('should not set the userCredentials property onto the currentUser', () => {\n            expect(currentUser.userCredentials).toBeUndefined();\n        });\n\n        it('should not modify the passed data object', () => {\n            expect(userData.userCredentials).toBeDefined();\n        });\n\n        it('should keep the created date of the orignal user object', () => {\n            expect(currentUser.created).toBe('2013-04-18T15:15:08.407+0000');\n        });\n    });\n\n    describe('reference and collection properties', () => {\n        it('userGroups should not exist', () => {\n            expect(currentUser.userGroups).toBeUndefined();\n        });\n\n        it('userRoles should not exist', () => {\n            expect(currentUser.userRoles).toBeUndefined();\n        });\n\n        it('organisationUnits should not exist', () => {\n            expect(currentUser.organisationUnits).toBeUndefined();\n        });\n\n        it('dataViewOrganisationUnits should not exist', () => {\n            expect(currentUser.dataViewOrganisationUnits).toBeUndefined();\n        });\n    });\n\n    describe('getUserGroups', () => {\n        it('should return a promise', () => {\n            expect(currentUser.getUserGroups()).toBeInstanceOf(Promise);\n        });\n\n        it('should be called with the userGroup ids', () => {\n            currentUser.getUserGroups();\n\n            expect(modelDefinitions.userGroup.list)\n                .toBeCalledWith({ filter: ['id:in:[vAvEltyXGbD,wl5cDMuUhmF,QYrzIjSfI8z,jvrEwEJ2yZn]'], paging: false });\n        });\n    });\n\n    describe('getUserRoles', () => {\n        it('should return a promise', () => {\n            expect(currentUser.getUserRoles()).toBeInstanceOf(Promise);\n        });\n\n        it('should be called with the userRole ids', () => {\n            currentUser.getUserRoles();\n\n            expect(modelDefinitions.userRole.list).toBeCalledWith({ filter: ['id:in:[Ufph3mGRmMo]'], paging: false });\n        });\n    });\n\n    describe('getOrganisationUnits', () => {\n        it('should return a promise', () => {\n            expect(currentUser.getOrganisationUnits()).toBeInstanceOf(Promise);\n        });\n\n        it('should be called with organisationUnit ids', () => {\n            currentUser.getOrganisationUnits();\n\n            expect(modelDefinitions.organisationUnit.list)\n                .toBeCalledWith({\n                    fields: ':all,displayName,path,children[id,displayName,path,children::isNotEmpty]',\n                    filter: ['id:in:[ImspTQPwCqd]'],\n                    paging: false,\n                });\n        });\n    });\n\n    describe('getDataViewOrganisationUnits', () => {\n        it('should return a promise', () => {\n            expect(currentUser.getDataViewOrganisationUnits()).toBeInstanceOf(Promise);\n        });\n\n        it('should be called with organisationUnit ids', () => {\n            currentUser.getDataViewOrganisationUnits();\n\n            expect(modelDefinitions.organisationUnit.list)\n                .toBeCalledWith({\n                    fields: ':all,displayName,path,children[id,displayName,path,children::isNotEmpty]',\n                    filter: ['id:in:[]'],\n                    paging: false,\n                });\n        });\n    });\n\n    describe('canCreate', () => {\n        it('should return false if the no model is passed', () => {\n            expect(currentUser.canCreate()).toBe(false);\n        });\n\n        it('should return false for userRole', () => {\n            expect(currentUser.canCreate(modelDefinitions.userRole)).toBe(false);\n        });\n\n        it('should return true for organisationUnit', () => {\n            expect(currentUser.canCreate(modelDefinitions.organisationUnit)).toBe(true);\n        });\n\n        it('should return for userGroup', () => {\n            expect(currentUser.canCreate(modelDefinitions.userGroup)).toBe(true);\n        });\n\n        it('should return false when the modelDefinition is in the noCreateAllowedFor list', () => {\n            expect(currentUser.canCreate(modelDefinitions.categoryOptionCombo)).toBe(false);\n        });\n    });\n\n    describe('canDelete', () => {\n        it('should return false if the no model is passed', () => {\n            expect(currentUser.canDelete()).toBe(false);\n        });\n\n        it('should return false for userGroup', () => {\n            expect(currentUser.canDelete(modelDefinitions.userGroup)).toBe(false);\n        });\n\n        it('should return true for organisationUnit', () => {\n            expect(currentUser.canDelete(modelDefinitions.organisationUnit)).toBe(true);\n        });\n    });\n\n    describe('canUpdate', () => {\n        it('should return false if no model is passed', () => {\n            expect(currentUser.canUpdate()).toBe(false);\n        });\n\n        it('should return false for userRole', () => {\n            expect(currentUser.canCreate(modelDefinitions.userRole)).toBe(false);\n        });\n\n        it('should return true for userGroup', () => {\n            expect(currentUser.canUpdate(modelDefinitions.userGroup)).toBe(true);\n        });\n\n        it('should return true for organisationUnitLevel', () => {\n            expect(currentUser.canUpdate(modelDefinitions.organisationUnitLevel)).toBe(true);\n        });\n    });\n\n    describe('canCreatePublic', () => {\n        it('should return false if no model is passed', () => {\n            expect(currentUser.canCreatePublic()).toBe(false);\n        });\n\n        it('should return false for userGroup', () => {\n            expect(currentUser.canCreatePublic(modelDefinitions.userGroup)).toBe(true);\n        });\n\n        it('should return false for userGroup ' +\n            'even when the user has the authority due to the presence in the ignore list', () => {\n            noCreateAllowedFor.add('userGroup');\n\n            expect(currentUser.canCreatePrivate(modelDefinitions.userGroup)).toBe(false);\n        });\n    });\n\n    describe('canCreatePrivate', () => {\n        it('should return false if no model is passed', () => {\n            expect(currentUser.canCreatePrivate()).toBe(false);\n        });\n\n        it('should return false for userGroup', () => {\n            expect(currentUser.canCreatePrivate(modelDefinitions.userGroup)).toBe(false);\n        });\n    });\n});\n"],"file":"CurrentUser.spec.js"}