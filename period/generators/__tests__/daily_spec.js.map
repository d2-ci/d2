{"version":3,"sources":["../../../../src/period/generators/__tests__/daily_spec.js"],"names":["describe","it","expect","toHaveLength","periods","toEqual","startDate","endDate","name","id","toThrowError","Date"],"mappings":";;AAAA;;AACA;;AAEAA,QAAQ,CAAC,cAAD,EAAiB,YAAM;AAC3BA,EAAAA,QAAQ,CAAC,wBAAD,EAA2B,YAAM;AACrCC,IAAAA,EAAE,CAAC,sCAAD,EAAyC,YAAM;AAC7CC,MAAAA,MAAM,CAAC,wCAA4B,IAA5B,CAAD,CAAN,CAA0CC,YAA1C,CAAuD,GAAvD;AACH,KAFC,CAAF;AAIAF,IAAAA,EAAE,CAAC,oDAAD,EAAuD,YAAM;AAC3DC,MAAAA,MAAM,CAAC,wCAA4B,IAA5B,CAAD,CAAN,CAA0CC,YAA1C,CAAuD,GAAvD;AACH,KAFC,CAAF;AAIAF,IAAAA,EAAE,CAAC,iDAAD,EAAoD,YAAM;AACxD,UAAMG,OAAO,GAAG,wCAA4B,IAA5B,CAAhB;AAEAF,MAAAA,MAAM,CAACE,OAAO,CAAC,CAAD,CAAR,CAAN,CAAmBC,OAAnB,CAA2B;AACvBC,QAAAA,SAAS,EAAE,YADY;AAEvBC,QAAAA,OAAO,EAAE,YAFc;AAGvBC,QAAAA,IAAI,EAAE,iBAHiB;AAIvBC,QAAAA,EAAE,EAAE;AAJmB,OAA3B;AAMH,KATC,CAAF;AAWAR,IAAAA,EAAE,CAAC,6CAAD,EAAgD,YAAM;AACpDC,MAAAA,MAAM,CAAC;AAAA,eAAM,wCAA4B,CAAC,EAA7B,CAAN;AAAA,OAAD,CAAN,CAA+CQ,YAA/C;AACH,KAFC,CAAF;AAIAT,IAAAA,EAAE,CAAC,kDAAD,EAAqD,YAAM;AACzDC,MAAAA,MAAM,CAAC;AAAA,eAAM,wCAA4B,IAAIS,IAAJ,EAA5B,CAAN;AAAA,OAAD,CAAN,CAAsDD,YAAtD;AACH,KAFC,CAAF;AAIAT,IAAAA,EAAE,CAAC,2FAAD,EAA8F,YAAM;AAClGC,MAAAA,MAAM,CAAC,yCAAD,CAAN,CAAsCG,OAAtC,CAA8C,wCAA4B,8BAA5B,CAA9C;AACH,KAFC,CAAF;AAGH,GA/BO,CAAR;AAgCH,CAjCO,CAAR","sourcesContent":["import { generateDailyPeriodsForYear } from '../daily';\nimport { getCurrentYear } from '../../../../src/period/helpers';\n\ndescribe('Daily period', () => {\n    describe('generateDailyPeriods()', () => {\n        it('should return 365 day items for 2017', () => {\n            expect(generateDailyPeriodsForYear(2017)).toHaveLength(365);\n        });\n\n        it('should return 366 day items for a leap year (2016)', () => {\n            expect(generateDailyPeriodsForYear(2016)).toHaveLength(366);\n        });\n\n        it('should have the expected format for each period', () => {\n            const periods = generateDailyPeriodsForYear(2017);\n\n            expect(periods[0]).toEqual({\n                startDate: '2017-01-01',\n                endDate: '2017-01-01',\n                name: 'January 1, 2017',\n                id: '20170101',\n            });\n        });\n\n        it('should not allow years before the year zero', () => {\n            expect(() => generateDailyPeriodsForYear(-10)).toThrowError();\n        });\n\n        it('should throw an error when passing a Date object', () => {\n            expect(() => generateDailyPeriodsForYear(new Date())).toThrowError();\n        });\n\n        it('should generate the same periods when called without as when called with the current year', () => {\n            expect(generateDailyPeriodsForYear()).toEqual(generateDailyPeriodsForYear(getCurrentYear()));\n        });\n    });\n});\n"],"file":"daily_spec.js"}