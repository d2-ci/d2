{"version":3,"sources":["../../src/period/parser.js"],"names":["periodTypeRegex","Daily","Weekly","WeeklyWednesday","WeeklyThursday","WeeklySaturday","WeeklySunday","BiWeekly","Monthly","BiMonthly","Quarterly","SixMonthly","SixMonthlyApril","Yearly","FinancialApril","FinancialJuly","FinancialOct","weeklyMatcherParser","match","locale","year","parseInt","weekType","week","Error","weekTypeDiff","p","name","startMonthName","endMonthName","startDayNum","endDayNum","id","startDate","endDate","isValidDailyPeriod","month","day","regexMatchToPeriod","date","Date","getFullYear","getMonth","substr","getDate","biWeek","periodLength","monthNum","monthNames","lastDay","biMonth","startMonth","startMonthNum","endMonth","quarter","s","endMonthNum","getPeriodFromPeriodId","periodId","period","Object","keys","filter","periodType","test","hasOwnProperty","map"],"mappings":"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","sourcesContent":["import {\n    getMonthNamesForLocale,\n    formatAsISODate,\n    getLastDateOfMonth,\n    getFirstDateOfQuarter,\n    getLastDateOfQuarter,\n    computeWeekBasedPeriod,\n} from './helpers';\nimport { toLocaleDayFormat } from './formatters';\n\nconst periodTypeRegex = {\n    Daily: /^([0-9]{4})([0-9]{2})([0-9]{2})$/,          // YYYYMMDD\n    Weekly: /^([0-9]{4})()W([0-9]{1,2})$/,              // YYYY\"W\"[1-53]\n    WeeklyWednesday: /^([0-9]{4})(Wed)W([0-9]{1,2})$/,  // YYYY\"WedW\"[1-53]\n    WeeklyThursday: /^([0-9]{4})(Thu)W([0-9]{1,2})$/,   // YYYY\"ThuW\"[1-53]\n    WeeklySaturday: /^([0-9]{4})(Sat)W([0-9]{1,2})$/,   // YYYY\"SatW\"[1-53]\n    WeeklySunday: /^([0-9]{4})(Sun)W([0-9]{1,2})$/,     // YYYY\"SunW\"[1-53]\n    BiWeekly: /^([0-9]{4})BiW([0-9]{1,2})$/,            // YYYY\"BiW\"[1-27]\n    Monthly: /^([0-9]{4})([0-9]{2})$/,                  // YYYYMM\n    BiMonthly: /^([0-9]{4})([0-9]{2})B$/,               // YYYY0[1-6]\"B\"\n    Quarterly: /^([0-9]{4})Q([1234])$/,                 // YYYY\"Q\"[1-4]\n    SixMonthly: /^([0-9]{4})S([12])$/,                  // YYYY\"S\"[1/2]\n    SixMonthlyApril: /^([0-9]{4})AprilS([12])$/,        // YYYY\"AprilS\"[1/2]\n    Yearly: /^([0-9]{4})$/,                             // YYYY\n    FinancialApril: /^([0-9]{4})April$/,                // YYYY\"April\"\n    FinancialJuly: /^([0-9]{4})July$/,                  // YYYY\"July\"\n    FinancialOct: /^([0-9]{4})Oct$/,                    // YYYY\"Oct\"\n};\n\n/* eslint-disable complexity */\nconst weeklyMatcherParser = (match, locale = 'en') => {\n    const year = parseInt(match[1], 10);\n    const weekType = match[2];\n    const week = parseInt(match[3], 10);\n\n    if (week < 1 || week > 53) {\n        throw new Error('Invalid week number');\n    }\n\n    let weekTypeDiff = 0;\n    switch (weekType) {\n    case 'Wed': weekTypeDiff = 2; break;\n    case 'Thu': weekTypeDiff = 3; break;\n    case 'Sat': weekTypeDiff = -2; break;\n    case 'Sun': weekTypeDiff = -1; break;\n    default: break;\n    }\n\n    const p = computeWeekBasedPeriod({ year, week, locale, weekTypeDiff });\n\n    const name = p.startMonthName === p.endMonthName\n        ? `${p.year} W${p.week} ${p.startMonthName} ${p.startDayNum} - ${p.endDayNum}`\n        : `${p.year} W${p.week} ${p.startMonthName} ${p.startDayNum} - ${p.endMonthName} ${p.endDayNum}`;\n\n    return {\n        id: `${p.year}${weekType}W${p.week}`,\n        name,\n        startDate: p.startDate,\n        endDate: p.endDate,\n    };\n};\n\nconst isValidDailyPeriod = (month, year, day) =>\n    month > 11 || month < 0 ||\n    day > 31 || day < 1 ||\n    year < 1000 || year > 5000;\n/* eslint-enable */\n\nconst regexMatchToPeriod = {\n    Daily: (match, locale = 'en') => {\n        const year = parseInt(match[1], 10);\n        const month = parseInt(match[2], 10) - 1;\n        const day = parseInt(match[3], 10);\n        if (isValidDailyPeriod(month, year, day)) {\n            throw new Error('Invalid Daily period');\n        }\n        const date = new Date(match[1], match[2] - 1, match[3]);\n        return {\n            id: `${date.getFullYear()}${(`0${date.getMonth() + 1}`).substr(-2)}${(`0${date.getDate()}`).substr(-2)}`,\n            name: toLocaleDayFormat(date, locale),\n            startDate: formatAsISODate(date),\n            endDate: formatAsISODate(date),\n        };\n    },\n    Weekly: weeklyMatcherParser,\n    WeeklyWednesday: weeklyMatcherParser,\n    WeeklyThursday: weeklyMatcherParser,\n    WeeklySaturday: weeklyMatcherParser,\n    WeeklySunday: weeklyMatcherParser,\n    BiWeekly: (match, locale = 'en') => {\n        const year = parseInt(match[1], 10);\n        let biWeek = parseInt(match[2], 10);\n\n        if (biWeek < 1 || biWeek > 27) {\n            throw new Error('Invalid BiWeek number');\n        }\n\n        const week = (biWeek * 2) - 1;\n        const p = computeWeekBasedPeriod({ year, week, locale, periodLength: 13 });\n        biWeek = (p.week + 1) / 2;\n\n        const name = p.startMonthName === p.endMonthName\n            ? `${p.year} BiWeek ${biWeek} ${p.startMonthName} ${p.startDayNum} - ${p.endDayNum}`\n            : `${p.year} BiWeek ${biWeek} ${p.startMonthName} ${p.startDayNum} - ${p.endMonthName} ${p.endDayNum}`;\n\n        return {\n            id: `${p.year}BiW${biWeek}`,\n            name,\n            startDate: p.startDate,\n            endDate: p.endDate,\n        };\n    },\n    Monthly: (match, locale = 'en') => {\n        const id = match[0];\n        const year = parseInt(match[1], 10);\n        const month = parseInt(match[2], 10) - 1;\n        if (month > 11 || month < 0) {\n            throw new Error('Invalid month number');\n        }\n        const monthNum = `0${month + 1}`.substr(-2);\n        const monthNames = getMonthNamesForLocale(locale);\n        const lastDay = getLastDateOfMonth(year, month);\n        return {\n            id,\n            name: `${monthNames[month]} ${year}`,\n            startDate: `${year}-${monthNum}-01`,\n            endDate: formatAsISODate(lastDay),\n        };\n    },\n    BiMonthly: (match, locale = 'en') => {\n        const id = match[0];\n        const year = parseInt(match[1], 10);\n        const biMonth = parseInt(match[2], 10);\n        if (biMonth < 1 || biMonth > 6) {\n            throw new Error('Invalid BiMonth number');\n        }\n        const startMonth = (biMonth - 1) * 2;\n        const startMonthNum = `0${startMonth + 1}`.substr(-2);\n        const endMonth = startMonth + 1;\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id,\n            name: `${monthNames[startMonth]} - ${monthNames[endMonth]} ${year}`,\n            startDate: `${year}-${startMonthNum}-01`,\n            endDate: formatAsISODate(getLastDateOfMonth(year, endMonth)),\n        };\n    },\n    Quarterly: (match, locale = 'en') => {\n        const id = match[0];\n        const year = parseInt(match[1], 10);\n        const quarter = parseInt(match[2], 10);\n        const startMonth = (quarter - 1) * 3;\n        const endMonth = (quarter * 3) - 1;\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id,\n            name: `${monthNames[startMonth]} - ${monthNames[endMonth]} ${year}`,\n            startDate: formatAsISODate(getFirstDateOfQuarter(year, quarter)),\n            endDate: formatAsISODate(getLastDateOfQuarter(year, quarter)),\n        };\n    },\n    SixMonthly: (match, locale = 'en') => {\n        const id = match[0];\n        const year = match[1];\n        const s = parseInt(match[2], 10) - 1;\n        const startMonth = 6 * s;\n        const endMonth = (6 * s) + 6;\n        const endMonthNum = `0${endMonth}`.substr(-2);\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id,\n            name: `${monthNames[startMonth]} - ${monthNames[endMonth - 1]} ${year}`,\n            startDate: `${year}-0${(startMonth + 1)}-01`,\n            endDate: `${year}-${(endMonthNum)}-${s === 0 ? '30' : '31'}`,\n        };\n    },\n    SixMonthlyApril: (match, locale = 'en') => {\n        const id = match[0];\n        const year = parseInt(match[1], 10);\n        const s = parseInt(match[2], 10) - 1;\n        const startMonth = s === 0 ? 4 : 10;\n        const startMonthNum = `0${startMonth}`.substr(-2);\n        const endMonth = s === 0 ? 9 : 3;\n        const endMonthNum = `0${endMonth}`.substr(-2);\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id,\n            name: s === 0\n                ? `${monthNames[startMonth - 1]} - ${monthNames[endMonth - 1]} ${year}`\n                : `${monthNames[startMonth - 1]} ${year} - ${monthNames[endMonth - 1]} ${year + 1}`,\n            startDate: `${year}-${(startMonthNum)}-01`,\n            endDate: `${year + s}-${(endMonthNum)}-${s === 0 ? '30' : '31'}`,\n        };\n    },\n    Yearly: match => ({\n        id: match[0],\n        name: match[1],\n        startDate: `${match[1]}-01-01`,\n        endDate: `${match[1]}-12-31`,\n    }),\n    FinancialApril: (match, locale = 'en') => {\n        const year = parseInt(match[1], 10);\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id: match[0],\n            name: `${monthNames[3]} ${year} - ${monthNames[2]} ${year + 1}`,\n            startDate: `${year}-04-01`,\n            endDate: `${year + 1}-03-31`,\n        };\n    },\n    FinancialJuly: (match, locale = 'en') => {\n        const year = parseInt(match[1], 10);\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id: match[0],\n            name: `${monthNames[6]} ${year} - ${monthNames[5]} ${year + 1}`,\n            startDate: `${year}-07-01`,\n            endDate: `${year + 1}-06-30`,\n        };\n    },\n    FinancialOct: (match, locale = 'en') => {\n        const year = parseInt(match[1], 10);\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id: match[0],\n            name: `${monthNames[9]} ${year} - ${monthNames[8]} ${year + 1}`,\n            startDate: `${year}-10-01`,\n            endDate: `${year + 1}-09-30`,\n        };\n    },\n};\n\nexport function getPeriodFromPeriodId(periodId, locale = 'en') {\n    const period = Object.keys(periodTypeRegex)\n        .filter(periodType => periodTypeRegex[periodType].test(periodId)\n            && regexMatchToPeriod.hasOwnProperty(periodType),\n        )\n        .map(periodType => regexMatchToPeriod[periodType](periodId.match(periodTypeRegex[periodType]), locale))[0];\n\n    if (!period) {\n        throw new Error('Invalid period format');\n    }\n\n    return period;\n}\n\nexport default getPeriodFromPeriodId;\n"],"file":"parser.js"}