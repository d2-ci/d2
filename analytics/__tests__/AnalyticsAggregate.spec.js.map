{"version":3,"sources":["../../../src/analytics/__tests__/AnalyticsAggregate.spec.js"],"names":["jest","mock","debugSqlFixture","describe","aggregate","request","mockApi","fixture","beforeEach","MockApi","getApi","mockClear","AnalyticsAggregate","it","expect","toThrowErrorMatchingSnapshot","api","toBe","apiMockObject","AnalyticsRequest","addDataDimension","addPeriodDimension","addOrgUnitDimension","fixtures","get","mockReturnValue","Promise","resolve","getDataValueSet","toBeInstanceOf","Function","then","data","dataValues","length","toEqual","addPeriodFilter","addOrgUnitFilter","getDebugSql","addDimension","withStartDate","withEndDate","getRawData","metaData","items","dimensions","width","height"],"mappings":"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","sourcesContent":["import fixtures from '../../__fixtures__/fixtures';\nimport MockApi from '../../api/Api';\nimport AnalyticsRequest from '../AnalyticsRequest';\nimport AnalyticsAggregate from '../AnalyticsAggregate';\n\njest.mock('../../api/Api'); // src/api/__mocks/Api.js\n\nconst debugSqlFixture = `select de.name as de_name, de.uid as de_uid, de.dataelementid as de_id, pe.startdate as\nstart_date, pe.enddate as end_date, pt.name as pt_name, ou.name as ou_name, ou.uid as ou_uid, ou.organisationunitid as\nou_id, coc.name as coc_name, coc.uid as coc_uid, coc.categoryoptioncomboid as coc_id, aoc.name as aoc_name, aoc.uid as\naoc_uid, aoc.categoryoptioncomboid as aoc_id, dv.value as datavalue from datavalue dv inner join dataelement de on\ndv.dataelementid = de.dataelementid inner join period pe on dv.periodid = pe.periodid inner join periodtype pt on\npe.periodtypeid = pt.periodtypeid inner join organisationunit ou on dv.sourceid = ou.organisationunitid inner join\ncategoryoptioncombo coc on dv.categoryoptioncomboid = coc.categoryoptioncomboid inner join categoryoptioncombo aoc on\ndv.attributeoptioncomboid = aoc.categoryoptioncomboid where dv.dataelementid in (359596,359597) and ((pe.startdate >=\n    '2016-01-01' and pe.enddate <= '2016-03-31') or (pe.startdate >= '2016-04-01' and pe.enddate <= '2016-06-30') ) and\n((dv.sourceid in (select organisationunitid from _orgunitstructure where idlevel2 = 264)) ) and dv.deleted is false\nlimit 100000`;\n\ndescribe('Analytics.aggregate', () => {\n    let aggregate;\n    let request;\n    let mockApi;\n    let fixture;\n\n    beforeEach(() => {\n        mockApi = MockApi.getApi();\n        MockApi.mockClear();\n        aggregate = new AnalyticsAggregate();\n    });\n\n    it('should not be allowed to be called without new', () => {\n        expect(() => AnalyticsAggregate()).toThrowErrorMatchingSnapshot();\n    });\n\n    it('should add the mockApi onto the AnalyticsAggregate instance', () => {\n        expect(aggregate.api).toBe(mockApi);\n    });\n\n    it('should use the api object when it is passed', () => {\n        const apiMockObject = {};\n\n        aggregate = new AnalyticsAggregate(apiMockObject);\n\n        expect(aggregate.api).toBe(apiMockObject);\n    });\n\n    describe('.getDataValueSet()', () => {\n        beforeEach(() => {\n            aggregate = new AnalyticsAggregate(new MockApi());\n\n            request = new AnalyticsRequest();\n\n            request\n                .addDataDimension(['fbfJHSPpUQD.pq2XI5kz2BY', 'fbfJHSPpUQD.PT59n8BQbqM'])\n                .addPeriodDimension('LAST_MONTH')\n                .addOrgUnitDimension('ImspTQPwCqd');\n\n            fixture = fixtures.get('/api/analytics/dataValueSet');\n\n            mockApi.get.mockReturnValue(Promise.resolve(fixture));\n        });\n\n        it('should be a function', () => {\n            expect(aggregate.getDataValueSet).toBeInstanceOf(Function);\n        });\n\n        it('should resolve a promise with data', () => aggregate.getDataValueSet(request)\n            .then((data) => {\n                expect(data.dataValues.length).toEqual(fixture.dataValues.length);\n            }));\n    });\n\n    describe('.getDebugSql()', () => {\n        beforeEach(() => {\n            aggregate = new AnalyticsAggregate(new MockApi());\n\n            request = new AnalyticsRequest();\n\n            request\n                .addDataDimension(['fbfJHSPpUQD', 'cYeuwXTCPkU'])\n                .addPeriodFilter(['2016Q1', '2016Q2'])\n                .addOrgUnitFilter('O6uvpzGd5pu');\n\n            mockApi.get.mockReturnValue(Promise.resolve(debugSqlFixture));\n        });\n\n        it('should be a function', () => {\n            expect(aggregate.getDebugSql).toBeInstanceOf(Function);\n        });\n\n        it('should resolve a promise with data', () => aggregate.getDebugSql(request)\n            .then((data) => {\n                expect(data).toEqual(debugSqlFixture);\n            }));\n    });\n\n    describe('.getRawData', () => {\n        beforeEach(() => {\n            aggregate = new AnalyticsAggregate(new MockApi());\n\n            request = new AnalyticsRequest();\n\n            request\n                .addDataDimension(['fbfJHSPpUQD', 'cYeuwXTCPkU', 'Jtf34kNZhzP'])\n                .addDimension('J5jldMd8OHv')\n                .addDimension('Bpx0589u8y0')\n                .addOrgUnitDimension(['O6uvpzGd5pu', 'fdc6uOvgoji'])\n                .withStartDate('2016-01-01')\n                .withEndDate('2016-01-31');\n\n            fixture = fixtures.get('/api/analytics/rawData');\n\n            mockApi.get.mockReturnValue(Promise.resolve(fixture));\n        });\n\n        it('should be a function', () => {\n            expect(aggregate.getRawData).toBeInstanceOf(Function);\n        });\n\n        it('should resolve a promise with data', () => aggregate.getRawData(request)\n            .then((data) => {\n                expect(data.metaData.items).toEqual(fixture.metaData.items);\n                expect(data.metaData.dimensions).toEqual(fixture.metaData.dimensions);\n                expect(data.width).toEqual(0);\n                expect(data.height).toEqual(0);\n            }));\n    });\n});\n"],"file":"AnalyticsAggregate.spec.js"}