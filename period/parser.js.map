{"version":3,"sources":["../../src/period/parser.js"],"names":["getPeriodFromPeriodId","periodTypeRegex","Daily","Weekly","WeeklyWednesday","WeeklyThursday","WeeklySaturday","WeeklySunday","BiWeekly","Monthly","BiMonthly","Quarterly","SixMonthly","SixMonthlyApril","Yearly","FinancialApril","FinancialJuly","FinancialOct","weeklyMatcherParser","match","locale","year","parseInt","weekType","week","Error","weekTypeDiff","p","name","startMonthName","endMonthName","startDayNum","endDayNum","id","startDate","endDate","isValidDailyPeriod","month","day","regexMatchToPeriod","date","Date","getFullYear","getMonth","substr","getDate","biWeek","periodLength","monthNum","monthNames","lastDay","biMonth","startMonth","startMonthNum","endMonth","quarter","s","endMonthNum","periodId","period","Object","keys","filter","periodType","test","hasOwnProperty","map"],"mappings":"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","file":"parser.js","sourcesContent":["import {\n    getMonthNamesForLocale,\n    formatAsISODate,\n    getLastDateOfMonth,\n    getFirstDateOfQuarter,\n    getLastDateOfQuarter,\n    computeWeekBasedPeriod,\n} from './helpers';\nimport { toLocaleDayFormat } from './formatters';\n\nconst periodTypeRegex = {\n    Daily: /^([0-9]{4})([0-9]{2})([0-9]{2})$/,          // YYYYMMDD\n    Weekly: /^([0-9]{4})()W([0-9]{1,2})$/,              // YYYY\"W\"[1-53]\n    WeeklyWednesday: /^([0-9]{4})(Wed)W([0-9]{1,2})$/,  // YYYY\"WedW\"[1-53]\n    WeeklyThursday: /^([0-9]{4})(Thu)W([0-9]{1,2})$/,   // YYYY\"ThuW\"[1-53]\n    WeeklySaturday: /^([0-9]{4})(Sat)W([0-9]{1,2})$/,   // YYYY\"SatW\"[1-53]\n    WeeklySunday: /^([0-9]{4})(Sun)W([0-9]{1,2})$/,     // YYYY\"SunW\"[1-53]\n    BiWeekly: /^([0-9]{4})BiW([0-9]{1,2})$/,            // YYYY\"BiW\"[1-27]\n    Monthly: /^([0-9]{4})([0-9]{2})$/,                  // YYYYMM\n    BiMonthly: /^([0-9]{4})([0-9]{2})B$/,               // YYYY0[1-6]\"B\"\n    Quarterly: /^([0-9]{4})Q([1234])$/,                 // YYYY\"Q\"[1-4]\n    SixMonthly: /^([0-9]{4})S([12])$/,                  // YYYY\"S\"[1/2]\n    SixMonthlyApril: /^([0-9]{4})AprilS([12])$/,        // YYYY\"AprilS\"[1/2]\n    Yearly: /^([0-9]{4})$/,                             // YYYY\n    FinancialApril: /^([0-9]{4})April$/,                // YYYY\"April\"\n    FinancialJuly: /^([0-9]{4})July$/,                  // YYYY\"July\"\n    FinancialOct: /^([0-9]{4})Oct$/,                    // YYYY\"Oct\"\n};\n\n/* eslint-disable complexity */\nconst weeklyMatcherParser = (match, locale = 'en') => {\n    const year = parseInt(match[1], 10);\n    const weekType = match[2];\n    const week = parseInt(match[3], 10);\n\n    if (week < 1 || week > 53) {\n        throw new Error('Invalid week number');\n    }\n\n    let weekTypeDiff = 0;\n    switch (weekType) {\n    case 'Wed': weekTypeDiff = 2; break;\n    case 'Thu': weekTypeDiff = 3; break;\n    case 'Sat': weekTypeDiff = -2; break;\n    case 'Sun': weekTypeDiff = -1; break;\n    default: break;\n    }\n\n    const p = computeWeekBasedPeriod({ year, week, locale, weekTypeDiff });\n\n    const name = p.startMonthName === p.endMonthName\n        ? `${p.year} W${p.week} ${p.startMonthName} ${p.startDayNum} - ${p.endDayNum}`\n        : `${p.year} W${p.week} ${p.startMonthName} ${p.startDayNum} - ${p.endMonthName} ${p.endDayNum}`;\n\n    return {\n        id: `${p.year}${weekType}W${p.week}`,\n        name,\n        startDate: p.startDate,\n        endDate: p.endDate,\n    };\n};\n\nconst isValidDailyPeriod = (month, year, day) =>\n    month > 11 || month < 0 ||\n    day > 31 || day < 1 ||\n    year < 1000 || year > 5000;\n/* eslint-enable */\n\nconst regexMatchToPeriod = {\n    Daily: (match, locale = 'en') => {\n        const year = parseInt(match[1], 10);\n        const month = parseInt(match[2], 10) - 1;\n        const day = parseInt(match[3], 10);\n        if (isValidDailyPeriod(month, year, day)) {\n            throw new Error('Invalid Daily period');\n        }\n        const date = new Date(match[1], match[2] - 1, match[3]);\n        return {\n            id: `${date.getFullYear()}${(`0${date.getMonth() + 1}`).substr(-2)}${(`0${date.getDate()}`).substr(-2)}`,\n            name: toLocaleDayFormat(date, locale),\n            startDate: formatAsISODate(date),\n            endDate: formatAsISODate(date),\n        };\n    },\n    Weekly: weeklyMatcherParser,\n    WeeklyWednesday: weeklyMatcherParser,\n    WeeklyThursday: weeklyMatcherParser,\n    WeeklySaturday: weeklyMatcherParser,\n    WeeklySunday: weeklyMatcherParser,\n    BiWeekly: (match, locale = 'en') => {\n        const year = parseInt(match[1], 10);\n        let biWeek = parseInt(match[2], 10);\n\n        if (biWeek < 1 || biWeek > 27) {\n            throw new Error('Invalid BiWeek number');\n        }\n\n        const week = (biWeek * 2) - 1;\n        const p = computeWeekBasedPeriod({ year, week, locale, periodLength: 13 });\n        biWeek = (p.week + 1) / 2;\n\n        const name = p.startMonthName === p.endMonthName\n            ? `${p.year} BiWeek ${biWeek} ${p.startMonthName} ${p.startDayNum} - ${p.endDayNum}`\n            : `${p.year} BiWeek ${biWeek} ${p.startMonthName} ${p.startDayNum} - ${p.endMonthName} ${p.endDayNum}`;\n\n        return {\n            id: `${p.year}BiW${biWeek}`,\n            name,\n            startDate: p.startDate,\n            endDate: p.endDate,\n        };\n    },\n    Monthly: (match, locale = 'en') => {\n        const id = match[0];\n        const year = parseInt(match[1], 10);\n        const month = parseInt(match[2], 10) - 1;\n        if (month > 11 || month < 0) {\n            throw new Error('Invalid month number');\n        }\n        const monthNum = `0${month + 1}`.substr(-2);\n        const monthNames = getMonthNamesForLocale(locale);\n        const lastDay = getLastDateOfMonth(year, month);\n        return {\n            id,\n            name: `${monthNames[month]} ${year}`,\n            startDate: `${year}-${monthNum}-01`,\n            endDate: formatAsISODate(lastDay),\n        };\n    },\n    BiMonthly: (match, locale = 'en') => {\n        const id = match[0];\n        const year = parseInt(match[1], 10);\n        const biMonth = parseInt(match[2], 10);\n        if (biMonth < 1 || biMonth > 6) {\n            throw new Error('Invalid BiMonth number');\n        }\n        const startMonth = (biMonth - 1) * 2;\n        const startMonthNum = `0${startMonth + 1}`.substr(-2);\n        const endMonth = startMonth + 1;\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id,\n            name: `${monthNames[startMonth]} - ${monthNames[endMonth]} ${year}`,\n            startDate: `${year}-${startMonthNum}-01`,\n            endDate: formatAsISODate(getLastDateOfMonth(year, endMonth)),\n        };\n    },\n    Quarterly: (match, locale = 'en') => {\n        const id = match[0];\n        const year = parseInt(match[1], 10);\n        const quarter = parseInt(match[2], 10);\n        const startMonth = (quarter - 1) * 3;\n        const endMonth = (quarter * 3) - 1;\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id,\n            name: `${monthNames[startMonth]} - ${monthNames[endMonth]} ${year}`,\n            startDate: formatAsISODate(getFirstDateOfQuarter(year, quarter)),\n            endDate: formatAsISODate(getLastDateOfQuarter(year, quarter)),\n        };\n    },\n    SixMonthly: (match, locale = 'en') => {\n        const id = match[0];\n        const year = match[1];\n        const s = parseInt(match[2], 10) - 1;\n        const startMonth = 6 * s;\n        const endMonth = (6 * s) + 6;\n        const endMonthNum = `0${endMonth}`.substr(-2);\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id,\n            name: `${monthNames[startMonth]} - ${monthNames[endMonth - 1]} ${year}`,\n            startDate: `${year}-0${(startMonth + 1)}-01`,\n            endDate: `${year}-${(endMonthNum)}-${s === 0 ? '30' : '31'}`,\n        };\n    },\n    SixMonthlyApril: (match, locale = 'en') => {\n        const id = match[0];\n        const year = parseInt(match[1], 10);\n        const s = parseInt(match[2], 10) - 1;\n        const startMonth = s === 0 ? 4 : 10;\n        const startMonthNum = `0${startMonth}`.substr(-2);\n        const endMonth = s === 0 ? 9 : 3;\n        const endMonthNum = `0${endMonth}`.substr(-2);\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id,\n            name: s === 0\n                ? `${monthNames[startMonth - 1]} - ${monthNames[endMonth - 1]} ${year}`\n                : `${monthNames[startMonth - 1]} ${year} - ${monthNames[endMonth - 1]} ${year + 1}`,\n            startDate: `${year}-${(startMonthNum)}-01`,\n            endDate: `${year + s}-${(endMonthNum)}-${s === 0 ? '30' : '31'}`,\n        };\n    },\n    Yearly: match => ({\n        id: match[0],\n        name: match[1],\n        startDate: `${match[1]}-01-01`,\n        endDate: `${match[1]}-12-31`,\n    }),\n    FinancialApril: (match, locale = 'en') => {\n        const year = parseInt(match[1], 10);\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id: match[0],\n            name: `${monthNames[3]} ${year} - ${monthNames[2]} ${year + 1}`,\n            startDate: `${year}-04-01`,\n            endDate: `${year + 1}-03-31`,\n        };\n    },\n    FinancialJuly: (match, locale = 'en') => {\n        const year = parseInt(match[1], 10);\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id: match[0],\n            name: `${monthNames[6]} ${year} - ${monthNames[5]} ${year + 1}`,\n            startDate: `${year}-07-01`,\n            endDate: `${year + 1}-06-30`,\n        };\n    },\n    FinancialOct: (match, locale = 'en') => {\n        const year = parseInt(match[1], 10);\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id: match[0],\n            name: `${monthNames[9]} ${year} - ${monthNames[8]} ${year + 1}`,\n            startDate: `${year}-10-01`,\n            endDate: `${year + 1}-09-30`,\n        };\n    },\n};\n\nexport function getPeriodFromPeriodId(periodId, locale = 'en') {\n    const period = Object.keys(periodTypeRegex)\n        .filter(periodType => periodTypeRegex[periodType].test(periodId)\n            && regexMatchToPeriod.hasOwnProperty(periodType),\n        )\n        .map(periodType => regexMatchToPeriod[periodType](periodId.match(periodTypeRegex[periodType]), locale))[0];\n\n    if (!period) {\n        throw new Error('Invalid period format');\n    }\n\n    return period;\n}\n\nexport default getPeriodFromPeriodId;\n"]}