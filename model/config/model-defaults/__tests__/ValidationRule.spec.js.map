{"version":3,"sources":["../../../../../src/model/config/model-defaults/__tests__/ValidationRule.spec.js"],"names":["describe","validationRule","beforeEach","ValidationRuleDefinition","ModelDefinition","createFromSchema","fixtures","get","create","it","expect","importance","toBe","periodType","operator","correctValues","missingValueStrategy","description","expression","leftSide","toEqual","rightSide"],"mappings":";;AAAA;;AACA;;;;AAEAA,QAAQ,CAAC,yBAAD,EAA4B,YAAM;AACtC,MAAIC,cAAJ;AAEAC,EAAAA,UAAU,CAAC,YAAM;AACb,QAAMC,wBAAwB,GAAGC,yBAAgBC,gBAAhB,CAAiCC,kBAASC,GAAT,CAAa,6BAAb,CAAjC,CAAjC;;AACAN,IAAAA,cAAc,GAAGE,wBAAwB,CAACK,MAAzB,EAAjB;AACH,GAHS,CAAV;AAKAC,EAAAA,EAAE,CAAC,0CAAD,EAA6C,YAAM;AACjDC,IAAAA,MAAM,CAACT,cAAc,CAACU,UAAhB,CAAN,CAAkCC,IAAlC,CAAuC,QAAvC;AACH,GAFC,CAAF;AAIAH,EAAAA,EAAE,CAAC,2CAAD,EAA8C,YAAM;AAClDC,IAAAA,MAAM,CAACT,cAAc,CAACY,UAAhB,CAAN,CAAkCD,IAAlC,CAAuC,SAAvC;AACH,GAFC,CAAF;AAIAH,EAAAA,EAAE,CAAC,8CAAD,EAAiD,YAAM;AACrDC,IAAAA,MAAM,CAACT,cAAc,CAACa,QAAhB,CAAN,CAAgCF,IAAhC,CAAqC,cAArC;AACH,GAFC,CAAF;AAIAH,EAAAA,EAAE,CAAC,kDAAD,EAAqD,YAAM;AACzD,QAAMM,aAAa,GAAG;AAClBC,MAAAA,oBAAoB,EAAE,YADJ;AAElBC,MAAAA,WAAW,EAAE,EAFK;AAGlBC,MAAAA,UAAU,EAAE;AAHM,KAAtB;AAMAR,IAAAA,MAAM,CAACT,cAAc,CAACkB,QAAhB,CAAN,CAAgCC,OAAhC,CAAwCL,aAAxC;AACH,GARC,CAAF;AAUAN,EAAAA,EAAE,CAAC,mDAAD,EAAsD,YAAM;AAC1D,QAAMM,aAAa,GAAG;AAClBC,MAAAA,oBAAoB,EAAE,YADJ;AAElBC,MAAAA,WAAW,EAAE,EAFK;AAGlBC,MAAAA,UAAU,EAAE;AAHM,KAAtB;AAMAR,IAAAA,MAAM,CAACT,cAAc,CAACoB,SAAhB,CAAN,CAAiCD,OAAjC,CAAyCL,aAAzC;AACH,GARC,CAAF;AASH,CAvCO,CAAR","sourcesContent":["import ModelDefinition from '../../../ModelDefinition';\nimport fixtures from '../../../../__fixtures__/fixtures';\n\ndescribe('ValidationRule defaults', () => {\n    let validationRule;\n\n    beforeEach(() => {\n        const ValidationRuleDefinition = ModelDefinition.createFromSchema(fixtures.get('/api/schemas/validationRule'));\n        validationRule = ValidationRuleDefinition.create();\n    });\n\n    it('should have `importance` set to `MEDIUM`', () => {\n        expect(validationRule.importance).toBe('MEDIUM');\n    });\n\n    it('should have `periodType` set to `Monthly`', () => {\n        expect(validationRule.periodType).toBe('Monthly');\n    });\n\n    it('should have `operator` set to `not_equal_to`', () => {\n        expect(validationRule.operator).toBe('not_equal_to');\n    });\n\n    it('should have `leftSide` set to the correct values', () => {\n        const correctValues = {\n            missingValueStrategy: 'NEVER_SKIP',\n            description: '',\n            expression: '',\n        };\n\n        expect(validationRule.leftSide).toEqual(correctValues);\n    });\n\n    it('should have `rightSide` set to the correct values', () => {\n        const correctValues = {\n            missingValueStrategy: 'NEVER_SKIP',\n            description: '',\n            expression: '',\n        };\n\n        expect(validationRule.rightSide).toEqual(correctValues);\n    });\n});\n"],"file":"ValidationRule.spec.js"}