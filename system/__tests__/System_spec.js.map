{"version":3,"sources":["../../../src/system/__tests__/System_spec.js"],"names":["jest","mock","describe","system","apiMock","beforeEach","MockApi","System","SystemSettings","SystemConfiguration","afterEach","mockReset","it","expect","toBeInstanceOf","toThrowErrorMatchingSnapshot","configuration","settings","appsFromApi","version","name","description","icons","developer","url","company","email","activities","dhis","href","folderName","launchUrl","key","launch_path","default_locale","get","fn","mockReturnValue","Promise","resolve","loadInstalledApps","then","installedApps","toEqual","reject","catch","error","message","toBe","apps","appendSpy","formData","spyOn","append","global","FormData","undefined","uploadApp","xhrOptions","contentType","processData","xhr","post","toBeCalledWith","progressCallbackSpy","xhrMock","upload","XMLHttpRequest","calls","call","onprogress","not","toBeCalled","lengthComputable","loaded","total","sysVersionMinusTwo","sysVersionMinusOne","sysVersion","sysVersionPlusOne","sysVersionPlusTwo","setSystemInfo","fixtures","loadAppStore","expectedApps","filter","app","i","includes","returnedApps","versions","min_platform_version","max_platform_version","minDhisVersion","maxDhisVersion","length","installAppVersion","errorMessage","dataType","response","toBeUndefined","delete","uninstallApp","mockReturnValueOnce","reloadApps","update","loadInstalledAppsPromise","systemVersion","appVersion","major","minor","snapshot","compareVersions","mockRestore","isVersionCompatible","Object","assign","getSystem"],"mappings":"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","sourcesContent":["import fixtures from '../../__fixtures__/fixtures';\nimport MockApi from '../../api/Api';\nimport System from '../System';\nimport SystemConfiguration from '../SystemConfiguration';\nimport SystemSettings from '../SystemSettings';\n\njest.mock('../../api/Api');\n\ndescribe('System', () => {\n    let system;\n    let apiMock;\n\n    beforeEach(() => {\n        apiMock = new MockApi();\n        system = new System(new SystemSettings(), new SystemConfiguration());\n    });\n\n    afterEach(() => {\n        MockApi.mockReset();\n    });\n\n    it('should be an instance of System', () => {\n        expect(system).toBeInstanceOf(System);\n    });\n\n    it('should not be allowed to be called without new', () => {\n        expect(() => System()).toThrowErrorMatchingSnapshot();\n    });\n\n    it('should contain an instance of SystemConfiguration', () => {\n        expect(system.configuration).toBeInstanceOf(SystemConfiguration);\n    });\n\n    it('should contain an instance of SystemSettings', () => {\n        expect(system.settings).toBeInstanceOf(SystemSettings);\n    });\n\n    describe('loadInstalledApps()', () => {\n        let appsFromApi;\n\n        beforeEach(() => {\n            appsFromApi = [\n                {\n                    version: '0.4.8',\n                    name: 'Data Approval',\n                    description: 'Approvals app for PEPFAR',\n                    icons: {\n                        48: 'img/icons/dataapproval.png',\n                    },\n                    developer: {\n                        url: 'http://www.dhis2.org',\n                        name: 'Mark Polak',\n                        company: 'DHIS2 Core Team',\n                        email: 'markpo@ifi.uio.no',\n                    },\n                    activities: {\n                        dhis: {\n                            href: 'http://localhost:8080/dhis',\n                        },\n                    },\n                    folderName: 'approvals',\n                    launchUrl: 'http://localhost:8080/dhis/api/apps/approvals/index.html?v=0.4.8',\n                    key: 'approvals',\n                    launch_path: 'index.html?v=0.4.8',\n                    default_locale: 'en',\n                },\n                {\n                    version: '0.0.1',\n                    name: 'Data Export Log',\n                    description: 'Data export log viewer',\n                    icons: {\n                        48: 'icons/export.png',\n                    },\n                    developer: {\n                        url: '',\n                        name: 'Mark Polak',\n                    },\n                    activities: {\n                        dhis: {\n                            href: 'http://localhost:8080/dhis',\n                        },\n                    },\n                    folderName: 'data-export-log',\n                    launchUrl: 'http://localhost:8080/dhis/api/apps/data-export-log/index.html?1.0.0-rc1',\n                    key: 'data-export-log',\n                    launch_path: 'index.html?1.0.0-rc1',\n                    default_locale: 'en',\n                },\n            ];\n\n            apiMock.get = jest.fn().mockReturnValue(Promise.resolve(appsFromApi));\n        });\n\n        it('should set the list of installed apps onto the Settings object', () => system.loadInstalledApps()\n            .then(() => {\n                expect(system.installedApps).toEqual(appsFromApi);\n            }));\n\n        it('should reject the promise if the request fails', () => {\n            apiMock.get = jest.fn().mockReturnValue(Promise.reject('Apps can not be loaded'));\n\n            return system.loadInstalledApps()\n                .catch(error => error)\n                .then((message) => {\n                    expect(message).toBe('Apps can not be loaded');\n                });\n        });\n\n        it('should resolve with the returned list of apps', () => system.loadInstalledApps()\n            .then((apps) => {\n                expect(apps).toEqual(appsFromApi);\n            }));\n    });\n\n    describe('uploadApp()', () => {\n        let appendSpy;\n        let formData;\n\n        beforeEach(() => {\n            jest.spyOn(apiMock, 'post')\n                .mockReturnValue(Promise.resolve());\n\n            // Fake FormData object\n            appendSpy = jest.fn();\n            formData = {\n                append: appendSpy,\n            };\n            // Fake formData global constructor\n            global.FormData = function FormData() {\n                return formData;\n            };\n        });\n\n        afterEach(() => {\n            global.FormData = undefined;\n        });\n\n        it('should be a function on the system object', () => {\n            expect(typeof system.uploadApp).toBe('function');\n        });\n\n        it('should call the post with the correct options', () => {\n            const xhrOptions = {\n                contentType: false,\n                processData: false,\n                xhr: undefined,\n            };\n\n            system.uploadApp('ZipFile');\n\n            expect(apiMock.post).toBeCalledWith('apps', formData, xhrOptions);\n        });\n\n        it('should call append on the formData object to add the file to upload', () => {\n            system.uploadApp('ZipFile');\n\n            expect(formData.append).toBeCalledWith('file', 'ZipFile');\n        });\n\n        describe('xhr', () => {\n            let progressCallbackSpy;\n            let xhrMock;\n\n            beforeEach(() => {\n                progressCallbackSpy = jest.fn();\n                xhrMock = {\n                    upload: {},\n                };\n                global.XMLHttpRequest = function XMLHttpRequest() {\n                    return xhrMock;\n                };\n            });\n\n            afterEach(() => {\n                global.XMLHttpRequest = undefined;\n            });\n\n            it('should pass custom XMLHttpRequest Object with an on progress callback as an option', () => {\n                system.uploadApp('ZipFile', progressCallbackSpy);\n\n                expect(typeof apiMock.post.mock.calls[0][2].xhr).toBe('function');\n                expect(apiMock.post.mock.calls[0][2].xhr.call()).toBe(xhrMock);\n            });\n\n            it('should define the onprogress function onto the upload object of the xhr', () => {\n                system.uploadApp('ZipFile', progressCallbackSpy);\n\n                expect(typeof xhrMock.upload.onprogress).toBe('function');\n            });\n\n            it('should not call the callback if the progress can not be computed', () => {\n                system.uploadApp('ZipFile', progressCallbackSpy);\n                xhrMock.upload.onprogress({});\n\n                expect(progressCallbackSpy).not.toBeCalled();\n            });\n\n            it('should call the callback spy if the progress can be computed', () => {\n                system.uploadApp('ZipFile', progressCallbackSpy);\n                xhrMock.upload.onprogress({\n                    lengthComputable: true,\n                    loaded: 10,\n                    total: 50,\n                });\n\n                expect(progressCallbackSpy).toBeCalledWith(0.2);\n            });\n        });\n    });\n\n    describe('loadAppStore()', () => {\n        // Useful constants!\n        const sysVersionMinusTwo = '2.26';\n        const sysVersionMinusOne = '2.27';\n        const sysVersion = '2.28';\n        const sysVersionPlusOne = '2.29';\n        const sysVersionPlusTwo = '2.30';\n\n        beforeEach(() => {\n            system.setSystemInfo({\n                version: sysVersion,\n            });\n\n            jest.spyOn(apiMock, 'get')\n                .mockReturnValue(Promise.resolve(fixtures.get('/appStore')));\n        });\n\n        it('should be a function on the system object', () => {\n            expect(typeof system.loadAppStore).toBe('function');\n        });\n\n        it('should return a promise', () => {\n            expect(system.loadAppStore()).toBeInstanceOf(Promise);\n        });\n\n        it('should request the api for the appStore', () => {\n            system.loadAppStore();\n\n            expect(apiMock.get).toBeCalledWith('appStore');\n        });\n\n        it('should return the compatible apps from the api', () => {\n            // Apps 3 and 6 are compatible with 2.28\n            const expectedApps = fixtures.get('/appStore').filter((app, i) => [3, 6].includes(i));\n\n            return system.loadAppStore()\n                .then((apps) => {\n                    expect(apps).toEqual(expectedApps);\n                });\n        });\n\n        describe('with version 2.24', () => {\n            beforeEach(() => {\n                system.setSystemInfo({\n                    version: '2.24',\n                });\n            });\n\n            it('should return the compatible apps from the API', () => {\n                // Apps 2, 4 and 6 are compatible with 2.24\n                const expectedApps = fixtures.get('/appStore').filter((app, i) => [2, 4, 6].includes(i));\n\n                return system.loadAppStore()\n                    .then((apps) => {\n                        expect(apps).toEqual(expectedApps);\n                    });\n            });\n        });\n\n        describe('with version 2.25', () => {\n            beforeEach(() => {\n                system.setSystemInfo({\n                    version: '2.25',\n                });\n            });\n\n            it('should return the compatible apps from the API', () => {\n                // Apps 1, 2, 4, 5 and 6 are compatible with 2.25\n                const expectedApps = fixtures.get('/appStore').filter((app, i) => [1, 2, 4, 5, 6].includes(i));\n\n                return system.loadAppStore()\n                    .then((apps) => {\n                        expect(apps).toEqual(expectedApps);\n                    });\n            });\n        });\n\n        it('should return the compatible apps', () => {\n            // const returnedApps = fixtures.get('/appStore');\n\n            const returnedApps = [\n                {\n                    versions: [ // One version compatible\n                        { min_platform_version: sysVersionMinusTwo, max_platform_version: sysVersionMinusOne },\n                        { min_platform_version: sysVersionMinusOne }, // compatible\n                    ],\n                },\n                {\n                    versions: [ // Both incompatible\n                        { min_platform_version: sysVersionPlusOne, max_platform_version: sysVersionPlusTwo },\n                        { min_platform_version: sysVersionPlusTwo },\n                    ],\n                },\n                {\n                    versions: [ // Compatible\n                        { min_platform_version: sysVersionMinusOne },\n                    ],\n                },\n                {\n                    versions: [ // Incompatible\n                        { max_platform_version: sysVersionMinusOne },\n                    ],\n                },\n                {\n                    versions: [ // One version compatible\n                        { minDhisVersion: sysVersionMinusTwo, maxDhisVersion: sysVersionMinusOne },\n                        { minDhisVersion: sysVersionMinusOne }, // compatible\n                    ],\n                },\n                {\n                    versions: [ // Both incompatible\n                        { minDhisVersion: sysVersionPlusOne, maxDhisVersion: sysVersionPlusTwo },\n                        { minDhisVersion: sysVersionPlusTwo },\n                    ],\n                },\n                {\n                    versions: [ // Compatible\n                        { minDhisVersion: sysVersionMinusOne },\n                    ],\n                },\n                {\n                    versions: [ // Incompatible\n                        { maxDhisVersion: sysVersionMinusOne },\n                    ],\n                },\n            ];\n\n            apiMock.get.mockReturnValue(Promise.resolve(returnedApps));\n\n            return system.loadAppStore()\n                .then((apps) => {\n                    expect(apps.length).toBe(4);\n                });\n        });\n\n        it('should return all the apps when compatibility flag is set to false', () => system.loadAppStore(false)\n            .then((apps) => {\n                expect(apps.length).toBe(fixtures.get('/appStore').length);\n            }));\n\n        it('should reject the promise when the request fails', () => {\n            apiMock.get.mockReturnValue(Promise.reject('Request for appStore failed'));\n\n            return system.loadAppStore()\n                .catch(error => error)\n                .then((error) => {\n                    expect(error).toBe('Request for appStore failed');\n                });\n        });\n\n        it('should reject the promise when system.version is not set', () => {\n            system.version = undefined;\n\n            return system.loadAppStore()\n                .catch(error => error)\n                .then((error) => {\n                    expect(error.message).toBe('Cannot read property \\'major\\' of undefined');\n                });\n        });\n    });\n\n    describe('installAppVersion()', () => {\n        beforeEach(() => {\n            apiMock.post.mockReturnValue(Promise.resolve(''));\n        });\n\n        it('should be a function on the system object', () => {\n            expect(typeof system.installAppVersion).toBe('function');\n        });\n\n        it('should reject the promise when the request fails', () => {\n            apiMock.post.mockReturnValue(Promise.reject('Request for installation failed'));\n\n            return system.installAppVersion('PyYnjVl5iGt')\n                .catch(error => error)\n                .then((errorMessage) => {\n                    expect(errorMessage).toBe('Request for installation failed');\n                });\n        });\n\n        it('should call the api with the correct url', () => system.installAppVersion('PyYnjVl5iGt')\n            .then(() => {\n                expect(apiMock.post).toBeCalledWith('appStore/PyYnjVl5iGt', '', { dataType: 'text' });\n            }));\n\n        it('should resolve the promise without a value', () => system.installAppVersion('PyYnjVl5iGt')\n            .then((response) => {\n                expect(response).toBeUndefined();\n            }));\n    });\n\n    describe('uninstallApp()', () => {\n        beforeEach(() => {\n            apiMock.delete = jest.fn().mockReturnValue(Promise.resolve({}));\n        });\n\n        it('should be a function on the system object', () => {\n            expect(typeof system.uninstallApp).toBe('function');\n        });\n\n        it('should call the api.delete method with the correct url', () => system.uninstallApp('PyYnjVl5iGt')\n            .then(() => {\n                expect(apiMock.delete).toBeCalledWith('apps/PyYnjVl5iGt');\n            }));\n\n        it('should resolve the request even when the api request fails', () => {\n            apiMock.delete = jest.fn().mockReturnValue(Promise.reject({}));\n\n            return system.uninstallApp('PyYnjVl5iGt');\n        });\n    });\n\n    describe('reloadApps()', () => {\n        beforeEach(() => {\n            jest.spyOn(apiMock, 'update')\n                .mockReturnValue(Promise.resolve());\n\n            jest.spyOn(system, 'loadInstalledApps')\n                .mockReturnValueOnce(Promise.resolve());\n        });\n\n        it('should be a function on the system object', () => {\n            expect(typeof system.reloadApps).toBe('function');\n        });\n\n        it('should call the update method on the api', () => system.reloadApps()\n            .then(() => {\n                expect(apiMock.update.mock.calls[0][0]).toBe('apps');\n            }));\n\n        it('should call system.loadInstalledApps on success ', () => system.reloadApps()\n            .then(() => {\n                expect(system.loadInstalledApps).toBeCalled();\n            }));\n\n        it('should chain the promise from loadInstalledApps', () => {\n            const loadInstalledAppsPromise = Promise.resolve('Apps loaded');\n\n            system.loadInstalledApps.mockReset();\n            system.loadInstalledApps.mockReturnValue(loadInstalledAppsPromise);\n\n            return system.reloadApps()\n                .then(message => expect(message).toBe('Apps loaded'));\n        });\n\n        it('should not call loadInstalledApps when the update request fails', () => {\n            apiMock.update.mockReturnValue(Promise.reject());\n            jest.spyOn(system, 'loadInstalledApps');\n\n            return system.reloadApps()\n                .catch(message => message)\n                .then(() => {\n                    expect(system.loadInstalledApps).not.toBeCalled();\n                });\n        });\n    });\n\n    describe('compareVersions()', () => {\n        let systemVersion;\n        let appVersion;\n\n        beforeEach(() => {\n            systemVersion = {\n                major: 2,\n                minor: 23,\n                snapshot: true,\n            };\n            appVersion = {\n                major: 2,\n                minor: 23,\n                snapshot: true,\n            };\n        });\n\n        it('should be a function on the system class', () => {\n            expect(typeof System.compareVersions).toBe('function');\n        });\n\n        it('should return 0 for equal versions', () => {\n            expect(System.compareVersions(systemVersion, appVersion)).toBe(0);\n        });\n\n        it('should return 1 for a larger major system version', () => {\n            systemVersion.major = 3;\n\n            expect(System.compareVersions(systemVersion, appVersion)).toBe(1);\n        });\n\n        it('should return 1 for a larger minor version', () => {\n            systemVersion.minor = 24;\n\n            expect(System.compareVersions(systemVersion, appVersion)).toBe(1);\n        });\n\n        it('should return 1 when the app is a snapshot version', () => {\n            systemVersion.snapshot = false;\n            appVersion.snapshot = true;\n\n            expect(System.compareVersions(systemVersion, appVersion)).toBe(1);\n        });\n\n        it('should return -1 when the app is not a snapshot', () => {\n            systemVersion.snapshot = true;\n            appVersion.snapshot = false;\n\n            expect(System.compareVersions(systemVersion, appVersion)).toBe(-1);\n        });\n\n        it('should do correct comparison when a string is passed as a version', () => {\n            expect(System.compareVersions('2.15', '2.16')).toBe(-1);\n            expect(System.compareVersions('2.20-SNAPSHOT', '2.16')).toBe(4);\n        });\n    });\n\n    describe('isVersionCompatible()', () => {\n        let appVersion;\n        let systemVersion;\n\n        beforeEach(() => {\n            jest.spyOn(System, 'compareVersions');\n            appVersion = {\n                min_platform_version: '2.23',\n                max_platform_version: '2.23',\n            };\n            systemVersion = '2.23';\n        });\n\n        afterEach(() => {\n            System.compareVersions.mockRestore();\n        });\n\n        it('should return false when the app is too new', () => {\n            expect(System.isVersionCompatible(\n                systemVersion,\n                Object.assign(appVersion, { min_platform_version: '2.24' }),\n            )).toBe(false);\n        });\n\n        it('should return false when the app is too old', () => {\n            expect(System.isVersionCompatible(\n                systemVersion,\n                Object.assign(appVersion, { max_platform_version: '2.22' }),\n            )).toBe(false);\n        });\n\n        it('should return true when the system version is within the app version range', () => {\n            appVersion.min_platform_version = '2.20';\n            appVersion.max_platform_version = '2.25';\n\n            expect(System.isVersionCompatible(systemVersion, appVersion));\n        });\n\n        it('should return true when no version bounds are given', () => {\n            appVersion = {};\n\n            expect(System.isVersionCompatible(systemVersion, appVersion)).toBe(true);\n        });\n\n        it('should return false when the version is not compatible', () => {\n            expect(System.isVersionCompatible('2.22', {\n                min_platform_version: '2.17',\n                max_platform_version: '2.20',\n            })).toBe(false);\n        });\n\n\n        describe('with 2.28 app version format', () => {\n            beforeEach(() => {\n                appVersion = {\n                    minDhisVersion: '2.22',\n                    maxDhisVersion: '2.23-SNAPSHOT',\n                };\n                systemVersion = '2.23';\n            });\n\n            it('should return false when the app is too new', () => {\n                expect(System.isVersionCompatible(\n                    systemVersion,\n                    Object.assign(appVersion, { minDhisVersion: '2.24' }),\n                )).toBe(false);\n            });\n\n            it('should return false when the app is too old', () => {\n                expect(System.isVersionCompatible(\n                    systemVersion,\n                    Object.assign(appVersion, { maxDhisVersion: '2.22' }),\n                )).toBe(false);\n            });\n\n            it('should return true when the system version is within the app version range', () => {\n                appVersion.minDhisVersion = '2.20';\n                appVersion.maxDhisVersion = '2.25';\n\n                expect(System.isVersionCompatible(systemVersion, appVersion));\n            });\n\n            it('should return true when no version bounds are given', () => {\n                appVersion = {};\n\n                expect(System.isVersionCompatible(systemVersion, appVersion)).toBe(true);\n            });\n\n            it('should return false when the version is not compatible', () => {\n                expect(System.isVersionCompatible('2.22', {\n                    minDhisVersion: '2.17',\n                    maxDhisVersion: '2.20',\n                })).toBe(false);\n            });\n        });\n    });\n\n    describe('getSystem', () => {\n        it('should return the same instance on consecutive requests', () => {\n            expect(System.getSystem()).toBe(System.getSystem());\n        });\n    });\n});\n"],"file":"System_spec.js"}