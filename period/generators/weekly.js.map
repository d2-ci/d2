{"version":3,"sources":["../../../src/period/generators/weekly.js"],"names":["generateWeeklyPeriodsForYear","year","periods","weeksInYear","startDate","week","endDate","period","name","id","push"],"mappings":";;;;;;;AAAA;;AAUA;;;;;;;AAOO,SAASA,4BAAT,GAA+D;AAAA,MAAzBC,IAAyB,uEAAlB,8BAAkB;AAClE;AACA,yCAAyBA,IAAzB;AAEA,MAAMC,OAAO,GAAG,EAAhB;AACA,MAAMC,WAAW,GAAG,8BAAgBF,IAAhB,IAAwB,EAAxB,GAA6B,EAAjD;AACA,MAAIG,SAAS,GAAG,+CAAiCH,IAAjC,CAAhB;;AAEA,OAAK,IAAII,IAAI,GAAG,CAAhB,EAAmBA,IAAI,IAAIF,WAA3B,EAAwCE,IAAI,IAAI,CAAhD,EAAmD;AAC/C,QAAMC,OAAO,GAAG,sDAAwCF,SAAxC,CAAhB;AAEA,QAAMG,MAAM,GAAG;AACXH,MAAAA,SAAS,EAAE,8BAAgBA,SAAhB,CADA;AAEXE,MAAAA,OAAO,EAAE,8BAAgBA,OAAhB,CAFE;AAGXE,MAAAA,IAAI,aAAMH,IAAN,gBAAgB,8BAAgBD,SAAhB,CAAhB,gBAAgD,8BAChDE,OADgD,CAAhD,CAHO;AAMXG,MAAAA,EAAE,YAAKR,IAAL,cAAaI,IAAb;AANS,KAAf;AASAH,IAAAA,OAAO,CAACQ,IAAR,CAAaH,MAAb,EAZ+C,CAc/C;;AACAH,IAAAA,SAAS,GAAG,sBAAQ,CAAR,EAAWA,SAAX,CAAZ;AACH;;AAED,SAAOF,OAAP;AACH","sourcesContent":["import {\n    validateIfValueIsInteger,\n    formatAsISODate,\n    getCurrentYear,\n    addDays,\n    getFirstDayInFirstISOWeekForYear,\n    getLastDayOfTheWeekForFirstDayOfTheWeek,\n    is53WeekISOYear,\n} from '../helpers'\n\n/**\n * Generate weekly periods types\n *\n * @private\n *\n * @param {Integer} [year] The year to generate the weeks for.\n */\nexport function generateWeeklyPeriodsForYear(year = getCurrentYear()) {\n    // eslint-disable-line import/prefer-default-export\n    validateIfValueIsInteger(year)\n\n    const periods = []\n    const weeksInYear = is53WeekISOYear(year) ? 53 : 52\n    let startDate = getFirstDayInFirstISOWeekForYear(year)\n\n    for (let week = 1; week <= weeksInYear; week += 1) {\n        const endDate = getLastDayOfTheWeekForFirstDayOfTheWeek(startDate)\n\n        const period = {\n            startDate: formatAsISODate(startDate),\n            endDate: formatAsISODate(endDate),\n            name: `W${week} - ${formatAsISODate(startDate)} - ${formatAsISODate(\n                endDate\n            )}`,\n            id: `${year}W${week}`,\n        }\n\n        periods.push(period)\n\n        // Go to the start of the next week +7 days\n        startDate = addDays(7, startDate)\n    }\n\n    return periods\n}\n"],"file":"weekly.js"}