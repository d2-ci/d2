{"version":3,"sources":["../../src/__tests__/d2_spec.js"],"names":["jest","mock","describe","ModelDefinition","name","prototype","ModelDefinitionMock","createFromSchema","fn","mockReturnValue","d2","apiMock","loggerMock","i18nMock","beforeEach","callCount","schemasResponse","schemas","fixtures","get","mockReturnValueOnce","Promise","resolve","version","apps","setBaseUrl","getApi","setDefaultHeaders","error","addSource","addStrings","load","Logger","getLogger","Api","I18n","getI18n","ModelDefinitionsMock","ModelDefinitions","modelsMockList","add","schema","getModelDefinitions","require","default","afterEach","it","expect","init","toBe","getInstance","assertions","undefined","then","toHaveBeenCalledTimes","config","baseUrl","toHaveBeenCalledWith","headers","Authorization","Buffer","from","toString","i18n","sources","strings","toBeInstanceOf","all","d2FromInit","d2FromFactory","firstCallResult","secondCallResult","instanceAfterFirstInit","first","instanceAfterSecondInit","second","not","toBeCalled","shouldThrowOnString","shouldThrowOnFunction","toThrowError","shouldNotThrow","fields","reject","Error","newD2","attributeCallArgs","calls","toEqual","paging","models","toBeDefined","dataElement","currentUser","d2Instance","dataStore","DataStore","getUserSettings","settings","keyUiLocale","getManifest","expectedManifest","manifest","activities","dhis","href","getBaseUrl"],"mappings":"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","sourcesContent":["import Api from '../api/Api';\nimport fixtures from '../__fixtures__/fixtures';\nimport I18n from '../i18n/I18n';\nimport DataStore from '../datastore/DataStore';\nimport Logger from '../logger/Logger';\n\njest.mock('../logger/Logger');\njest.mock('../api/Api');\njest.mock('../i18n/I18n');\n\ndescribe('D2', () => {\n    const ModelDefinition = function ModelDefinition() {\n        this.name = 'dataElement';\n    };\n\n    ModelDefinition.prototype = {};\n\n    const ModelDefinitionMock = {\n        createFromSchema: jest.fn().mockReturnValue(new ModelDefinition()),\n        prototype: {},\n    };\n    let d2;\n    let apiMock;\n    let loggerMock;\n    let i18nMock;\n\n    beforeEach(() => {\n        ModelDefinitionMock.createFromSchema.callCount = 0;\n        const schemasResponse = {\n            schemas: [\n                fixtures.get('/api/schemas/dataElement'),\n                fixtures.get('/api/schemas/dataElement'),\n                fixtures.get('/api/schemas/dataElement'),\n            ],\n        };\n\n        apiMock = {\n            get: jest.fn()\n                // First init round\n                .mockReturnValueOnce(Promise.resolve(schemasResponse))\n                .mockReturnValueOnce(new Promise(resolve => resolve(fixtures.get('/api/attributes'))))\n                .mockReturnValueOnce(Promise.resolve({}))\n                .mockReturnValueOnce(Promise.resolve([]))\n                .mockReturnValueOnce(new Promise(resolve => resolve(fixtures.get('/api/userSettings'))))\n                .mockReturnValueOnce(Promise.resolve({ version: '2.21' }))\n                .mockReturnValueOnce(Promise.resolve({ apps: [] }))\n\n                // Second init round\n                .mockReturnValueOnce(new Promise(resolve => resolve(schemasResponse)))\n                .mockReturnValueOnce(new Promise(resolve => resolve(fixtures.get('/api/attributes'))))\n                .mockReturnValueOnce(Promise.resolve({}))\n                .mockReturnValueOnce(Promise.resolve([]))\n                .mockReturnValueOnce(new Promise(resolve => resolve(fixtures.get('/api/userSettings'))))\n                .mockReturnValueOnce(Promise.resolve({ version: '2.21' }))\n                .mockReturnValueOnce(Promise.resolve({ apps: [] })),\n            setBaseUrl: jest.fn(),\n            getApi() {\n                return this;\n            },\n            setDefaultHeaders: jest.fn(),\n        };\n\n        loggerMock = {\n            error: jest.fn(),\n        };\n\n        i18nMock = {\n            addSource: jest.fn(),\n            addStrings: jest.fn(),\n            load: jest.fn()\n                .mockReturnValue(Promise.resolve()),\n        };\n\n        Logger.getLogger = Logger.getLogger.mockReturnValue(loggerMock);\n        Api.getApi = Api.getApi.mockReturnValue(apiMock);\n        I18n.getI18n = I18n.getI18n.mockReturnValue(i18nMock);\n\n        // jscs:disable\n        const ModelDefinitionsMock = function ModelDefinitions() {\n            this.modelsMockList = true;\n            this.add = function add(schema) {\n                this[schema.name] = schema;\n            };\n        };\n        // jscs:enable\n        ModelDefinitionsMock.prototype = {\n            add(schema) {\n                this[schema.name] = schema;\n            },\n        };\n        ModelDefinitionsMock.getModelDefinitions = jest.fn().mockReturnValue(new ModelDefinitionsMock());\n\n        // Import after we have set all the mock values\n        // TODO: should probably use jest.mock and use a regular ES6 import\n        d2 = require('../d2').default; // eslint-disable-line global-require\n    });\n\n    afterEach(() => {\n\n    });\n\n    it('should have an init function', () => {\n        expect(typeof d2.init).toBe('function');\n    });\n\n    it('should have a getInstance function', () => {\n        expect(typeof d2.getInstance).toBe('function');\n    });\n\n    describe('init', () => {\n        it('should call load on i18n instance', () => {\n            expect.assertions(1);\n\n            d2.init(undefined, apiMock);\n            return d2.getInstance()\n                .then(() => {\n                    expect(i18nMock.load).toHaveBeenCalledTimes(1);\n                });\n        });\n    });\n\n    describe('config', () => {\n        it('should have a default baseUrl in the config', () => {\n            expect(d2.config.baseUrl).toBe('/api');\n        });\n\n        it('should use the baseUrl from the pre-init config', () => {\n            d2.config.baseUrl = '/dhis/api';\n\n            expect.assertions(1);\n\n            d2.init(undefined, apiMock);\n            return d2.getInstance()\n                .then(() => {\n                    expect(apiMock.setBaseUrl).toHaveBeenCalledWith('/dhis/api');\n                });\n        });\n\n        it('should let the init() config override the pre-init config', () => {\n            d2.config.baseUrl = '/dhis/api';\n\n            expect.assertions(1);\n\n            d2.init({ baseUrl: '/demo/api' }, apiMock);\n            return d2.getInstance()\n                .then(() => {\n                    expect(apiMock.setBaseUrl).toHaveBeenCalledWith('/demo/api');\n                });\n        });\n\n        it('should use default headers for requests', () => {\n            d2.config.baseUrl = '/dhis/api';\n            d2.config.headers = {\n                Authorization: Buffer.from('admin:district').toString('base64'),\n            };\n\n            expect.assertions(1);\n\n            d2.init({ baseUrl: '/demo/api' }, apiMock);\n            return d2.getInstance()\n                .then(() => {\n                    expect(apiMock.setDefaultHeaders).toHaveBeenCalledWith({ Authorization: 'YWRtaW46ZGlzdHJpY3Q=' });\n                });\n        });\n\n        it('should pass the sources Set as an sources array to the i18n class', () => {\n            d2.config.i18n.sources.add('global.properties');\n            d2.config.i18n.sources.add('nonglobal.properties');\n            d2.config.i18n.sources.add('systemsettings.properties');\n\n            expect.assertions(1);\n\n            d2.init(undefined, apiMock);\n            return d2.getInstance()\n                .then(() => {\n                    expect(i18nMock.addSource).toHaveBeenCalledTimes(3);\n                });\n        });\n\n        it('should call addStrings for the pre-init added strings', () => {\n            d2.config.i18n.strings.add('name');\n            d2.config.i18n.strings.add('yes');\n\n            expect.assertions(1);\n\n            d2.init(undefined, apiMock);\n            return d2.getInstance()\n                .then(() => {\n                    expect(i18nMock.addStrings).toHaveBeenCalledWith(['name', 'yes']);\n                });\n        });\n    });\n\n    describe('getInstance', () => {\n        it('should return a promise', () => {\n            expect(d2.getInstance()).toBeInstanceOf(Promise);\n        });\n\n        it('should return the d2 instance after init', () => {\n            expect.assertions(1);\n\n            return Promise.all([d2.init({ baseUrl: '/dhis/api' }, apiMock), d2.getInstance()])\n                .then(([d2FromInit, d2FromFactory]) => {\n                    expect(d2FromInit).toBe(d2FromFactory);\n                });\n        });\n\n        it('should return the same instance on getInstance calls', () => {\n            d2.init({ baseUrl: '/dhis/api' }, apiMock);\n\n            expect.assertions(1);\n\n            return Promise.all([d2.getInstance(), d2.getInstance()])\n                .then(([firstCallResult, secondCallResult]) => {\n                    expect(firstCallResult).toBe(secondCallResult);\n                });\n        });\n\n        it('should return a different instance after re-init', () => {\n            d2.init(undefined, apiMock);\n            const instanceAfterFirstInit = d2.getInstance();\n\n            expect.assertions(1);\n\n            return instanceAfterFirstInit.then((first) => {\n                d2.init({ baseUrl: '/dhis/api' }, apiMock);\n                const instanceAfterSecondInit = d2.getInstance();\n\n                return Promise.all([first, instanceAfterSecondInit]);\n            })\n                .then(([first, second]) => {\n                    expect(first).not.toBe(second);\n                });\n        });\n\n        it('should return a promise when calling getInstance before init', () => {\n            expect(d2.getInstance()).toBeInstanceOf(Promise);\n        });\n    });\n\n    it('should set the base url onto the api', () => {\n        d2.init({ baseUrl: '/dhis/api' }, apiMock);\n\n        expect(apiMock.setBaseUrl).toHaveBeenCalledWith('/dhis/api');\n    });\n\n    it('should set the baseUrl to the default /api', () => {\n        d2.init({}, apiMock);\n\n        expect(apiMock.setBaseUrl).toBeCalled();\n    });\n\n    it('should throw an error when the passed config is not an object', () => {\n        function shouldThrowOnString() {\n            d2.init(' ');\n        }\n\n        function shouldThrowOnFunction() {\n            d2.init(() => true);\n        }\n\n        expect(shouldThrowOnString).toThrowError('Expected Config parameter to have type object');\n        expect(shouldThrowOnFunction).toThrowError('Expected Config parameter to have type object');\n    });\n\n    it('should not throw an error when no config is passed', () => {\n        function shouldNotThrow() {\n            d2.init(undefined, apiMock);\n        }\n\n        expect(shouldNotThrow).not.toThrowError();\n    });\n\n    it('should call the api', () => d2.init({ baseUrl: '/dhis/api' }, apiMock)\n        .then(() => {\n            const fields = 'apiEndpoint,name,displayName,authorities,singular,plural,' +\n                'shareable,metadata,klass,identifiableObject,translatable,' +\n                'properties[href,writable,collection,collectionName,name,propertyType,persisted,required,min,max,' +\n                'ordered,unique,constants,owner,itemPropertyType,translationKey,embeddedObject]';\n\n            expect(apiMock.get).toHaveBeenCalledWith('schemas', { fields });\n        }));\n\n    it('should log the error when schemas can not be requested', () => {\n        apiMock.get = jest.fn().mockReturnValueOnce(Promise.reject(new Error('Failed')));\n\n        return d2.init({ baseUrl: '/dhis/api' }, apiMock, loggerMock)\n            .then(\n                () => Promise.reject('No error occurred'),\n                () => {\n                    expect(loggerMock.error).toHaveBeenCalledTimes(1);\n                    expect(loggerMock.error)\n                        .toHaveBeenCalledWith('Unable to get schemas from the api', '{}', new Error('Failed'));\n                },\n            );\n    });\n\n    it('should return an object with the api object', () => {\n        expect.assertions(1);\n\n        return d2.init({ baseUrl: '/dhis/api' }, apiMock)\n            .then((newD2) => {\n                expect(newD2.Api.getApi()).toBe(apiMock);\n            });\n    });\n\n    it('should call the api for all startup calls', () => {\n        expect.assertions(1);\n\n        return d2.init({ baseUrl: '/dhis/api' }, apiMock)\n            .then(() => {\n                expect(apiMock.get).toHaveBeenCalledTimes(7);\n            });\n    });\n\n    it('should query the api for all the attributes', () => {\n        expect.assertions(2);\n\n        return d2.init({ baseUrl: '/dhis/api' }, apiMock)\n            .then(() => {\n                const attributeCallArgs = apiMock.get.mock.calls[1];\n                /* 0: Url, 1: Data, 1: Query params, 2: Request options */\n                expect(attributeCallArgs[0]).toBe('attributes');\n                expect(attributeCallArgs[1]).toEqual({ fields: ':all,optionSet[:all,options[:all]]', paging: false });\n            });\n    });\n\n    describe('creation of ModelDefinitions', () => {\n        it('should add the model definitions object to the d2 object', () => {\n            expect.assertions(1);\n\n            return d2.init(undefined, apiMock)\n                .then((newD2) => {\n                    expect(newD2.models).toBeDefined();\n                });\n        });\n\n        it('should add the ModelDefinitions to the models list', () => {\n            expect.assertions(1);\n\n            return d2.init(undefined, apiMock)\n                .then((newD2) => {\n                    expect(newD2.models.dataElement).toBeDefined();\n                });\n        });\n    });\n\n    describe('currentUser', () => {\n        it('should be available on the d2 object', () => {\n            d2.init(undefined, apiMock);\n            expect.assertions(1);\n\n            return d2.getInstance()\n                .then((newD2) => {\n                    expect(newD2.currentUser).toBeDefined();\n                });\n        });\n    });\n\n    describe('with specific schema loading', () => {\n        it('should have only loaded a single schema', () => {\n            apiMock.get\n                // First init round\n                .mockReturnValueOnce(Promise.resolve(fixtures.get('/api/schemas/user')));\n            d2.init({\n                schemas: ['user'],\n            }, apiMock);\n\n            expect.assertions(1);\n\n            return d2.getInstance()\n                .then(() => {\n                    expect(apiMock.get).toHaveBeenCalledWith('schemas/user', {\n                        fields: 'apiEndpoint,name,displayName,authorities,singular,plural,shareable,metadata,klass,' +\n                        'identifiableObject,translatable,' +\n                        'properties[href,writable,collection,collectionName,name,propertyType,persisted,required,min,' +\n                        'max,ordered,unique,constants,owner,itemPropertyType,translationKey,embeddedObject]',\n                    });\n                });\n        });\n    });\n\n    describe('DataStore', () => {\n        it('should have a dataStore object on the instance', () => {\n            expect.assertions(1);\n\n            return d2.init(undefined, apiMock)\n                .then((d2Instance) => {\n                    expect(d2Instance.dataStore).toBeInstanceOf(DataStore);\n                });\n        });\n    });\n\n    describe('getUserSettings', () => {\n        it('should be a function', () => {\n            expect(typeof d2.getUserSettings).toBe('function');\n        });\n\n        it('should return an object with the uiLocale', () => {\n            apiMock.get = jest.fn().mockReturnValueOnce(Promise.resolve(fixtures.get('/api/userSettings')));\n\n            expect.assertions(1);\n\n            return d2.getUserSettings(apiMock)\n                .then((settings) => {\n                    expect(settings.keyUiLocale).toBe('fr');\n                });\n        });\n\n        it('should call the api for keyUiLocale', () => {\n            d2.getUserSettings(apiMock);\n\n            expect(apiMock.get).toBeCalled();\n        });\n\n        it('should use the default base url when the set baseUrl is not valid', () => {\n            d2.config.baseUrl = undefined;\n\n            expect.assertions(2);\n\n            return d2.getUserSettings(apiMock)\n                .then(() => {\n                    expect(apiMock.setBaseUrl).not.toBeCalled();\n                    expect(apiMock.get).toHaveBeenCalledWith('userSettings');\n                });\n        });\n    });\n\n    describe('getManifest', () => {\n        it('should be a function', () => {\n            expect(typeof d2.getManifest).toBe('function');\n        });\n\n        it('should return a promise', () => {\n            expect(d2.getManifest('manifest.webapp', apiMock)).toBeInstanceOf(Promise);\n        });\n\n        it('should request the manifest.webapp', () => {\n            apiMock.get.mockReturnValueOnce(Promise.resolve({}));\n\n            expect.assertions(1);\n\n            return d2.getManifest('manifest.webapp', apiMock)\n                .then(() => {\n                    expect(apiMock.get).toHaveBeenCalledWith('manifest.webapp');\n                });\n        });\n\n        it('should return the manifest.webapp object', () => {\n            const expectedManifest = {\n                name: 'MyApp',\n            };\n\n            apiMock.get = jest.fn().mockReturnValueOnce(Promise.resolve(expectedManifest));\n\n            expect.assertions(1);\n\n            return d2.getManifest('manifest.webapp', apiMock)\n                .then((manifest) => {\n                    expect(manifest.name).toBe(expectedManifest.name);\n                });\n        });\n\n        it('should add the getBaseUrl convenience method', () => {\n            const expectedManifest = {\n                name: 'MyApp',\n                activities: {\n                    dhis: {\n                        href: 'http://localhost:8080',\n                    },\n                },\n            };\n\n            apiMock.get = jest.fn().mockReturnValueOnce(Promise.resolve(expectedManifest));\n\n            expect.assertions(1);\n\n            return d2.getManifest('manifest.webapp', apiMock)\n                .then((manifest) => {\n                    expect(manifest.getBaseUrl()).toBe('http://localhost:8080');\n                });\n        });\n    });\n});\n"],"file":"d2_spec.js"}