{"version":3,"sources":["../../../src/analytics/__tests__/AnalyticsEvents.spec.js"],"names":["jest","mock","describe","events","request","mockApi","fixture","beforeEach","MockApi","getApi","mockClear","AnalyticsEvents","it","expect","toThrowErrorMatchingSnapshot","api","toBe","apiMockObject","AnalyticsRequest","withLimit","fixtures","get","mockReturnValue","Promise","resolve","getAggregate","toBeInstanceOf","Function","then","data","toEqual","withProgram","addPeriodDimension","addOrgUnitDimension","addDimension","getCount","count","extent","withStage","withStartDate","withEndDate","withCoordinatesOnly","withBbox","withClusterSize","withIncludeClusterPoints","getCluster","width","height","addPeriodFilter","withPage","withPageSize","getQuery"],"mappings":"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","sourcesContent":["import fixtures from '../../__fixtures__/fixtures';\nimport MockApi from '../../api/Api';\nimport AnalyticsEvents from '../AnalyticsEvents';\nimport AnalyticsRequest from '../AnalyticsRequest';\n\njest.mock('../../api/Api'); // src/api/__mocks/Api.js\n\ndescribe('analytics.events', () => {\n    let events;\n    let request;\n    let mockApi;\n    let fixture;\n\n    beforeEach(() => {\n        mockApi = MockApi.getApi();\n        MockApi.mockClear();\n        events = new AnalyticsEvents();\n    });\n\n    it('should not be allowed to be called without new', () => {\n        expect(() => AnalyticsEvents()).toThrowErrorMatchingSnapshot(); // eslint-disable-line new-cap\n    });\n\n    it('should add the mockApi onto the Analyticsevents instance', () => {\n        expect(events.api).toBe(mockApi);\n    });\n\n    it('should use the api object when it is passed', () => {\n        const apiMockObject = {};\n\n        events = new AnalyticsEvents(apiMockObject);\n\n        expect(events.api).toBe(apiMockObject);\n    });\n\n    describe('.getAggregate()', () => {\n        beforeEach(() => {\n            events = new AnalyticsEvents(new MockApi());\n\n            request = new AnalyticsRequest()\n                .withLimit(10);\n\n            fixture = fixtures.get('/api/analytics/aggregate');\n\n            mockApi.get.mockReturnValue(Promise.resolve(fixture));\n        });\n\n        it('should be a function', () => {\n            expect(events.getAggregate).toBeInstanceOf(Function);\n        });\n\n        it('should resolve a promise with data', () => events.getAggregate(request)\n            .then((data) => {\n                expect(data).toEqual(fixture);\n            }));\n    });\n\n    describe('.getCount()', () => {\n        beforeEach(() => {\n            events = new AnalyticsEvents(new MockApi());\n\n            request = new AnalyticsRequest()\n                .withProgram('eBAyeGv0exc')\n                .addPeriodDimension('LAST_YEAR')\n                .addOrgUnitDimension('ImspTQPwCqd')\n                .addDimension('qrur9Dvnyt5:LT:50');\n\n            fixture = fixtures.get('/api/analytics/count');\n\n            mockApi.get.mockReturnValue(Promise.resolve(fixture));\n        });\n\n        it('should be a function', () => {\n            expect(events.getCount).toBeInstanceOf(Function);\n        });\n\n        it('should resolve a promise with data', () => events.getCount(request)\n            .then((data) => {\n                expect(data.count).toEqual(fixture.count);\n                expect(data.extent).toEqual(fixture.extent);\n            }));\n    });\n\n    describe('.getCluster()', () => {\n        beforeEach(() => {\n            events = new AnalyticsEvents(new MockApi());\n\n            request = new AnalyticsRequest()\n                .withProgram('VBqh0ynB2wv')\n                .addOrgUnitDimension('ImspTQPwCqd')\n                .withStage('pTo4uMt3xur')\n                .withStartDate('2016-10-17')\n                .withEndDate('2017-10-17')\n                .withCoordinatesOnly(true)\n                .withBbox('-14.062500000000002,5.61598581915534,-11.25,8.407168163601076')\n                .withClusterSize(67265)\n                .withIncludeClusterPoints(false);\n\n            fixture = fixtures.get('/api/analytics/cluster');\n\n            mockApi.get.mockReturnValue(Promise.resolve(fixture));\n        });\n\n        it('should be a function', () => {\n            expect(events.getCluster).toBeInstanceOf(Function);\n        });\n\n        it('should resolve a promise with data', () => events.getCluster(request)\n            .then((data) => {\n                expect(data.width).toEqual(fixture.width);\n                expect(data.height).toEqual(fixture.height);\n            }));\n    });\n\n    describe('.getQuery()', () => {\n        beforeEach(() => {\n            events = new AnalyticsEvents(new MockApi());\n\n            request = new AnalyticsRequest()\n                .addOrgUnitDimension('ImspTQPwCqd')\n                .addDimension('qrur9Dvnyt5:LT:50')\n                .addPeriodFilter('LAST_MONTH')\n                .withStage('Zj7UnCAulEk')\n                .withPage(1)\n                .withPageSize(5);\n\n            fixture = fixtures.get('/api/analytics/query');\n\n            mockApi.get.mockReturnValue(Promise.resolve(fixture));\n        });\n\n        it('should be a function', () => {\n            expect(events.getQuery).toBeInstanceOf(Function);\n        });\n\n        it('should resolve a promise with data', () => events.getQuery(request)\n            .then((data) => {\n                expect(data.width).toEqual(fixture.width);\n                expect(data.height).toEqual(fixture.height);\n            }));\n    });\n});\n"],"file":"AnalyticsEvents.spec.js"}