{"version":3,"sources":["../src/config.js"],"names":["Config","args","configObjects","filter","arg","every","configObject","Error","Object","assign","config","d2","api","Api","getApi","model","ModelDefinition","prototype","models","ModelDefinitions","getModelDefinitions","baseUrl","setBaseUrl","i18n","sources","Array","from","forEach","addSource","source","strings","addStrings"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;IAEqBA,M;;;;;;;iCACM;AAAA,8CAANC,IAAM;AAANA,oBAAM;AAAA;;AACnB,gBAAMC,gBAAgBD,KACjBE,MADiB,CACV;AAAA,uBAAOC,GAAP;AAAA,aADU,CAAtB;;AAGA,gBAAI,CAACF,cAAcG,KAAd,CAAoB;AAAA,uBAAgB,mBAAOC,YAAP,EAAqB,QAArB,CAAhB;AAAA,aAApB,CAAL,EAA0E;AACtE,sBAAM,IAAIC,KAAJ,CAAU,+CAAV,CAAN;AACH;;AAED,mBAAOC,OAAOC,MAAP,gBAAc,EAAd,kCAAoCR,IAApC,EAAP;AACH;;;2CAEyBS,M,EAAQC,E,EAAI;AAClC,gBAAMC,MAAMD,GAAGE,GAAH,CAAOC,MAAP,EAAZ;AACAH,eAAGI,KAAH,CAASC,eAAT,CAAyBC,SAAzB,CAAmCL,GAAnC,GAAyCA,GAAzC,CAFkC,CAEY;AAC9CD,eAAGO,MAAH,GAAYP,GAAGI,KAAH,CAASI,gBAAT,CAA0BC,mBAA1B,EAAZ,CAHkC,CAG2B;;AAE7D,gBAAI,qBAASV,OAAOW,OAAhB,CAAJ,EAA8B;AAC1BT,oBAAIU,UAAJ,CAAeZ,OAAOW,OAAtB;AACH,aAFD,MAEO;AACH;AACAT,oBAAIU,UAAJ,CAAe,MAAf;AACH;;AAED,gBAAIZ,OAAOa,IAAP,IAAeb,OAAOa,IAAP,CAAYC,OAA/B,EAAwC;AACpCC,sBAAMC,IAAN,CAAWhB,OAAOa,IAAP,CAAYC,OAAvB,EACKG,OADL,CACa;AAAA,2BAAUhB,GAAGY,IAAH,CAAQK,SAAR,CAAkBC,MAAlB,CAAV;AAAA,iBADb;AAEH;;AAED,gBAAInB,OAAOa,IAAP,IAAeb,OAAOa,IAAP,CAAYO,OAA/B,EAAwC;AACpCnB,mBAAGY,IAAH,CAAQQ,UAAR,CAAmBN,MAAMC,IAAN,CAAWhB,OAAOa,IAAP,CAAYO,OAAvB,CAAnB;AACH;AACJ;;;;;;kBAhCgB9B,M","file":"config.js","sourcesContent":["import defaultConfig from './defaultConfig';\nimport { isType, isString } from './lib/check';\n\nexport default class Config {\n    static create(...args) {\n        const configObjects = args\n            .filter(arg => arg);\n\n        if (!configObjects.every(configObject => isType(configObject, 'object'))) {\n            throw new Error('Expected Config parameter to have type object');\n        }\n\n        return Object.assign({}, defaultConfig, ...args);\n    }\n\n    static processConfigForD2(config, d2) {\n        const api = d2.Api.getApi();\n        d2.model.ModelDefinition.prototype.api = api; // eslint-disable-line no-param-reassign\n        d2.models = d2.model.ModelDefinitions.getModelDefinitions(); // eslint-disable-line no-param-reassign\n\n        if (isString(config.baseUrl)) {\n            api.setBaseUrl(config.baseUrl);\n        } else {\n            // default to the current version of the `/api`\n            api.setBaseUrl('/api');\n        }\n\n        if (config.i18n && config.i18n.sources) {\n            Array.from(config.i18n.sources)\n                .forEach(source => d2.i18n.addSource(source));\n        }\n\n        if (config.i18n && config.i18n.strings) {\n            d2.i18n.addStrings(Array.from(config.i18n.strings));\n        }\n    }\n}\n"]}