{"version":3,"sources":["../../../../src/period/generators/__tests__/monthly_spec.js"],"names":["describe","it","expect","toThrowError","Date","toHaveLength","monthlyPeriods","toEqual","startDate","endDate","name","id","getFullYear"],"mappings":";;AAAA;;AAEAA,QAAQ,CAAC,gBAAD,EAAmB,YAAM;AAC7BA,EAAAA,QAAQ,CAAC,iCAAD,EAAoC,YAAM;AAC9CC,IAAAA,EAAE,CAAC,6CAAD,EAAgD,YAAM;AACpDC,MAAAA,MAAM,CAAC;AAAA,eAAM,4CAA8B,CAAC,EAA/B,CAAN;AAAA,OAAD,CAAN,CAAiDC,YAAjD;AACH,KAFC,CAAF;AAIAF,IAAAA,EAAE,CAAC,kDAAD,EAAqD,YAAM;AACzDC,MAAAA,MAAM,CAAC;AAAA,eAAM,4CAA8B,IAAIE,IAAJ,EAA9B,CAAN;AAAA,OAAD,CAAN,CAAwDD,YAAxD;AACH,KAFC,CAAF;AAIAF,IAAAA,EAAE,CAAC,2CAAD,EAA8C,YAAM;AAClDC,MAAAA,MAAM,CAAC,6CAAD,CAAN,CAAwCG,YAAxC,CAAqD,EAArD;AACH,KAFC,CAAF;AAIAJ,IAAAA,EAAE,CAAC,mDAAD,EAAsD,YAAM;AAC1D,UAAMK,cAAc,GAAG,4CAA8B,IAA9B,CAAvB;AAEAJ,MAAAA,MAAM,CAACI,cAAc,CAAC,CAAD,CAAf,CAAN,CAA0BC,OAA1B,CAAkC;AAC9BC,QAAAA,SAAS,EAAE,YADmB;AAE9BC,QAAAA,OAAO,EAAE,YAFqB;AAG9BC,QAAAA,IAAI,EAAE,cAHwB;AAI9BC,QAAAA,EAAE,EAAE;AAJ0B,OAAlC;AAMH,KATC,CAAF;AAWAV,IAAAA,EAAE,CAAC,2FAAD,EAA8F,YAAM;AAClGC,MAAAA,MAAM,CAAC,6CAAD,CAAN,CAAwCK,OAAxC,CAAgD,4CAA8B,IAAIH,IAAJ,GAAWQ,WAAX,EAA9B,CAAhD;AACH,KAFC,CAAF;AAGH,GA3BO,CAAR;AA4BH,CA7BO,CAAR","sourcesContent":["import { generateMonthlyPeriodsForYear } from '../monthly';\n\ndescribe('Monthly period', () => {\n    describe('generateMonthlyPeriodsForYear()', () => {\n        it('should not allow years before the year zero', () => {\n            expect(() => generateMonthlyPeriodsForYear(-10)).toThrowError();\n        });\n\n        it('should throw an error when passing a Date object', () => {\n            expect(() => generateMonthlyPeriodsForYear(new Date())).toThrowError();\n        });\n\n        it('should return 12 monthly periods for 2017', () => {\n            expect(generateMonthlyPeriodsForYear()).toHaveLength(12);\n        });\n\n        it('should return the correct content for each period', () => {\n            const monthlyPeriods = generateMonthlyPeriodsForYear(2017);\n\n            expect(monthlyPeriods[0]).toEqual({\n                startDate: '2017-01-01',\n                endDate: '2017-01-31',\n                name: 'January 2017',\n                id: '201701',\n            });\n        });\n\n        it('should generate the same periods when called without as when called with the current year', () => {\n            expect(generateMonthlyPeriodsForYear()).toEqual(generateMonthlyPeriodsForYear(new Date().getFullYear()));\n        });\n    });\n});\n"],"file":"monthly_spec.js"}