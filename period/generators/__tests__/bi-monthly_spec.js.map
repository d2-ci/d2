{"version":3,"sources":["../../../../src/period/generators/__tests__/bi-monthly_spec.js"],"names":["describe","it","expect","toThrowError","Date","toHaveLength","toEqual","startDate","endDate","name","id","getFullYear"],"mappings":";;AAAA;;AAEAA,QAAQ,CAAC,mBAAD,EAAsB,YAAM;AAChCA,EAAAA,QAAQ,CAAC,mCAAD,EAAsC,YAAM;AAChDC,IAAAA,EAAE,CAAC,6CAAD,EAAgD,YAAM;AACpDC,MAAAA,MAAM,CAAC;AAAA,eAAM,gDAAgC,CAAC,EAAjC,CAAN;AAAA,OAAD,CAAN,CAAmDC,YAAnD;AACH,KAFC,CAAF;AAIAF,IAAAA,EAAE,CAAC,kDAAD,EAAqD,YAAM;AACzDC,MAAAA,MAAM,CAAC;AAAA,eAAM,gDAAgC,IAAIE,IAAJ,EAAhC,CAAN;AAAA,OAAD,CAAN,CAA0DD,YAA1D;AACH,KAFC,CAAF;AAIAF,IAAAA,EAAE,CAAC,6CAAD,EAAgD,YAAM;AACpDC,MAAAA,MAAM,CAAC,gDAAgC,IAAhC,CAAD,CAAN,CAA8CG,YAA9C,CAA2D,CAA3D;AACH,KAFC,CAAF;AAIAJ,IAAAA,EAAE,CAAC,8CAAD,EAAiD,YAAM;AACrDC,MAAAA,MAAM,CAAC,gDAAgC,IAAhC,CAAD,CAAN,CAA8CI,OAA9C,CAAsD,CAAC;AACnDC,QAAAA,SAAS,EAAE,YADwC;AAEnDC,QAAAA,OAAO,EAAE,YAF0C;AAGnDC,QAAAA,IAAI,EAAE,yBAH6C;AAInDC,QAAAA,EAAE,EAAE;AAJ+C,OAAD,EAKnD;AACCH,QAAAA,SAAS,EAAE,YADZ;AAECC,QAAAA,OAAO,EAAE,YAFV;AAGCC,QAAAA,IAAI,EAAE,oBAHP;AAICC,QAAAA,EAAE,EAAE;AAJL,OALmD,EAUnD;AACCH,QAAAA,SAAS,EAAE,YADZ;AAECC,QAAAA,OAAO,EAAE,YAFV;AAGCC,QAAAA,IAAI,EAAE,iBAHP;AAICC,QAAAA,EAAE,EAAE;AAJL,OAVmD,EAenD;AACCH,QAAAA,SAAS,EAAE,YADZ;AAECC,QAAAA,OAAO,EAAE,YAFV;AAGCC,QAAAA,IAAI,EAAE,oBAHP;AAICC,QAAAA,EAAE,EAAE;AAJL,OAfmD,EAoBnD;AACCH,QAAAA,SAAS,EAAE,YADZ;AAECC,QAAAA,OAAO,EAAE,YAFV;AAGCC,QAAAA,IAAI,EAAE,0BAHP;AAICC,QAAAA,EAAE,EAAE;AAJL,OApBmD,EAyBnD;AACCH,QAAAA,SAAS,EAAE,YADZ;AAECC,QAAAA,OAAO,EAAE,YAFV;AAGCC,QAAAA,IAAI,EAAE,0BAHP;AAICC,QAAAA,EAAE,EAAE;AAJL,OAzBmD,CAAtD;AA+BH,KAhCC,CAAF;AAkCAT,IAAAA,EAAE,CAAC,2FAAD,EAA8F,YAAM;AAClGC,MAAAA,MAAM,CAAC,iDAAD,CAAN,CAA0CI,OAA1C,CAAkD,gDAAgC,IAAIF,IAAJ,GAAWO,WAAX,EAAhC,CAAlD;AACH,KAFC,CAAF;AAGH,GAlDO,CAAR;AAmDH,CApDO,CAAR","sourcesContent":["import { generateBiMonthlyPeriodsForYear } from '../bi-monthly';\n\ndescribe('Bi-monthly period', () => {\n    describe('generateBiMonthlyPeriodsForYear()', () => {\n        it('should not allow years before the year zero', () => {\n            expect(() => generateBiMonthlyPeriodsForYear(-10)).toThrowError();\n        });\n\n        it('should throw an error when passing a Date object', () => {\n            expect(() => generateBiMonthlyPeriodsForYear(new Date())).toThrowError();\n        });\n\n        it('should return 6 bi-monthly periods for 2017', () => {\n            expect(generateBiMonthlyPeriodsForYear(2017)).toHaveLength(6);\n        });\n\n        it('should return the correct periods for a year', () => {\n            expect(generateBiMonthlyPeriodsForYear(2017)).toEqual([{\n                startDate: '2017-01-01',\n                endDate: '2017-02-28',\n                name: 'January - February 2017',\n                id: '201701B',\n            }, {\n                startDate: '2017-03-01',\n                endDate: '2017-04-30',\n                name: 'March - April 2017',\n                id: '201702B',\n            }, {\n                startDate: '2017-05-01',\n                endDate: '2017-06-30',\n                name: 'May - June 2017',\n                id: '201703B',\n            }, {\n                startDate: '2017-07-01',\n                endDate: '2017-08-31',\n                name: 'July - August 2017',\n                id: '201704B',\n            }, {\n                startDate: '2017-09-01',\n                endDate: '2017-10-31',\n                name: 'September - October 2017',\n                id: '201705B',\n            }, {\n                startDate: '2017-11-01',\n                endDate: '2017-12-31',\n                name: 'November - December 2017',\n                id: '201706B',\n            }]);\n        });\n\n        it('should generate the same periods when called without as when called with the current year', () => {\n            expect(generateBiMonthlyPeriodsForYear()).toEqual(generateBiMonthlyPeriodsForYear(new Date().getFullYear()));\n        });\n    });\n});\n"],"file":"bi-monthly_spec.js"}