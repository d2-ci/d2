{"version":3,"sources":["../../../src/period/generators/yearly.js"],"names":["generateYearlyPeriodsUpToYear","year","numberOfYears","Error","periods","date","Date","getFullYear","period","endDate","setMonth","startDate","name","toString","id","push","setDate","reverse"],"mappings":";;;;;QAGgBA,6B,GAAAA,6B;;AAHhB;;AACA;;AAEO,SAASA,6BAAT,GAAoF;AAAA,QAA7CC,IAA6C,uEAAtC,8BAAsC;AAAA,QAApBC,aAAoB,uEAAJ,EAAI;AAAE;AACzF,2CAAyBD,IAAzB;AACA,QAAK,CAAC,sBAAUC,aAAV,CAAF,IAA+BA,gBAAgB,CAAnD,EAAsD;AAClD,cAAM,IAAIC,KAAJ,CAAU,gFAAV,CAAN;AACH;;AAED,QAAMC,UAAU,EAAhB;AACA,QAAMC,OAAO,IAAIC,IAAJ,aAAmBL,IAAnB,CAAb;;AAEA,WAAQA,OAAOI,KAAKE,WAAL,EAAR,GAA8BL,aAArC,EAAoD;AAChD,YAAMM,SAAS,EAAf;AACAA,eAAOC,OAAP,GAAiB,8BAAgBJ,IAAhB,CAAjB;AACAA,aAAKK,QAAL,CAAc,CAAd,EAAiB,CAAjB;AACAF,eAAOG,SAAP,GAAmB,8BAAgBN,IAAhB,CAAnB;AACAG,eAAOI,IAAP,GAAcP,KAAKE,WAAL,GAAmBM,QAAnB,EAAd;AACAL,eAAOM,EAAP,GAAYT,KAAKE,WAAL,GAAmBM,QAAnB,EAAZ;AACAT,gBAAQW,IAAR,CAAaP,MAAb;AACAH,aAAKW,OAAL,CAAa,CAAb;AACH;;AAED;AACA,WAAOZ,QAAQa,OAAR,EAAP;AACH","file":"yearly.js","sourcesContent":["import { isInteger } from '../../lib/check';\nimport { validateIfValueIsInteger, formatAsISODate, getCurrentYear } from '../helpers';\n\nexport function generateYearlyPeriodsUpToYear(year = getCurrentYear(), numberOfYears = 10) { // eslint-disable-line import/prefer-default-export\n    validateIfValueIsInteger(year);\n    if ((!isInteger(numberOfYears)) || numberOfYears < 1) {\n        throw new Error('Yearly generator parameter `numberOfYears` should be an integer larger than 0.');\n    }\n\n    const periods = [];\n    const date = new Date(`31 Dec ${year}`);\n\n    while ((year - date.getFullYear()) < numberOfYears) {\n        const period = {};\n        period.endDate = formatAsISODate(date);\n        date.setMonth(0, 1);\n        period.startDate = formatAsISODate(date);\n        period.name = date.getFullYear().toString();\n        period.id = date.getFullYear().toString();\n        periods.push(period);\n        date.setDate(0);\n    }\n\n    // Years are collected backwards. If isReverse is true, then do nothing. Else reverse to correct order and return.\n    return periods.reverse();\n}\n"]}