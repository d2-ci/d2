{"version":3,"sources":["../src/config.js"],"names":["Config","args","configObjects","filter","arg","every","configObject","Error","Object","assign","defaultConfig","preinitConfig","api","headers","setDefaultHeaders","baseUrl","setBaseUrl","config","d2","Api","getApi","model","ModelDefinition","prototype","models","ModelDefinitions","getModelDefinitions","unauthorizedCb","setUnauthorizedCallback","i18n","sources","Array","from","forEach","source","addSource","strings","addStrings"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;IAEqBA,M;;;;;;;;;6BACM;AAAA,wCAANC,IAAM;AAANA,QAAAA,IAAM;AAAA;;AACnB,UAAMC,aAAa,GAAGD,IAAI,CAACE,MAAL,CAAY,UAAAC,GAAG;AAAA,eAAIA,GAAJ;AAAA,OAAf,CAAtB;;AAEA,UACI,CAACF,aAAa,CAACG,KAAd,CAAoB,UAAAC,YAAY;AAAA,eAAI,mBAAOA,YAAP,EAAqB,QAArB,CAAJ;AAAA,OAAhC,CADL,EAEE;AACE,cAAM,IAAIC,KAAJ,CAAU,+CAAV,CAAN;AACH;;AAED,aAAOC,MAAM,CAACC,MAAP,OAAAD,MAAM,GAAQ,EAAR,EAAYE,sBAAZ,SAA8BT,IAA9B,EAAb;AACH;;;yCAE2BU,a,EAAeC,G,EAAK;AAC5C,UAAID,aAAa,CAACE,OAAlB,EAA2B;AACvBD,QAAAA,GAAG,CAACE,iBAAJ,CAAsBH,aAAa,CAACE,OAApC;AACH;;AAED,UAAIF,aAAa,CAACI,OAAlB,EAA2B;AACvBH,QAAAA,GAAG,CAACI,UAAJ,CAAeL,aAAa,CAACI,OAA7B;AACH;AACJ;;;uCAEyBE,M,EAAQC,E,EAAI;AAClC,UAAMN,GAAG,GAAGM,EAAE,CAACC,GAAH,CAAOC,MAAP,EAAZ;AACAF,MAAAA,EAAE,CAACG,KAAH,CAASC,eAAT,CAAyBC,SAAzB,CAAmCX,GAAnC,GAAyCA,GAAzC,CAFkC,CAEW;;AAC7CM,MAAAA,EAAE,CAACM,MAAH,GAAYN,EAAE,CAACG,KAAH,CAASI,gBAAT,CAA0BC,mBAA1B,EAAZ,CAHkC,CAG0B;;AAE5D,UAAI,qBAAST,MAAM,CAACF,OAAhB,CAAJ,EAA8B;AAC1BH,QAAAA,GAAG,CAACI,UAAJ,CAAeC,MAAM,CAACF,OAAtB;AACH,OAFD,MAEO;AACH;AACAH,QAAAA,GAAG,CAACI,UAAJ,CAAe,MAAf;AACH;;AAED,UAAIC,MAAM,CAACJ,OAAX,EAAoB;AAChBD,QAAAA,GAAG,CAACE,iBAAJ,CAAsBG,MAAM,CAACJ,OAA7B;AACH;;AAED,UAAII,MAAM,CAACU,cAAX,EAA2B;AACvBf,QAAAA,GAAG,CAACgB,uBAAJ,CAA4BX,MAAM,CAACU,cAAnC;AACH;;AAED,UAAIV,MAAM,CAACY,IAAP,IAAeZ,MAAM,CAACY,IAAP,CAAYC,OAA/B,EAAwC;AACpCC,QAAAA,KAAK,CAACC,IAAN,CAAWf,MAAM,CAACY,IAAP,CAAYC,OAAvB,EAAgCG,OAAhC,CAAwC,UAAAC,MAAM;AAAA,iBAC1ChB,EAAE,CAACW,IAAH,CAAQM,SAAR,CAAkBD,MAAlB,CAD0C;AAAA,SAA9C;AAGH;;AAED,UAAIjB,MAAM,CAACY,IAAP,IAAeZ,MAAM,CAACY,IAAP,CAAYO,OAA/B,EAAwC;AACpClB,QAAAA,EAAE,CAACW,IAAH,CAAQQ,UAAR,CAAmBN,KAAK,CAACC,IAAN,CAAWf,MAAM,CAACY,IAAP,CAAYO,OAAvB,CAAnB;AACH;AACJ","sourcesContent":["import defaultConfig from './defaultConfig'\nimport { isType, isString } from './lib/check'\n\nexport default class Config {\n    static create(...args) {\n        const configObjects = args.filter(arg => arg)\n\n        if (\n            !configObjects.every(configObject => isType(configObject, 'object'))\n        ) {\n            throw new Error('Expected Config parameter to have type object')\n        }\n\n        return Object.assign({}, defaultConfig, ...args)\n    }\n\n    static processPreInitConfig(preinitConfig, api) {\n        if (preinitConfig.headers) {\n            api.setDefaultHeaders(preinitConfig.headers)\n        }\n\n        if (preinitConfig.baseUrl) {\n            api.setBaseUrl(preinitConfig.baseUrl)\n        }\n    }\n\n    static processConfigForD2(config, d2) {\n        const api = d2.Api.getApi()\n        d2.model.ModelDefinition.prototype.api = api // eslint-disable-line no-param-reassign\n        d2.models = d2.model.ModelDefinitions.getModelDefinitions() // eslint-disable-line no-param-reassign\n\n        if (isString(config.baseUrl)) {\n            api.setBaseUrl(config.baseUrl)\n        } else {\n            // default to the current version of the `/api`\n            api.setBaseUrl('/api')\n        }\n\n        if (config.headers) {\n            api.setDefaultHeaders(config.headers)\n        }\n\n        if (config.unauthorizedCb) {\n            api.setUnauthorizedCallback(config.unauthorizedCb)\n        }\n\n        if (config.i18n && config.i18n.sources) {\n            Array.from(config.i18n.sources).forEach(source =>\n                d2.i18n.addSource(source)\n            )\n        }\n\n        if (config.i18n && config.i18n.strings) {\n            d2.i18n.addStrings(Array.from(config.i18n.strings))\n        }\n    }\n}\n"],"file":"config.js"}