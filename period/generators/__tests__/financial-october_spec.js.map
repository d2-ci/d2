{"version":3,"sources":["../../../../src/period/generators/__tests__/financial-october_spec.js"],"names":["describe","it","expect","toThrowError","Date","toHaveLength","tenYearlyPeriods","toEqual","endDate","startDate","name","id","fiveYearlyPeriods","Infinity","getFullYear"],"mappings":"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","sourcesContent":["import { generateFinancialOctoberPeriodsUpToYear } from '../financial-october';\n\ndescribe('Financial October period', () => {\n    describe('generateFinancialOctoberPeriodsUpToYear()', () => {\n        it('should not allow years before the year zero', () => {\n            expect(() => generateFinancialOctoberPeriodsUpToYear(-10)).toThrowError();\n        });\n\n        it('should throw an error when passing a Date object', () => {\n            expect(() => generateFinancialOctoberPeriodsUpToYear(new Date())).toThrowError();\n        });\n\n        it('should generate 10 yearly periods when no numberOfYears was passed', () => {\n            expect(generateFinancialOctoberPeriodsUpToYear(2017)).toHaveLength(10);\n        });\n\n        it('should generate periods for 10 years with the last one being the current year', () => {\n            const tenYearlyPeriods = generateFinancialOctoberPeriodsUpToYear(2017);\n\n            expect(tenYearlyPeriods).toEqual([\n                {\n                    endDate: '2009-09-30',\n                    startDate: '2008-10-01',\n                    name: 'October 2008 - September 2009',\n                    id: '2008Oct',\n                }, {\n                    endDate: '2010-09-30',\n                    startDate: '2009-10-01',\n                    name: 'October 2009 - September 2010',\n                    id: '2009Oct',\n                }, {\n                    endDate: '2011-09-30',\n                    startDate: '2010-10-01',\n                    name: 'October 2010 - September 2011',\n                    id: '2010Oct',\n                }, {\n                    endDate: '2012-09-30',\n                    startDate: '2011-10-01',\n                    name: 'October 2011 - September 2012',\n                    id: '2011Oct',\n                }, {\n                    endDate: '2013-09-30',\n                    startDate: '2012-10-01',\n                    name: 'October 2012 - September 2013',\n                    id: '2012Oct',\n                }, {\n                    endDate: '2014-09-30',\n                    startDate: '2013-10-01',\n                    name: 'October 2013 - September 2014',\n                    id: '2013Oct',\n                }, {\n                    endDate: '2015-09-30',\n                    startDate: '2014-10-01',\n                    name: 'October 2014 - September 2015',\n                    id: '2014Oct',\n                }, {\n                    endDate: '2016-09-30',\n                    startDate: '2015-10-01',\n                    name: 'October 2015 - September 2016',\n                    id: '2015Oct',\n                }, {\n                    endDate: '2017-09-30',\n                    startDate: '2016-10-01',\n                    name: 'October 2016 - September 2017',\n                    id: '2016Oct',\n                }, {\n                    endDate: '2018-09-30',\n                    startDate: '2017-10-01',\n                    name: 'October 2017 - September 2018',\n                    id: '2017Oct',\n                },\n            ]);\n        });\n\n        it('should respect the number of years parameter and generate the correct number of years', () => {\n            const fiveYearlyPeriods = generateFinancialOctoberPeriodsUpToYear(2017, 5);\n\n            expect(fiveYearlyPeriods).toEqual([\n                {\n                    endDate: '2014-09-30',\n                    startDate: '2013-10-01',\n                    name: 'October 2013 - September 2014',\n                    id: '2013Oct',\n                }, {\n                    endDate: '2015-09-30',\n                    startDate: '2014-10-01',\n                    name: 'October 2014 - September 2015',\n                    id: '2014Oct',\n                }, {\n                    endDate: '2016-09-30',\n                    startDate: '2015-10-01',\n                    name: 'October 2015 - September 2016',\n                    id: '2015Oct',\n                }, {\n                    endDate: '2017-09-30',\n                    startDate: '2016-10-01',\n                    name: 'October 2016 - September 2017',\n                    id: '2016Oct',\n                }, {\n                    endDate: '2018-09-30',\n                    startDate: '2017-10-01',\n                    name: 'October 2017 - September 2018',\n                    id: '2017Oct',\n                },\n            ]);\n        });\n\n        it('should throw an error when the numberOfYears is not a positive integer', () => {\n            expect(() => generateFinancialOctoberPeriodsUpToYear(2017, 'a')).toThrowError();\n            expect(() => generateFinancialOctoberPeriodsUpToYear(2017, 1.2)).toThrowError();\n            expect(() => generateFinancialOctoberPeriodsUpToYear(2017, true)).toThrowError();\n            expect(() => generateFinancialOctoberPeriodsUpToYear(2017, -1)).toThrowError();\n            expect(() => generateFinancialOctoberPeriodsUpToYear(2017, 0)).toThrowError();\n            expect(() => generateFinancialOctoberPeriodsUpToYear(2017, Infinity)).toThrowError();\n        });\n\n        it('should generate the yearly periods for 2021 and 2022', () => {\n            const fiveYearlyPeriods = generateFinancialOctoberPeriodsUpToYear(2022, 2);\n\n            expect(fiveYearlyPeriods).toEqual([\n                {\n                    endDate: '2022-09-30',\n                    startDate: '2021-10-01',\n                    name: 'October 2021 - September 2022',\n                    id: '2021Oct',\n                }, {\n                    endDate: '2023-09-30',\n                    startDate: '2022-10-01',\n                    name: 'October 2022 - September 2023',\n                    id: '2022Oct',\n                },\n            ]);\n        });\n\n        it('should generate use the current year when no year has been given', () => {\n            expect(generateFinancialOctoberPeriodsUpToYear()).toEqual(generateFinancialOctoberPeriodsUpToYear(new Date().getFullYear()));\n        });\n    });\n});\n"],"file":"financial-october_spec.js"}