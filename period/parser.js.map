{"version":3,"sources":["../../src/period/parser.js"],"names":["getPeriodFromPeriodId","periodTypeRegex","Daily","Weekly","WeeklyWednesday","WeeklyThursday","WeeklySaturday","WeeklySunday","BiWeekly","Monthly","BiMonthly","Quarterly","SixMonthly","SixMonthlyApril","Yearly","FinancialApril","FinancialJuly","FinancialOct","computeWeekBasedPeriod","year","week","locale","weekTypeDiff","periodLength","startDate","monthNames","startMonth","getMonth","startYear","getFullYear","startMonthName","startDayNum","getDate","endDate","endMonth","endDayNum","endMonthName","weeklyMatcherParser","match","parseInt","weekType","Error","p","name","id","isValidDailyPeriod","month","day","regexMatchToPeriod","date","Date","substr","biWeek","monthNum","lastDay","biMonth","startMonthNum","quarter","s","endMonthNum","periodId","period","Object","keys","filter","periodType","test","hasOwnProperty","map"],"mappings":"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","file":"parser.js","sourcesContent":["import {\n    getMonthNamesForLocale,\n    formatAsISODate,\n    getLastDateOfMonth,\n    getFirstDateOfQuarter,\n    getLastDateOfQuarter,\n    getFirstDateOfWeek,\n    addDays,\n} from './helpers';\nimport { toLocaleDayFormat } from './formatters';\n\nconst periodTypeRegex = {\n    Daily: /^([0-9]{4})([0-9]{2})([0-9]{2})$/,          // YYYYMMDD\n    Weekly: /^([0-9]{4})()W([0-9]{1,2})$/,              // YYYY\"W\"[1-53]\n    WeeklyWednesday: /^([0-9]{4})(Wed)W([0-9]{1,2})$/,  // YYYY\"WedW\"[1-53]\n    WeeklyThursday: /^([0-9]{4})(Thu)W([0-9]{1,2})$/,   // YYYY\"ThuW\"[1-53]\n    WeeklySaturday: /^([0-9]{4})(Sat)W([0-9]{1,2})$/,   // YYYY\"SatW\"[1-53]\n    WeeklySunday: /^([0-9]{4})(Sun)W([0-9]{1,2})$/,     // YYYY\"SunW\"[1-53]\n    BiWeekly: /^([0-9]{4})BiW([0-9]{1,2})$/,            // YYYY\"BiW\"[1-27]\n    Monthly: /^([0-9]{4})([0-9]{2})$/,                  // YYYYMM\n    BiMonthly: /^([0-9]{4})([0-9]{2})B$/,               // YYYY0[1-6]\"B\"\n    Quarterly: /^([0-9]{4})Q([1234])$/,                 // YYYY\"Q\"[1-4]\n    SixMonthly: /^([0-9]{4})S([12])$/,                  // YYYY\"S\"[1/2]\n    SixMonthlyApril: /^([0-9]{4})AprilS([12])$/,        // YYYY\"AprilS\"[1/2]\n    Yearly: /^([0-9]{4})$/,                             // YYYY\n    FinancialApril: /^([0-9]{4})April$/,                // YYYY\"April\"\n    FinancialJuly: /^([0-9]{4})July$/,                  // YYYY\"July\"\n    FinancialOct: /^([0-9]{4})Oct$/,                    // YYYY\"Oct\"\n};\n\nconst computeWeekBasedPeriod = ({ year, week, locale = 'en', weekTypeDiff = 0, periodLength = 6 }) => {\n    const startDate = addDays(weekTypeDiff, getFirstDateOfWeek(year, week));\n    const monthNames = getMonthNamesForLocale(locale);\n    const startMonth = startDate.getMonth();\n    const startYear = startDate.getFullYear();\n    const startMonthName = monthNames[startMonth];\n    const startDayNum = startDate.getDate();\n\n    if (week === 53 && startYear !== year) {\n        /* eslint-disable no-param-reassign */\n        week = 1;\n        year = startYear;\n        /* eslint-enable */\n    }\n\n    const endDate = addDays(periodLength, startDate);\n    const endMonth = endDate.getMonth();\n    const endDayNum = endDate.getDate();\n    const endMonthName = monthNames[endMonth];\n\n    return {\n        week,\n        year,\n        startMonthName,\n        startDayNum,\n        endMonthName,\n        endDayNum,\n        startDate: formatAsISODate(startDate),\n        endDate: formatAsISODate(endDate),\n    };\n};\n\n/* eslint-disable complexity */\nconst weeklyMatcherParser = (match, locale = 'en') => {\n    const year = parseInt(match[1], 10);\n    const weekType = match[2];\n    const week = parseInt(match[3], 10);\n\n    if (week < 1 || week > 53) {\n        throw new Error('Invalid week number');\n    }\n\n    let weekTypeDiff = 0;\n    switch (weekType) {\n    case 'Wed': weekTypeDiff = 2; break;\n    case 'Thu': weekTypeDiff = 3; break;\n    case 'Sat': weekTypeDiff = -2; break;\n    case 'Sun': weekTypeDiff = -1; break;\n    default: break;\n    }\n\n    const p = computeWeekBasedPeriod({ year, week, locale, weekTypeDiff });\n\n    const name = p.startMonthName === p.endMonthName\n        ? `${p.year} W${p.week} ${p.startMonthName} ${p.startDayNum} - ${p.endDayNum}`\n        : `${p.year} W${p.week} ${p.startMonthName} ${p.startDayNum} - ${p.endMonthName} ${p.endDayNum}`;\n\n    return {\n        id: `${p.year}${weekType}W${p.week}`,\n        name,\n        startDate: p.startDate,\n        endDate: p.endDate,\n    };\n};\n\nconst isValidDailyPeriod = (month, year, day) =>\n    month > 11 || month < 0 ||\n    day > 31 || day < 1 ||\n    year < 1000 || year > 5000;\n/* eslint-enable */\n\nconst regexMatchToPeriod = {\n    Daily: (match, locale = 'en') => {\n        const year = parseInt(match[1], 10);\n        const month = parseInt(match[2], 10) - 1;\n        const day = parseInt(match[3], 10);\n        if (isValidDailyPeriod(month, year, day)) {\n            throw new Error('Invalid Daily period');\n        }\n        const date = new Date(match[1], match[2] - 1, match[3]);\n        return {\n            id: `${date.getFullYear()}${(`0${date.getMonth() + 1}`).substr(-2)}${(`0${date.getDate()}`).substr(-2)}`,\n            name: toLocaleDayFormat(date, locale),\n            startDate: formatAsISODate(date),\n            endDate: formatAsISODate(date),\n        };\n    },\n    Weekly: weeklyMatcherParser,\n    WeeklyWednesday: weeklyMatcherParser,\n    WeeklyThursday: weeklyMatcherParser,\n    WeeklySaturday: weeklyMatcherParser,\n    WeeklySunday: weeklyMatcherParser,\n    BiWeekly: (match, locale = 'en') => {\n        const year = parseInt(match[1], 10);\n        let biWeek = parseInt(match[2], 10);\n\n        if (biWeek < 1 || biWeek > 27) {\n            throw new Error('Invalid BiWeek number');\n        }\n\n        const week = (biWeek * 2) - 1;\n        const p = computeWeekBasedPeriod({ year, week, locale, periodLength: 13 });\n        biWeek = (p.week + 1) / 2;\n\n        const name = p.startMonthName === p.endMonthName\n            ? `${p.year} BiWeek ${biWeek} ${p.startMonthName} ${p.startDayNum} - ${p.endDayNum}`\n            : `${p.year} BiWeek ${biWeek} ${p.startMonthName} ${p.startDayNum} - ${p.endMonthName} ${p.endDayNum}`;\n\n        return {\n            id: `${p.year}BiW${biWeek}`,\n            name,\n            startDate: p.startDate,\n            endDate: p.endDate,\n        };\n    },\n    Monthly: (match, locale = 'en') => {\n        const id = match[0];\n        const year = parseInt(match[1], 10);\n        const month = parseInt(match[2], 10) - 1;\n        if (month > 11 || month < 0) {\n            throw new Error('Invalid month number');\n        }\n        const monthNum = `0${month + 1}`.substr(-2);\n        const monthNames = getMonthNamesForLocale(locale);\n        const lastDay = getLastDateOfMonth(year, month);\n        return {\n            id,\n            name: `${monthNames[month]} ${year}`,\n            startDate: `${year}-${monthNum}-01`,\n            endDate: formatAsISODate(lastDay),\n        };\n    },\n    BiMonthly: (match, locale = 'en') => {\n        const id = match[0];\n        const year = parseInt(match[1], 10);\n        const biMonth = parseInt(match[2], 10);\n        if (biMonth < 1 || biMonth > 6) {\n            throw new Error('Invalid BiMonth number');\n        }\n        const startMonth = (biMonth - 1) * 2;\n        const startMonthNum = `0${startMonth + 1}`.substr(-2);\n        const endMonth = startMonth + 1;\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id,\n            name: `${monthNames[startMonth]} - ${monthNames[endMonth]} ${year}`,\n            startDate: `${year}-${startMonthNum}-01`,\n            endDate: formatAsISODate(getLastDateOfMonth(year, endMonth)),\n        };\n    },\n    Quarterly: (match, locale = 'en') => {\n        const id = match[0];\n        const year = parseInt(match[1], 10);\n        const quarter = parseInt(match[2], 10);\n        const startMonth = (quarter - 1) * 3;\n        const endMonth = (quarter * 3) - 1;\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id,\n            name: `${monthNames[startMonth]} - ${monthNames[endMonth]} ${year}`,\n            startDate: formatAsISODate(getFirstDateOfQuarter(year, quarter)),\n            endDate: formatAsISODate(getLastDateOfQuarter(year, quarter)),\n        };\n    },\n    SixMonthly: (match, locale = 'en') => {\n        const id = match[0];\n        const year = match[1];\n        const s = parseInt(match[2], 10) - 1;\n        const startMonth = 6 * s;\n        const endMonth = (6 * s) + 6;\n        const endMonthNum = `0${endMonth}`.substr(-2);\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id,\n            name: `${monthNames[startMonth]} - ${monthNames[endMonth - 1]} ${year}`,\n            startDate: `${year}-0${(startMonth + 1)}-01`,\n            endDate: `${year}-${(endMonthNum)}-${s === 0 ? '30' : '31'}`,\n        };\n    },\n    SixMonthlyApril: (match, locale = 'en') => {\n        const id = match[0];\n        const year = parseInt(match[1], 10);\n        const s = parseInt(match[2], 10) - 1;\n        const startMonth = s === 0 ? 4 : 10;\n        const startMonthNum = `0${startMonth}`.substr(-2);\n        const endMonth = s === 0 ? 9 : 3;\n        const endMonthNum = `0${endMonth}`.substr(-2);\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id,\n            name: s === 0\n                ? `${monthNames[startMonth - 1]} - ${monthNames[endMonth - 1]} ${year}`\n                : `${monthNames[startMonth - 1]} ${year} - ${monthNames[endMonth - 1]} ${year + 1}`,\n            startDate: `${year}-${(startMonthNum)}-01`,\n            endDate: `${year + s}-${(endMonthNum)}-${s === 0 ? '30' : '31'}`,\n        };\n    },\n    Yearly: match => ({\n        id: match[0],\n        name: match[1],\n        startDate: `${match[1]}-01-01`,\n        endDate: `${match[1]}-12-31`,\n    }),\n    FinancialApril: (match, locale = 'en') => {\n        const year = parseInt(match[1], 10);\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id: match[0],\n            name: `${monthNames[3]} ${year} - ${monthNames[2]} ${year + 1}`,\n            startDate: `${year}-04-01`,\n            endDate: `${year + 1}-03-31`,\n        };\n    },\n    FinancialJuly: (match, locale = 'en') => {\n        const year = parseInt(match[1], 10);\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id: match[0],\n            name: `${monthNames[6]} ${year} - ${monthNames[5]} ${year + 1}`,\n            startDate: `${year}-07-01`,\n            endDate: `${year + 1}-06-30`,\n        };\n    },\n    FinancialOct: (match, locale = 'en') => {\n        const year = parseInt(match[1], 10);\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id: match[0],\n            name: `${monthNames[9]} ${year} - ${monthNames[8]} ${year + 1}`,\n            startDate: `${year}-10-01`,\n            endDate: `${year + 1}-09-30`,\n        };\n    },\n};\n\nexport function getPeriodFromPeriodId(periodId, locale = 'en') {\n    const period = Object.keys(periodTypeRegex)\n        .filter(periodType => periodTypeRegex[periodType].test(periodId)\n            && regexMatchToPeriod.hasOwnProperty(periodType),\n        )\n        .map(periodType => regexMatchToPeriod[periodType](periodId.match(periodTypeRegex[periodType]), locale))[0];\n\n    if (!period) {\n        throw new Error('Invalid period format');\n    }\n\n    return period;\n}\n\nexport default getPeriodFromPeriodId;\n"]}