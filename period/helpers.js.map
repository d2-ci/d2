{"version":3,"sources":["../../src/period/helpers.js"],"names":["formatAsISODate","filterFuturePeriods","getYYYYMM","getBiMonthlyId","validateIfValueIsInteger","getCurrentYear","is53WeekISOYear","addDays","addMonths","subtractDays","getFirstDayInFirstISOWeekForYear","getLastDayOfTheWeekForFirstDayOfTheWeek","getMonthNamesForLocale","getLastDateOfMonth","getFirstDateOfQuarter","getLastDateOfQuarter","getFirstDateOfWeek","date","Date","Error","y","getFullYear","m","getMonth","substr","d","getDate","periods","array","now","i","length","startDate","push","Math","floor","year","p","days","result","setDate","months","setMonth","getDay","daysAfterMonday","endDate","locale","monthNames","monthName","toLocaleDateString","month","quarter","startMonth","ordTable","ordTableLeap","week","isLeapYear","ordDiff","correction","ordDate"],"mappings":"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","file":"helpers.js","sourcesContent":["import { isInteger } from '../lib/check';\n\nexport function formatAsISODate(date) {\n    if (!(date instanceof Date)) {\n        throw new Error('formatAsISODate(date) only accepts Date objects');\n    }\n\n    const y = date.getFullYear();\n    const m = `0${date.getMonth() + 1}`.substr(-2);\n    const d = `0${date.getDate()}`.substr(-2);\n    return `${y}-${m}-${d}`;\n}\n\nexport function filterFuturePeriods(periods) {\n    const array = [];\n    const now = new Date();\n\n    for (let i = 0; i < periods.length; i++) {\n        if (new Date(periods[i].startDate) <= now) {\n            array.push(periods[i]);\n        }\n    }\n\n    return array;\n}\n\nexport function getYYYYMM(date) {\n    const y = date.getFullYear();\n    let m = `${date.getMonth() + 1}`;\n    m = `0${m}`.substr(-2);\n    return y + m;\n}\n\nexport function getBiMonthlyId(date) {\n    const y = date.getFullYear();\n    const m = `0${Math.floor(date.getMonth() / 2) + 1}`.substr(-2);\n    return `${y + m}B`;\n}\n\nexport function validateIfValueIsInteger(year) {\n    if (!isInteger(year)) {\n        throw new Error(\n            'Generator should be called with an integer to identify the year.' +\n            ' Perhaps you passed a Date object?',\n        );\n    }\n\n    if (year < 0) {\n        throw new Error('Generator does not support generating year before the year 0.');\n    }\n}\n\nexport function getCurrentYear() {\n    return new Date().getFullYear();\n}\n\nexport function is53WeekISOYear(year) {\n    const p = y => ((y + Math.floor(y / 4)) - Math.floor(y / 100)) + Math.floor(y / 400);\n\n    return p(year) % 7 === 4 || p(year - 1) % 7 === 3;\n}\n\nexport function addDays(days, date) {\n    const result = new Date(date);\n\n    result.setDate(result.getDate() + days);\n\n    return result;\n}\n\nexport function addMonths(months, date) {\n    const result = new Date(date);\n\n    result.setMonth(date.getMonth() + months);\n\n    return result;\n}\n\nexport function subtractDays(days, date) {\n    return addDays(-days, date);\n}\n\nexport function getFirstDayInFirstISOWeekForYear(year) {\n    // The first ISO week of the year always contains 4th January. We can use this as a pointer to start the first week.\n    let startDate = new Date(year, 0, 4);\n\n    // January 4th might not be at the start of the week. Therefore we rewind to the start of the week.\n    if (startDate.getDay() === 0) {\n        startDate = subtractDays(6, startDate);\n        // If January 4th is on a Sunday we'll revert back 6 days\n    } else {\n        // We'll revert back the current day number of days - 1 (Due to the days being 0 indexed with 0 being Sunday)\n        const daysAfterMonday = startDate.getDay() - 1;\n        startDate = subtractDays(daysAfterMonday, startDate);\n    }\n\n    return startDate;\n}\n\nexport function getLastDayOfTheWeekForFirstDayOfTheWeek(startDate) {\n    const endDate = new Date(startDate);\n\n    endDate.setDate(endDate.getDate() + 6);\n\n    return endDate;\n}\n\nexport function getMonthNamesForLocale(locale) {\n    const monthNames = [];\n\n    for (let i = 0; i < 12; i += 1) {\n        const monthName = new Date(2000, i, 1).toLocaleDateString(locale, { month: 'long' });\n        monthNames.push(monthName);\n    }\n\n    return monthNames;\n}\n\nexport function getLastDateOfMonth(year, month) {\n    return new Date(new Date(year, month + 1).setDate(0));\n}\n\nexport function getFirstDateOfQuarter(year, quarter) {\n    const startMonth = (quarter - 1) * 3;\n    return new Date(year, startMonth);\n}\n\nexport function getLastDateOfQuarter(year, quarter) {\n    return new Date(getFirstDateOfQuarter(year, quarter + 1).setDate(0));\n}\n\nconst ordTable = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\nconst ordTableLeap = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];\n\nexport function getFirstDateOfWeek(year, week) {\n    const isLeapYear = new Date(new Date(year, 2, 1).setDate(0)).getDate() === 29;\n    const ordDiff = isLeapYear ? ordTableLeap : ordTable;\n\n    const correction = ((new Date(year, 0, 4)).getDay() || 7) + 3;\n    const ordDate = (week * 7) + (1 - correction);\n    if (ordDate < 0) {\n        return new Date(year, 0, ordDate);\n    }\n\n    let month = 11;\n    while (ordDate < ordDiff[month]) {\n        month--; // eslint-disable-line\n    }\n\n    return new Date(year, month, ordDate - ordDiff[month]);\n}\n"]}