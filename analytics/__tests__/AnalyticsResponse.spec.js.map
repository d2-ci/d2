{"version":3,"sources":["../../../src/analytics/__tests__/AnalyticsResponse.spec.js"],"names":["fixture","fixtures","get","response","describe","beforeEach","AnalyticsResponse","it","expect","toThrowErrorMatchingSnapshot","toEqual","headers","extractHeaders","toHaveLength","rows","extractRows","metadata","extractMetadata","dimensions","metaData","items"],"mappings":";;AAAA;;AACA;;;;AAEA,IAAMA,OAAO,GAAGC,kBAASC,GAAT,CAAa,yBAAb,CAAhB;;AAEA,IAAIC,QAAJ;AAEAC,QAAQ,CAAC,mBAAD,EAAsB,YAAM;AAChCC,EAAAA,UAAU,CAAC,YAAM;AACbF,IAAAA,QAAQ,GAAG,IAAIG,0BAAJ,CAAsBN,OAAtB,CAAX;AACH,GAFS,CAAV;AAIAI,EAAAA,QAAQ,CAAC,aAAD,EAAgB,YAAM;AAC1BG,IAAAA,EAAE,CAAC,gDAAD,EAAmD,YAAM;AACvDC,MAAAA,MAAM,CAAC;AAAA,eAAM,iCAAN;AAAA,OAAD,CAAN,CAAkCC,4BAAlC;AACH,KAFC,CAAF;AAIAF,IAAAA,EAAE,CAAC,iDAAD,EAAoD,YAAM;AACxDC,MAAAA,MAAM,CAACL,QAAQ,CAACA,QAAV,CAAN,CAA0BO,OAA1B,CAAkCV,OAAlC;AACH,KAFC,CAAF;AAGH,GARO,CAAR;AAUAI,EAAAA,QAAQ,CAAC,YAAD,EAAe,YAAM;AACzBA,IAAAA,QAAQ,CAAC,mBAAD,EAAsB,YAAM;AAChCG,MAAAA,EAAE,CAAC,6CAAD,EAAgD,YAAM;AACpD,YAAMI,OAAO,GAAGR,QAAQ,CAACS,cAAT,EAAhB;AAEAJ,QAAAA,MAAM,CAACG,OAAD,CAAN,CAAgBE,YAAhB,CAA6B,CAA7B;AACH,OAJC,CAAF;AAKH,KANO,CAAR;AAQAT,IAAAA,QAAQ,CAAC,gBAAD,EAAmB,YAAM;AAC7BG,MAAAA,EAAE,CAAC,0CAAD,EAA6C,YAAM;AACjD,YAAMO,IAAI,GAAGX,QAAQ,CAACY,WAAT,EAAb;AAEAP,QAAAA,MAAM,CAACM,IAAD,CAAN,CAAaD,YAAb,CAA0B,GAA1B;AACH,OAJC,CAAF;AAKH,KANO,CAAR;AAQAT,IAAAA,QAAQ,CAAC,oBAAD,EAAuB,YAAM;AACjCG,MAAAA,EAAE,CAAC,8CAAD,EAAiD,YAAM;AACrD,YAAMS,QAAQ,GAAGb,QAAQ,CAACc,eAAT,EAAjB;AAEAT,QAAAA,MAAM,CAACQ,QAAQ,CAACE,UAAV,CAAN,CAA4BR,OAA5B,CAAoCV,OAAO,CAACmB,QAAR,CAAiBD,UAArD;AACAV,QAAAA,MAAM,CAACQ,QAAQ,CAACI,KAAV,CAAN,CAAuBV,OAAvB,CAA+BV,OAAO,CAACmB,QAAR,CAAiBC,KAAhD;AACH,OALC,CAAF,CADiC,CAQjC;AACA;AACH,KAVO,CAAR;AAWH,GA5BO,CAAR;AA6BH,CA5CO,CAAR","sourcesContent":["import fixtures from '../../__fixtures__/fixtures';\nimport AnalyticsResponse from '../AnalyticsResponse';\n\nconst fixture = fixtures.get('/api/analytics/response');\n\nlet response;\n\ndescribe('AnalyticsResponse', () => {\n    beforeEach(() => {\n        response = new AnalyticsResponse(fixture);\n    });\n\n    describe('constructor', () => {\n        it('should not be allowed to be called without new', () => {\n            expect(() => AnalyticsResponse()).toThrowErrorMatchingSnapshot();\n        });\n\n        it('should set the response when passed as argument', () => {\n            expect(response.response).toEqual(fixture);\n        });\n    });\n\n    describe('properties', () => {\n        describe('.extractHeaders()', () => {\n            it('should return the headers from the response', () => {\n                const headers = response.extractHeaders();\n\n                expect(headers).toHaveLength(4);\n            });\n        });\n\n        describe('.extractRows()', () => {\n            it('should return the rows from the response', () => {\n                const rows = response.extractRows();\n\n                expect(rows).toHaveLength(312);\n            });\n        });\n\n        describe('.extractMetadata()', () => {\n            it('should return the metadata from the response', () => {\n                const metadata = response.extractMetadata();\n\n                expect(metadata.dimensions).toEqual(fixture.metaData.dimensions);\n                expect(metadata.items).toEqual(fixture.metaData.items);\n            });\n\n            // TODO\n            // test with OUNAME case\n        });\n    });\n});\n"],"file":"AnalyticsResponse.spec.js"}