{"version":3,"sources":["../../src/period/parser.js"],"names":["getPeriodFromPeriodId","periodTypeRegex","Daily","Weekly","WeeklyWednesday","WeeklyThursday","WeeklySaturday","WeeklySunday","Monthly","BiMonthly","Quarterly","SixMonthly","SixMonthlyApril","Yearly","FinancialApril","FinancialJuly","FinancialOct","weeklyMatcherParser","match","locale","year","parseInt","weekType","week","Error","monthNames","weekTypeDiff","startDate","startMonth","getMonth","startYear","getFullYear","startMonthName","startDayNum","getDate","id","endDate","endMonth","endDayNum","endMonthName","name","isValidDailyPeriod","month","day","regexMatchToPeriod","date","Date","substr","monthNum","lastDay","biMonth","startMonthNum","quarter","s","endMonthNum","periodId","period","Object","keys","filter","periodType","test","hasOwnProperty","map"],"mappings":"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","file":"parser.js","sourcesContent":["import {\n    getMonthNamesForLocale,\n    formatAsISODate,\n    getLastDateOfMonth,\n    getFirstDateOfQuarter,\n    getLastDateOfQuarter,\n    getFirstDateOfWeek,\n    addDays,\n} from './helpers';\nimport { toLocaleDayFormat } from './formatters';\n\nconst periodTypeRegex = {\n    Daily: /^([0-9]{4})([0-9]{2})([0-9]{2})$/,          // YYYYMMDD\n    Weekly: /^([0-9]{4})()W([0-9]{1,2})$/,              // YYYY\"W\"[1-53]\n    WeeklyWednesday: /^([0-9]{4})(Wed)W([0-9]{1,2})$/,  // YYYY\"WedW\"[1-53]\n    WeeklyThursday: /^([0-9]{4})(Thu)W([0-9]{1,2})$/,   // YYYY\"ThuW\"[1-53]\n    WeeklySaturday: /^([0-9]{4})(Sat)W([0-9]{1,2})$/,   // YYYY\"SatW\"[1-53]\n    WeeklySunday: /^([0-9]{4})(Sun)W([0-9]{1,2})$/,     // YYYY\"SunW\"[1-53]\n    Monthly: /^([0-9]{4})([0-9]{2})$/,                  // YYYYMM\n    BiMonthly: /^([0-9]{4})([0-9]{2})B$/,               // YYYY0[1-6]\"B\"\n    Quarterly: /^([0-9]{4})Q([1234])$/,                 // YYYY\"Q\"[1-4]\n    SixMonthly: /^([0-9]{4})S([12])$/,                  // YYYY\"S\"[1/2]\n    SixMonthlyApril: /^([0-9]{4})AprilS([12])$/,        // YYYY\"AprilS\"[1/2]\n    Yearly: /^([0-9]{4})$/,                             // YYYY\n    FinancialApril: /^([0-9]{4})April$/,                // YYYY\"April\"\n    FinancialJuly: /^([0-9]{4})July$/,                  // YYYY\"July\"\n    FinancialOct: /^([0-9]{4})Oct$/,                    // YYYY\"Oct\"\n};\n\n/* eslint-disable complexity */\nconst weeklyMatcherParser = (match, locale = 'en') => {\n    let year = parseInt(match[1], 10);\n    const weekType = match[2];\n    let week = parseInt(match[3], 10);\n    if (week < 1 || week > 53) {\n        throw new Error('Invalid week number');\n    }\n\n    const monthNames = getMonthNamesForLocale(locale);\n\n    let weekTypeDiff = 0;\n    switch (weekType) {\n    case 'Wed': weekTypeDiff = 2; break;\n    case 'Thu': weekTypeDiff = 3; break;\n    case 'Sat': weekTypeDiff = -2; break;\n    case 'Sun': weekTypeDiff = -1; break;\n    default: break;\n    }\n\n    const startDate = addDays(weekTypeDiff, getFirstDateOfWeek(year, week));\n    const startMonth = startDate.getMonth();\n    const startYear = startDate.getFullYear();\n    const startMonthName = monthNames[startMonth];\n    const startDayNum = startDate.getDate();\n\n    if (week === 53 && startYear !== year) {\n        week = 1;\n        year = startYear;\n    }\n    const id = `${year}${weekType}W${week}`;\n\n    const endDate = addDays(6, startDate);\n    const endMonth = endDate.getMonth();\n    const endDayNum = endDate.getDate();\n    const endMonthName = monthNames[endMonth];\n\n    const name = startMonth === endMonth\n        ? `${year} W${week} ${startMonthName} ${startDayNum} - ${endDayNum}`\n        : `${year} W${week} ${startMonthName} ${startDayNum} - ${endMonthName} ${endDayNum}`;\n\n    return {\n        id,\n        name,\n        startDate: formatAsISODate(startDate),\n        endDate: formatAsISODate(endDate),\n    };\n};\n\nconst isValidDailyPeriod = (month, year, day) =>\n    month > 11 || month < 0 ||\n    day > 31 || day < 1 ||\n    year < 1000 || year > 5000;\n/* eslint-enable */\n\nconst regexMatchToPeriod = {\n    Daily: (match, locale = 'en') => {\n        const year = parseInt(match[1], 10);\n        const month = parseInt(match[2], 10) - 1;\n        const day = parseInt(match[3], 10);\n        if (isValidDailyPeriod(month, year, day)) {\n            throw new Error('Invalid Daily period');\n        }\n        const date = new Date(match[1], match[2] - 1, match[3]);\n        return {\n            id: `${date.getFullYear()}${(`0${date.getMonth() + 1}`).substr(-2)}${(`0${date.getDate()}`).substr(-2)}`,\n            name: toLocaleDayFormat(date, locale),\n            startDate: formatAsISODate(date),\n            endDate: formatAsISODate(date),\n        };\n    },\n    Weekly: weeklyMatcherParser,\n    WeeklyWednesday: weeklyMatcherParser,\n    WeeklyThursday: weeklyMatcherParser,\n    WeeklySaturday: weeklyMatcherParser,\n    WeeklySunday: weeklyMatcherParser,\n    Monthly: (match, locale = 'en') => {\n        const id = match[0];\n        const year = parseInt(match[1], 10);\n        const month = parseInt(match[2], 10) - 1;\n        if (month > 11 || month < 0) {\n            throw new Error('Invalid month number');\n        }\n        const monthNum = `0${month + 1}`.substr(-2);\n        const monthNames = getMonthNamesForLocale(locale);\n        const lastDay = getLastDateOfMonth(year, month);\n        return {\n            id,\n            name: `${monthNames[month]} ${year}`,\n            startDate: `${year}-${monthNum}-01`,\n            endDate: formatAsISODate(lastDay),\n        };\n    },\n    BiMonthly: (match, locale = 'en') => {\n        const id = match[0];\n        const year = parseInt(match[1], 10);\n        const biMonth = parseInt(match[2], 10);\n        if (biMonth < 1 || biMonth > 6) {\n            throw new Error('Invalid BiMonth number');\n        }\n        const startMonth = (biMonth - 1) * 2;\n        const startMonthNum = `0${startMonth + 1}`.substr(-2);\n        const endMonth = startMonth + 1;\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id,\n            name: `${monthNames[startMonth]} - ${monthNames[endMonth]} ${year}`,\n            startDate: `${year}-${startMonthNum}-01`,\n            endDate: formatAsISODate(getLastDateOfMonth(year, endMonth)),\n        };\n    },\n    Quarterly: (match, locale = 'en') => {\n        const id = match[0];\n        const year = parseInt(match[1], 10);\n        const quarter = parseInt(match[2], 10);\n        const startMonth = (quarter - 1) * 3;\n        const endMonth = (quarter * 3) - 1;\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id,\n            name: `${monthNames[startMonth]} - ${monthNames[endMonth]} ${year}`,\n            startDate: formatAsISODate(getFirstDateOfQuarter(year, quarter)),\n            endDate: formatAsISODate(getLastDateOfQuarter(year, quarter)),\n        };\n    },\n    SixMonthly: (match, locale = 'en') => {\n        const id = match[0];\n        const year = match[1];\n        const s = parseInt(match[2], 10) - 1;\n        const startMonth = 6 * s;\n        const endMonth = (6 * s) + 6;\n        const endMonthNum = `0${endMonth}`.substr(-2);\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id,\n            name: `${monthNames[startMonth]} - ${monthNames[endMonth - 1]} ${year}`,\n            startDate: `${year}-0${(startMonth + 1)}-01`,\n            endDate: `${year}-${(endMonthNum)}-${s === 0 ? '30' : '31'}`,\n        };\n    },\n    SixMonthlyApril: (match, locale = 'en') => {\n        const id = match[0];\n        const year = parseInt(match[1], 10);\n        const s = parseInt(match[2], 10) - 1;\n        const startMonth = s === 0 ? 4 : 10;\n        const startMonthNum = `0${startMonth}`.substr(-2);\n        const endMonth = s === 0 ? 9 : 3;\n        const endMonthNum = `0${endMonth}`.substr(-2);\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id,\n            name: s === 0\n                ? `${monthNames[startMonth - 1]} - ${monthNames[endMonth - 1]} ${year}`\n                : `${monthNames[startMonth - 1]} ${year} - ${monthNames[endMonth - 1]} ${year + 1}`,\n            startDate: `${year}-${(startMonthNum)}-01`,\n            endDate: `${year + s}-${(endMonthNum)}-${s === 0 ? '30' : '31'}`,\n        };\n    },\n    Yearly: match => ({\n        id: match[0],\n        name: match[1],\n        startDate: `${match[1]}-01-01`,\n        endDate: `${match[1]}-12-31`,\n    }),\n    FinancialApril: (match, locale = 'en') => {\n        const year = parseInt(match[1], 10);\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id: match[0],\n            name: `${monthNames[3]} ${year} - ${monthNames[2]} ${year + 1}`,\n            startDate: `${year}-04-01`,\n            endDate: `${year + 1}-03-31`,\n        };\n    },\n    FinancialJuly: (match, locale = 'en') => {\n        const year = parseInt(match[1], 10);\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id: match[0],\n            name: `${monthNames[6]} ${year} - ${monthNames[5]} ${year + 1}`,\n            startDate: `${year}-07-01`,\n            endDate: `${year + 1}-06-30`,\n        };\n    },\n    FinancialOct: (match, locale = 'en') => {\n        const year = parseInt(match[1], 10);\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id: match[0],\n            name: `${monthNames[9]} ${year} - ${monthNames[8]} ${year + 1}`,\n            startDate: `${year}-10-01`,\n            endDate: `${year + 1}-09-30`,\n        };\n    },\n};\n\nexport function getPeriodFromPeriodId(periodId, locale = 'en') {\n    const period = Object.keys(periodTypeRegex)\n        .filter(periodType => periodTypeRegex[periodType].test(periodId)\n            && regexMatchToPeriod.hasOwnProperty(periodType),\n        )\n        .map(periodType => regexMatchToPeriod[periodType](periodId.match(periodTypeRegex[periodType]), locale))[0];\n\n    if (!period) {\n        throw new Error('Invalid period format');\n    }\n\n    return period;\n}\n\nexport default getPeriodFromPeriodId;\n"]}