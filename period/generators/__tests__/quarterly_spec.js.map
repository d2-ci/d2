{"version":3,"sources":["../../../../src/period/generators/__tests__/quarterly_spec.js"],"names":["describe","it","expect","toThrowError","Date","toHaveLength","toEqual","startDate","endDate","name","id","getFullYear"],"mappings":";;AAAA;;AAEAA,QAAQ,CAAC,kBAAD,EAAqB,YAAM;AAC/BA,EAAAA,QAAQ,CAAC,mCAAD,EAAsC,YAAM;AAChDC,IAAAA,EAAE,CAAC,6CAAD,EAAgD,YAAM;AACpDC,MAAAA,MAAM,CAAC;AAAA,eAAM,gDAAgC,CAAC,EAAjC,CAAN;AAAA,OAAD,CAAN,CAAmDC,YAAnD;AACH,KAFC,CAAF;AAIAF,IAAAA,EAAE,CAAC,kDAAD,EAAqD,YAAM;AACzDC,MAAAA,MAAM,CAAC;AAAA,eAAM,gDAAgC,IAAIE,IAAJ,EAAhC,CAAN;AAAA,OAAD,CAAN,CAA0DD,YAA1D;AACH,KAFC,CAAF;AAIAF,IAAAA,EAAE,CAAC,sCAAD,EAAyC,YAAM;AAC7CC,MAAAA,MAAM,CAAC,gDAAgC,IAAhC,CAAD,CAAN,CAA8CG,YAA9C,CAA2D,CAA3D;AACH,KAFC,CAAF;AAIAJ,IAAAA,EAAE,CAAC,6CAAD,EAAgD,YAAM;AACpDC,MAAAA,MAAM,CAAC,gDAAgC,IAAhC,CAAD,CAAN,CAA8CI,OAA9C,CAAsD,CAClD;AACIC,QAAAA,SAAS,EAAE,YADf;AAEIC,QAAAA,OAAO,EAAE,YAFb;AAGIC,QAAAA,IAAI,EAAE,sBAHV;AAIIC,QAAAA,EAAE,EAAE;AAJR,OADkD,EAM/C;AACCH,QAAAA,SAAS,EAAE,YADZ;AAECC,QAAAA,OAAO,EAAE,YAFV;AAGCC,QAAAA,IAAI,EAAE,mBAHP;AAICC,QAAAA,EAAE,EAAE;AAJL,OAN+C,EAW/C;AACCH,QAAAA,SAAS,EAAE,YADZ;AAECC,QAAAA,OAAO,EAAE,YAFV;AAGCC,QAAAA,IAAI,EAAE,uBAHP;AAICC,QAAAA,EAAE,EAAE;AAJL,OAX+C,EAgB/C;AACCH,QAAAA,SAAS,EAAE,YADZ;AAECC,QAAAA,OAAO,EAAE,YAFV;AAGCC,QAAAA,IAAI,EAAE,yBAHP;AAICC,QAAAA,EAAE,EAAE;AAJL,OAhB+C,CAAtD;AAuBH,KAxBC,CAAF;AA0BAT,IAAAA,EAAE,CAAC,2FAAD,EAA8F,YAAM;AAClGC,MAAAA,MAAM,CAAC,iDAAD,CAAN,CAA0CI,OAA1C,CAAkD,gDAAgC,IAAIF,IAAJ,GAAWO,WAAX,EAAhC,CAAlD;AACH,KAFC,CAAF;AAGH,GA1CO,CAAR;AA2CH,CA5CO,CAAR","sourcesContent":["import { generateQuarterlyPeriodsForYear } from '../quarterly';\n\ndescribe('Quarterly period', () => {\n    describe('generateQuarterlyPeriodsForYear()', () => {\n        it('should not allow years before the year zero', () => {\n            expect(() => generateQuarterlyPeriodsForYear(-10)).toThrowError();\n        });\n\n        it('should throw an error when passing a Date object', () => {\n            expect(() => generateQuarterlyPeriodsForYear(new Date())).toThrowError();\n        });\n\n        it('should generate 4 periods for a year', () => {\n            expect(generateQuarterlyPeriodsForYear(2017)).toHaveLength(4);\n        });\n\n        it('should generate the correct quarter periods', () => {\n            expect(generateQuarterlyPeriodsForYear(2017)).toEqual([\n                {\n                    startDate: '2017-01-01',\n                    endDate: '2017-03-31',\n                    name: 'January - March 2017',\n                    id: '2017Q1',\n                }, {\n                    startDate: '2017-04-01',\n                    endDate: '2017-06-30',\n                    name: 'April - June 2017',\n                    id: '2017Q2',\n                }, {\n                    startDate: '2017-07-01',\n                    endDate: '2017-09-30',\n                    name: 'July - September 2017',\n                    id: '2017Q3',\n                }, {\n                    startDate: '2017-10-01',\n                    endDate: '2017-12-31',\n                    name: 'October - December 2017',\n                    id: '2017Q4',\n                },\n            ]);\n        });\n\n        it('should generate the same periods when called without as when called with the current year', () => {\n            expect(generateQuarterlyPeriodsForYear()).toEqual(generateQuarterlyPeriodsForYear(new Date().getFullYear()));\n        });\n    });\n});\n"],"file":"quarterly_spec.js"}