{"version":3,"sources":["../../src/lib/utils.js"],"names":["throwError","message","Error","curry","toCurry","parameter","curried","args","apply","concat","addLockedProperty","object","name","value","propertyDescriptor","enumerable","configurable","writable","Object","defineProperty","copyOwnProperties","to","from","keys","filter","key","hasOwnProperty","forEach","pick","propertyPath","propertiesToGet","split","item","reduce","result","property","undefined","pickOr","pathProperty","defaultValue","pathResult","Deferred","promise","Promise","resolve","reject","updateAPIUrlWithBaseUrlVersionNumber","apiUrl","baseUrl","apiUrlWithVersionRexExp","apiVersionMatch","match","baseUrlHasVersion","apiUrlHasVersion","test","version","replace","whitelistURI","whitelistURICodes","map","c","encodeURIComponent","whitelistRegExp","RegExp","join","customEncodeURIComponent","uri","decodeURIComponent","identity"],"mappings":"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","sourcesContent":["/**\n * @module lib/utils\n */\n\n\nexport function throwError(message) {\n    throw new Error(message);\n}\n\n// TODO: Throw an error when `toCurry` is not a function\nexport function curry(toCurry, parameter) {\n    return function curried(...args) {\n        return toCurry.apply(this, [parameter].concat(args));\n    };\n}\n\nexport function addLockedProperty(object, name, value) {\n    const propertyDescriptor = {\n        enumerable: true,\n        configurable: false,\n        writable: false,\n        value,\n    };\n    Object.defineProperty(object, name, propertyDescriptor);\n}\n\nexport function copyOwnProperties(to, from) {\n    Object.keys(from)\n        .filter(key => from.hasOwnProperty(key))\n        .forEach((key) => {\n            to[key] = from[key]; // eslint-disable-line no-param-reassign\n        });\n\n    return to;\n}\n\n/**\n * Curried get function to pick a property from an object\n * Will safely pick a property from an object and guards against the infamous \"can not read property of undefined\".\n *\n * @param {String} propertyPath\n * @param {Any} defaultValue A default value to be returned when no value was found at the path\n * @returns Function\n *\n * get :: String -> Object -> Any\n */\nexport function pick(propertyPath) {\n    const propertiesToGet = propertyPath.split('.');\n\n    return item => propertiesToGet\n        .reduce((result, property) => {\n            if (result) {\n                return result[property];\n            }\n            return undefined;\n        }, item);\n}\n\nexport const pickOr = (pathProperty, defaultValue) => (item) => {\n    const pathResult = pick(pathProperty)(item);\n\n    return pathResult !== undefined ? pathResult : defaultValue;\n};\n\nexport class Deferred {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n\n    static create() {\n        return new Deferred();\n    }\n}\n\nexport function updateAPIUrlWithBaseUrlVersionNumber(apiUrl, baseUrl) {\n    if (!baseUrl || !apiUrl) {\n        return apiUrl;\n    }\n\n    const apiUrlWithVersionRexExp = /api\\/([1-9][0-9])/;\n    const apiVersionMatch = baseUrl.match(apiUrlWithVersionRexExp);\n\n    const baseUrlHasVersion = apiVersionMatch && apiVersionMatch[1];\n    const apiUrlHasVersion = apiUrl && !apiUrlWithVersionRexExp.test(apiUrl);\n\n    if (baseUrlHasVersion && apiUrlHasVersion) {\n        const version = apiVersionMatch[1];\n\n        // Inject the current api version number into the endPoint urls\n        return apiUrl.replace(/api/, `api/${version}`);\n    }\n\n    return apiUrl;\n}\n\n// Define our very own special list of characters that we don't want to encode in the URI\nconst whitelistURI = ',&$=/;:';\nconst whitelistURICodes = whitelistURI.split('').map(c => encodeURIComponent(c));\nconst whitelistRegExp = new RegExp(`(?:${whitelistURICodes.join('|')})`, 'g');\n\n/**\n * Encode all invalid URI characters, except the ones we've decided we don't want to\n */\nexport function customEncodeURIComponent(uri) {\n    // return uri;\n    return encodeURIComponent(uri)\n        .replace(whitelistRegExp, decodeURIComponent);\n}\n\nexport function identity(value) {\n    return value;\n}\n"],"file":"utils.js"}