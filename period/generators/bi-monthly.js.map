{"version":3,"sources":["../../../src/period/generators/bi-monthly.js"],"names":["generateBiMonthlyPeriodsForYear","year","locale","periods","date","Date","getFullYear","period","endDate","setDate","firstMonth","toLocaleDateString","month","lastMonth","startDate","name","id","push","reverse"],"mappings":";;;;;;;AAAA;;AAQO,SAASA,+BAAT,GAGL;AAAA,MAFEC,IAEF,uEAFS,8BAET;AAAA,MADEC,MACF,uEADW,IACX;AACE,yCAAyBD,IAAzB;AAEA,MAAME,OAAO,GAAG,EAAhB;AACA,MAAMC,IAAI,GAAG,IAAIC,IAAJ,kBAAmBJ,IAAnB,EAAb;;AAEA,SAAOG,IAAI,CAACE,WAAL,OAAuBL,IAA9B,EAAoC;AAChC,QAAMM,MAAM,GAAG,EAAf;AACAA,IAAAA,MAAM,CAACC,OAAP,GAAiB,8BAAgBJ,IAAhB,CAAjB;AACAA,IAAAA,IAAI,CAACK,OAAL,CAAa,CAAb;AACAL,IAAAA,IAAI,CAACK,OAAL,CAAa,CAAb;AAEA,QAAMC,UAAU,GAAGN,IAAI,CAACO,kBAAL,CAAwBT,MAAxB,EAAgC;AAAEU,MAAAA,KAAK,EAAE;AAAT,KAAhC,CAAnB;AACA,QAAMC,SAAS,GAAG,wBAAU,CAAV,EAAaT,IAAb,EAAmBO,kBAAnB,CAAsCT,MAAtC,EAA8C;AAC5DU,MAAAA,KAAK,EAAE;AADqD,KAA9C,CAAlB;AAIAL,IAAAA,MAAM,CAACO,SAAP,GAAmB,8BAAgBV,IAAhB,CAAnB;AACAG,IAAAA,MAAM,CAACQ,IAAP,aAAiBL,UAAjB,gBAAiCG,SAAjC,cAA8CT,IAAI,CAACE,WAAL,EAA9C;AACAC,IAAAA,MAAM,CAACS,EAAP,GAAY,6BAAeZ,IAAf,CAAZ;AACAD,IAAAA,OAAO,CAACc,IAAR,CAAaV,MAAb;AACAH,IAAAA,IAAI,CAACK,OAAL,CAAa,CAAb;AACH,GAtBH,CAwBE;;;AACA,SAAON,OAAO,CAACe,OAAR,EAAP;AACH","sourcesContent":["import {\n    validateIfValueIsInteger,\n    formatAsISODate,\n    getCurrentYear,\n    addMonths,\n    getBiMonthlyId,\n} from '../helpers'\n\nexport function generateBiMonthlyPeriodsForYear(\n    year = getCurrentYear(),\n    locale = 'en'\n) {\n    validateIfValueIsInteger(year)\n\n    const periods = []\n    const date = new Date(`31 Dec ${year}`)\n\n    while (date.getFullYear() === year) {\n        const period = {}\n        period.endDate = formatAsISODate(date)\n        date.setDate(0)\n        date.setDate(1)\n\n        const firstMonth = date.toLocaleDateString(locale, { month: 'long' })\n        const lastMonth = addMonths(1, date).toLocaleDateString(locale, {\n            month: 'long',\n        })\n\n        period.startDate = formatAsISODate(date)\n        period.name = `${firstMonth} - ${lastMonth} ${date.getFullYear()}`\n        period.id = getBiMonthlyId(date)\n        periods.push(period)\n        date.setDate(0)\n    }\n\n    // Bi-months are collected backwards. So we reverse to get the chronological order.\n    return periods.reverse()\n}\n"],"file":"bi-monthly.js"}