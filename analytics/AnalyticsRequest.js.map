{"version":3,"sources":["../../src/analytics/AnalyticsRequest.js"],"names":["AnalyticsRequest","model","request","columns","rows","concat","forEach","d","dimension","filter","addDimension","items","map","item","id","filters","addFilter","f"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA;;;;;;;;;;;;;IAaMA,gB;;;;;;;;;;;;AAGF;;;;;;;;;;;;;kCAaUC,K,EAAO;AACb,gBAAIC,UAAU,IAAd;;AAEA;AACA,gBAAMC,UAAUF,MAAME,OAAN,IAAiB,EAAjC;AACA,gBAAMC,OAAOH,MAAMG,IAAN,IAAc,EAA3B;;AAEAD,oBAAQE,MAAR,CAAeD,IAAf,EAAqBE,OAArB,CAA6B,UAACC,CAAD,EAAO;AAChC,oBAAIC,YAAYD,EAAEC,SAAlB;;AAEA,oBAAID,EAAEE,MAAN,EAAc;AACVD,uCAAiBD,EAAEE,MAAnB;AACH;;AAEDP,0BAAUA,QAAQQ,YAAR,CAAqBF,SAArB,EAAgCD,EAAEI,KAAF,CAAQC,GAAR,CAAY;AAAA,2BAAQC,KAAKC,EAAb;AAAA,iBAAZ,CAAhC,CAAV;AACH,aARD;;AAUA;AACA,gBAAMC,UAAUd,MAAMc,OAAN,IAAiB,EAAjC;;AAEAA,oBAAQT,OAAR,CACI;AAAA,uBAAMJ,UAAUA,QAAQc,SAAR,CAAkBC,EAAET,SAApB,EAA+BS,EAAEN,KAAF,CAAQC,GAAR,CAAY;AAAA,2BAAQC,KAAKC,EAAb;AAAA,iBAAZ,CAA/B,CAAhB;AAAA,aADJ;;AAIA,mBAAOZ,OAAP;AACH;;;;EAzC0B,+CAC3B,4CAA6B,8EAA7B,CAD2B,C;;kBA4ChBF,gB","file":"AnalyticsRequest.js","sourcesContent":["import AnalyticsRequestDimensionsMixin from './AnalyticsRequestDimensionsMixin';\nimport AnalyticsRequestFiltersMixin from './AnalyticsRequestFiltersMixin';\nimport AnalyticsRequestPropertiesMixin from './AnalyticsRequestPropertiesMixin';\nimport AnalyticsRequestBase from './AnalyticsRequestBase';\n\n/**\n * @description\n * Class for constructing a request object to use for communicating with the analytics API endpoint.\n *\n * @param {!Object} options Object with analytics request options\n *\n * @memberof module:analytics\n *\n * @extends module:analytics.AnalyticsRequestDimensionsMixin\n * @extends module:analytics.AnalyticsRequestFiltersMixin\n * @extends module:analytics.AnalyticsRequestPropertiesMixin\n * @extends module:analytics.AnalyticsRequestBase\n */\nclass AnalyticsRequest extends AnalyticsRequestDimensionsMixin(\n    AnalyticsRequestFiltersMixin(AnalyticsRequestPropertiesMixin(AnalyticsRequestBase)),\n) {\n    /**\n     * Extracts dimensions and filters from an analytic object model and add them to the request\n     *\n     * @param {Object} model The analytics object model from which extract the dimensions/filters\n     *\n     * @returns {AnalyticsRequest} A new instance of the class for chaining purposes\n     *\n     * @example\n     * const req = new d2.analytics.request()\n     *    .fromModel(model);\n     *\n     * // dimension=pe:LAST_12_MONTH&dimension=dx:fbfJHSPpUQD;cYeuwXTCPkU;Jtf34kNZhzP;hfdmMSPBgLG&filter=ou:ImspTQPwCqd\n     */\n    fromModel(model) {\n        let request = this;\n\n        // extract dimensions from model\n        const columns = model.columns || [];\n        const rows = model.rows || [];\n\n        columns.concat(rows).forEach((d) => {\n            let dimension = d.dimension;\n\n            if (d.filter) {\n                dimension += `:${d.filter}`;\n            }\n\n            request = request.addDimension(dimension, d.items.map(item => item.id));\n        });\n\n        // extract filters from model\n        const filters = model.filters || [];\n\n        filters.forEach(\n            f => (request = request.addFilter(f.dimension, f.items.map(item => item.id))),\n        );\n\n        return request;\n    }\n}\n\nexport default AnalyticsRequest;\n"]}