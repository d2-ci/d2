{"version":3,"sources":["../../src/period/parser.js"],"names":["periodTypeRegex","Daily","Weekly","WeeklyWednesday","WeeklyThursday","WeeklySaturday","WeeklySunday","BiWeekly","Monthly","BiMonthly","Quarterly","SixMonthly","SixMonthlyApril","Yearly","FinancialApril","FinancialJuly","FinancialOct","weeklyMatcherParser","match","locale","year","parseInt","weekType","week","Error","weekTypeDiff","p","name","startMonthName","endMonthName","startDayNum","endDayNum","id","startDate","endDate","isValidDailyPeriod","month","day","regexMatchToPeriod","date","Date","getFullYear","getMonth","substr","getDate","biWeek","periodLength","monthNum","monthNames","lastDay","biMonth","startMonth","startMonthNum","endMonth","quarter","s","endMonthNum","getPeriodFromPeriodId","periodId","period","Object","keys","filter","periodType","test","hasOwnProperty","map"],"mappings":"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","sourcesContent":["import {\n    getMonthNamesForLocale,\n    formatAsISODate,\n    getLastDateOfMonth,\n    getFirstDateOfQuarter,\n    getLastDateOfQuarter,\n    computeWeekBasedPeriod,\n} from './helpers'\nimport { toLocaleDayFormat } from './formatters'\n\nconst periodTypeRegex = {\n    Daily: /^([0-9]{4})([0-9]{2})([0-9]{2})$/, // YYYYMMDD\n    Weekly: /^([0-9]{4})()W([0-9]{1,2})$/, // YYYY\"W\"[1-53]\n    WeeklyWednesday: /^([0-9]{4})(Wed)W([0-9]{1,2})$/, // YYYY\"WedW\"[1-53]\n    WeeklyThursday: /^([0-9]{4})(Thu)W([0-9]{1,2})$/, // YYYY\"ThuW\"[1-53]\n    WeeklySaturday: /^([0-9]{4})(Sat)W([0-9]{1,2})$/, // YYYY\"SatW\"[1-53]\n    WeeklySunday: /^([0-9]{4})(Sun)W([0-9]{1,2})$/, // YYYY\"SunW\"[1-53]\n    BiWeekly: /^([0-9]{4})BiW([0-9]{1,2})$/, // YYYY\"BiW\"[1-27]\n    Monthly: /^([0-9]{4})([0-9]{2})$/, // YYYYMM\n    BiMonthly: /^([0-9]{4})([0-9]{2})B$/, // YYYY0[1-6]\"B\"\n    Quarterly: /^([0-9]{4})Q([1234])$/, // YYYY\"Q\"[1-4]\n    SixMonthly: /^([0-9]{4})S([12])$/, // YYYY\"S\"[1/2]\n    SixMonthlyApril: /^([0-9]{4})AprilS([12])$/, // YYYY\"AprilS\"[1/2]\n    Yearly: /^([0-9]{4})$/, // YYYY\n    FinancialApril: /^([0-9]{4})April$/, // YYYY\"April\"\n    FinancialJuly: /^([0-9]{4})July$/, // YYYY\"July\"\n    FinancialOct: /^([0-9]{4})Oct$/, // YYYY\"Oct\"\n}\n\n/* eslint-disable complexity */\nconst weeklyMatcherParser = (match, locale = 'en') => {\n    const year = parseInt(match[1], 10)\n    const weekType = match[2]\n    const week = parseInt(match[3], 10)\n\n    if (week < 1 || week > 53) {\n        throw new Error('Invalid week number')\n    }\n\n    let weekTypeDiff = 0\n    switch (weekType) {\n        case 'Wed':\n            weekTypeDiff = 2\n            break\n        case 'Thu':\n            weekTypeDiff = 3\n            break\n        case 'Sat':\n            weekTypeDiff = -2\n            break\n        case 'Sun':\n            weekTypeDiff = -1\n            break\n        default:\n            break\n    }\n\n    const p = computeWeekBasedPeriod({\n        year,\n        week,\n        locale,\n        weekTypeDiff,\n    })\n\n    const name =\n        p.startMonthName === p.endMonthName\n            ? `${p.year} W${p.week} ${p.startMonthName} ${p.startDayNum} - ${p.endDayNum}`\n            : `${p.year} W${p.week} ${p.startMonthName} ${p.startDayNum} - ${p.endMonthName} ${p.endDayNum}`\n\n    return {\n        id: `${p.year}${weekType}W${p.week}`,\n        name,\n        startDate: p.startDate,\n        endDate: p.endDate,\n    }\n}\n\nconst isValidDailyPeriod = (month, year, day) =>\n    month > 11 || month < 0 || day > 31 || day < 1 || year < 1000 || year > 5000\n/* eslint-enable */\n\nconst regexMatchToPeriod = {\n    Daily: (match, locale = 'en') => {\n        const year = parseInt(match[1], 10)\n        const month = parseInt(match[2], 10) - 1\n        const day = parseInt(match[3], 10)\n        if (isValidDailyPeriod(month, year, day)) {\n            throw new Error('Invalid Daily period')\n        }\n        const date = new Date(match[1], match[2] - 1, match[3])\n        return {\n            id: `${date.getFullYear()}${`0${date.getMonth() + 1}`.substr(\n                -2\n            )}${`0${date.getDate()}`.substr(-2)}`,\n            name: toLocaleDayFormat(date, locale),\n            startDate: formatAsISODate(date),\n            endDate: formatAsISODate(date),\n        }\n    },\n    Weekly: weeklyMatcherParser,\n    WeeklyWednesday: weeklyMatcherParser,\n    WeeklyThursday: weeklyMatcherParser,\n    WeeklySaturday: weeklyMatcherParser,\n    WeeklySunday: weeklyMatcherParser,\n    BiWeekly: (match, locale = 'en') => {\n        const year = parseInt(match[1], 10)\n        let biWeek = parseInt(match[2], 10)\n\n        if (biWeek < 1 || biWeek > 27) {\n            throw new Error('Invalid BiWeek number')\n        }\n\n        const week = biWeek * 2 - 1\n        const p = computeWeekBasedPeriod({\n            year,\n            week,\n            locale,\n            periodLength: 13,\n        })\n        biWeek = (p.week + 1) / 2\n\n        const name =\n            p.startMonthName === p.endMonthName\n                ? `${p.year} BiWeek ${biWeek} ${p.startMonthName} ${p.startDayNum} - ${p.endDayNum}`\n                : `${p.year} BiWeek ${biWeek} ${p.startMonthName} ${p.startDayNum} - ${p.endMonthName} ${p.endDayNum}`\n\n        return {\n            id: `${p.year}BiW${biWeek}`,\n            name,\n            startDate: p.startDate,\n            endDate: p.endDate,\n        }\n    },\n    Monthly: (match, locale = 'en') => {\n        const id = match[0]\n        const year = parseInt(match[1], 10)\n        const month = parseInt(match[2], 10) - 1\n        if (month > 11 || month < 0) {\n            throw new Error('Invalid month number')\n        }\n        const monthNum = `0${month + 1}`.substr(-2)\n        const monthNames = getMonthNamesForLocale(locale)\n        const lastDay = getLastDateOfMonth(year, month)\n        return {\n            id,\n            name: `${monthNames[month]} ${year}`,\n            startDate: `${year}-${monthNum}-01`,\n            endDate: formatAsISODate(lastDay),\n        }\n    },\n    BiMonthly: (match, locale = 'en') => {\n        const id = match[0]\n        const year = parseInt(match[1], 10)\n        const biMonth = parseInt(match[2], 10)\n        if (biMonth < 1 || biMonth > 6) {\n            throw new Error('Invalid BiMonth number')\n        }\n        const startMonth = (biMonth - 1) * 2\n        const startMonthNum = `0${startMonth + 1}`.substr(-2)\n        const endMonth = startMonth + 1\n        const monthNames = getMonthNamesForLocale(locale)\n        return {\n            id,\n            name: `${monthNames[startMonth]} - ${monthNames[endMonth]} ${year}`,\n            startDate: `${year}-${startMonthNum}-01`,\n            endDate: formatAsISODate(getLastDateOfMonth(year, endMonth)),\n        }\n    },\n    Quarterly: (match, locale = 'en') => {\n        const id = match[0]\n        const year = parseInt(match[1], 10)\n        const quarter = parseInt(match[2], 10)\n        const startMonth = (quarter - 1) * 3\n        const endMonth = quarter * 3 - 1\n        const monthNames = getMonthNamesForLocale(locale)\n        return {\n            id,\n            name: `${monthNames[startMonth]} - ${monthNames[endMonth]} ${year}`,\n            startDate: formatAsISODate(getFirstDateOfQuarter(year, quarter)),\n            endDate: formatAsISODate(getLastDateOfQuarter(year, quarter)),\n        }\n    },\n    SixMonthly: (match, locale = 'en') => {\n        const id = match[0]\n        const year = match[1]\n        const s = parseInt(match[2], 10) - 1\n        const startMonth = 6 * s\n        const endMonth = 6 * s + 6\n        const endMonthNum = `0${endMonth}`.substr(-2)\n        const monthNames = getMonthNamesForLocale(locale)\n        return {\n            id,\n            name: `${monthNames[startMonth]} - ${\n                monthNames[endMonth - 1]\n            } ${year}`,\n            startDate: `${year}-0${startMonth + 1}-01`,\n            endDate: `${year}-${endMonthNum}-${s === 0 ? '30' : '31'}`,\n        }\n    },\n    SixMonthlyApril: (match, locale = 'en') => {\n        const id = match[0]\n        const year = parseInt(match[1], 10)\n        const s = parseInt(match[2], 10) - 1\n        const startMonth = s === 0 ? 4 : 10\n        const startMonthNum = `0${startMonth}`.substr(-2)\n        const endMonth = s === 0 ? 9 : 3\n        const endMonthNum = `0${endMonth}`.substr(-2)\n        const monthNames = getMonthNamesForLocale(locale)\n        return {\n            id,\n            name:\n                s === 0\n                    ? `${monthNames[startMonth - 1]} - ${\n                          monthNames[endMonth - 1]\n                      } ${year}`\n                    : `${monthNames[startMonth - 1]} ${year} - ${\n                          monthNames[endMonth - 1]\n                      } ${year + 1}`,\n            startDate: `${year}-${startMonthNum}-01`,\n            endDate: `${year + s}-${endMonthNum}-${s === 0 ? '30' : '31'}`,\n        }\n    },\n    Yearly: match => ({\n        id: match[0],\n        name: match[1],\n        startDate: `${match[1]}-01-01`,\n        endDate: `${match[1]}-12-31`,\n    }),\n    FinancialApril: (match, locale = 'en') => {\n        const year = parseInt(match[1], 10)\n        const monthNames = getMonthNamesForLocale(locale)\n        return {\n            id: match[0],\n            name: `${monthNames[3]} ${year} - ${monthNames[2]} ${year + 1}`,\n            startDate: `${year}-04-01`,\n            endDate: `${year + 1}-03-31`,\n        }\n    },\n    FinancialJuly: (match, locale = 'en') => {\n        const year = parseInt(match[1], 10)\n        const monthNames = getMonthNamesForLocale(locale)\n        return {\n            id: match[0],\n            name: `${monthNames[6]} ${year} - ${monthNames[5]} ${year + 1}`,\n            startDate: `${year}-07-01`,\n            endDate: `${year + 1}-06-30`,\n        }\n    },\n    FinancialOct: (match, locale = 'en') => {\n        const year = parseInt(match[1], 10)\n        const monthNames = getMonthNamesForLocale(locale)\n        return {\n            id: match[0],\n            name: `${monthNames[9]} ${year} - ${monthNames[8]} ${year + 1}`,\n            startDate: `${year}-10-01`,\n            endDate: `${year + 1}-09-30`,\n        }\n    },\n}\n\nexport function getPeriodFromPeriodId(periodId, locale = 'en') {\n    const period = Object.keys(periodTypeRegex)\n        .filter(\n            periodType =>\n                periodTypeRegex[periodType].test(periodId) &&\n                regexMatchToPeriod.hasOwnProperty(periodType)\n        )\n        .map(periodType =>\n            regexMatchToPeriod[periodType](\n                periodId.match(periodTypeRegex[periodType]),\n                locale\n            )\n        )[0]\n\n    if (!period) {\n        throw new Error('Invalid period format')\n    }\n\n    return period\n}\n\nexport default getPeriodFromPeriodId\n"],"file":"parser.js"}