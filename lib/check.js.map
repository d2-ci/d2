{"version":3,"sources":["../../src/lib/check.js"],"names":["checkDefined","checkType","isType","isString","isArray","isObject","isDefined","isInteger","isNumeric","contains","isValidUid","areDefinedAndEqual","checkValidRootJunction","value","name","undefined","Error","join","type","noop","e","Array","Object","nVal","isFinite","Math","floor","Number","parseFloat","item","list","listToCheck","indexOf","isEmpty","length","hasKeys","object","keys","left","right","toBe","toBeAny","values","some","isNullUndefinedOrEmptyString","isFunction","fun","hasOwnProperty","propertyName","prototype","call","rootJunctions","isValidRootJunction","rootJunction"],"mappings":"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","file":"check.js","sourcesContent":["/**\n * @module lib/check\n */\n\n/**\n *\n * @param value\n * @param name\n * @returns {boolean}\n */\nexport function checkDefined(value, name) {\n    if (value !== undefined) {\n        return true;\n    }\n    throw new Error([name || 'Value', 'should be provided'].join(' '));\n}\n\n// TODO: Decide if checkType([], 'object') is a 'false' positive\nexport function checkType(value, type, name) {\n    checkDefined(value, name);\n    checkDefined(type, 'Type');\n\n    if ((typeof type === 'function' && value instanceof type) ||\n        (typeof type === 'string' && typeof value === type)) { // eslint-disable-line valid-typeof\n        return true;\n    }\n    throw new Error(['Expected', name || value, 'to have type', type].join(' '));\n}\n\n// TODO: Log type error?\nexport function isType(value, type) {\n    function noop() {}\n\n    try {\n        checkType(value, type);\n        return true;\n    } catch (e) {\n        noop();\n    }\n\n    return false;\n}\n\nexport function isString(value) {\n    return isType(value, 'string');\n}\n\nexport function isArray(value) {\n    return Array.isArray(value);\n}\n\nexport function isObject(value) {\n    return isType(value, Object);\n}\n\nexport function isDefined(value) {\n    return value != null;\n}\n\nexport function isInteger(nVal) {\n    return typeof nVal === 'number' &&\n        isFinite(nVal) &&\n        nVal > -9007199254740992 &&\n        nVal < 9007199254740992 &&\n        Math.floor(nVal) === nVal;\n}\n\n// Polyfill for the isInteger function that will be added in ES6\n// http://wiki.ecmascript.org/doku.php?id=harmony:number.isinteger\n/* istanbul ignore if  */\nif (!Number.isInteger) {\n    Number.isInteger = isInteger;\n}\n\nexport function isNumeric(nVal) {\n    return typeof nVal === 'number' &&\n        isFinite(nVal) &&\n        ((nVal - parseFloat(nVal)) + 1) >= 0;\n}\n\nexport function contains(item, list) {\n    const listToCheck = (isArray(list) && list) || [];\n\n    return listToCheck.indexOf(item) >= 0;\n}\n\nexport const isEmpty = list => list.length === 0;\n\n/**\n * @deprecated Use isValidUid from the `uid.js` file.\n */\nexport function isValidUid(value) {\n    return value && value.length === 11;\n}\n\nexport const hasKeys = object => object && Object.keys(object).length > 0;\n\nexport function areDefinedAndEqual(left, right) {\n    return isDefined(left) && isDefined(right) && right === left;\n}\n\nexport const toBe = (left, right) => left === right;\nexport const toBeAny = values => left => values.some(right => toBe(left, right));\nexport const isNullUndefinedOrEmptyString = toBeAny([undefined, null, '']);\n\nexport const isFunction = fun => typeof fun === 'function';\n\nexport const hasOwnProperty = (object, propertyName) => Object.prototype.hasOwnProperty.call(object, propertyName);\n\n// The logical mode to use when having multiple filters.\n// Default is AND.\n// See https://docs.dhis2.org/master/en/developer/html/webapi_metadata_object_filter.html\n\nexport const rootJunctions = ['OR', 'AND'];\nexport const isValidRootJunction = toBeAny(rootJunctions);\nexport function checkValidRootJunction(rootJunction) {\n    checkType(rootJunction, 'string', 'rootJunction');\n\n    if (isValidRootJunction(rootJunction)) {\n        return true;\n    }\n    throw new Error(`Expected ${rootJunction} to be one of [${rootJunctions}]`);\n}\n\n"]}