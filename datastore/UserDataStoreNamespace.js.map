{"version":3,"sources":["../../src/datastore/UserDataStoreNamespace.js"],"names":["UserDataStoreNamespace","namespace","keys","api","Api","getApi","endPoint","BaseStoreNamespace"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;IAWMA,sB;;;;;AACF,kCAAYC,SAAZ,EAAuBC,IAAvB,EAA6E;AAAA,QAAhDC,GAAgD,uEAA1CC,aAAIC,MAAJ,EAA0C;AAAA,QAA5BC,QAA4B,uEAAjB,eAAiB;;AAAA;;AAAA,+FACnEL,SADmE,EACxDC,IADwD,EAClDC,GADkD,EAC7CG,QAD6C;AAE5E;;;EAHgCC,4B;;eAMtBP,sB","sourcesContent":["import Api from '../api/Api';\nimport BaseStoreNamespace from './BaseStoreNamespace';\n\n/**\n * @augments module:datastore.BaseStoreNamespace\n * @description\n * Represents a namespace in the dataStore that can be used to be used to interact with\n * the remote API.\n *\n * @property {array} keys an array of the loaded keys.\n * @property {string} namespace Name of the namespace as on the server.\n *\n * @memberof module:current-user\n */\nclass UserDataStoreNamespace extends BaseStoreNamespace {\n    constructor(namespace, keys, api = Api.getApi(), endPoint = 'userDataStore') {\n        super(namespace, keys, api, endPoint);\n    }\n}\n\nexport default UserDataStoreNamespace;\n"],"file":"UserDataStoreNamespace.js"}