{"version":3,"sources":["../../src/analytics/AnalyticsRequestDimensionsMixin.js"],"names":["AnalyticsRequestDimensionsMixin","items","addDimension","dimension","dimensionIndex","existingDimension","dimensions","find","item","index","updatedItems","existingItems","Set","Array","isArray","splice","push","base"],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;;;AAEA;;;;;;;;AAQA,IAAMA,kCAAkC,SAAlCA,+BAAkC;AAAA;AACpC;;;;;;;AADoC;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAShC;;;;;;;;;;;;;;;AATgC,iDAwBfC,KAxBe,EAwBR;AACpB,2BAAO,KAAKC,YAAL,CAAkB,IAAlB,EAAwBD,KAAxB,CAAP;AACH;;AAED;;;;;;;;;;;;;;;AA5BgC;AAAA;AAAA,mDA0CbA,KA1Ca,EA0CN;AACtB,2BAAO,KAAKC,YAAL,CAAkB,IAAlB,EAAwBD,KAAxB,CAAP;AACH;;AAED;;;;;;;;;;;;;;;AA9CgC;AAAA;AAAA,oDA4DZA,KA5DY,EA4DL;AACvB,2BAAO,KAAKC,YAAL,CAAkB,IAAlB,EAAwBD,KAAxB,CAAP;AACH;;AAED;;;;;;;;;;;;;;;;AAhEgC;AAAA;AAAA,6CA+EnBE,SA/EmB,EA+ERF,KA/EQ,EA+ED;AAC3B,wBAAIG,iBAAiB,CAArB;;AAEA,wBAAMC,oBAAoB,KAAKC,UAAL,CAAgBC,IAAhB,CAAqB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC5D,4BAAID,KAAKL,SAAL,KAAmBA,SAAvB,EAAkC;AAC9BC,6CAAiBK,KAAjB;;AAEA,mCAAOD,IAAP;AACH;;AAED,+BAAO,KAAP;AACH,qBARyB,CAA1B;;AAUA,wBAAIE,eAAe,EAAnB;AACA,wBAAIC,gBAAgB,EAApB;;AAEA,wBAAIN,iBAAJ,EAAuB;AACnBM,wCAAgBN,kBAAkBJ,KAAlB,IAA2B,EAA3C;AACH;;AAED,wBAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC3BS,oEAAmB,IAAIE,GAAJ,8BAAYD,aAAZ,IAA2BV,KAA3B,GAAnB;AACH,qBAFD,MAEO,IAAIY,MAAMC,OAAN,CAAcb,KAAd,CAAJ,EAA0B;AAC7BS,oEAAmB,IAAIE,GAAJ,8BAAYD,aAAZ,sBAA8BV,KAA9B,GAAnB;AACH;;AAED,wBAAII,iBAAJ,EAAuB;AACnB,6BAAKC,UAAL,CAAgBS,MAAhB,CAAuBX,cAAvB,EAAuC,CAAvC,EAA0C,EAAED,oBAAF,EAAaF,OAAOS,YAApB,EAA1C;AACH,qBAFD,MAEO;AACH,6BAAKJ,UAAL,CAAgBU,IAAhB,CAAqB,EAAEb,oBAAF,EAAaF,OAAOS,YAApB,EAArB;AACH;;AAED,2BAAO,+BAAqB,IAArB,CAAP;AACH;AAhH+B;;AAAA;AAAA,UAQtBO,IARsB;AAAA;AAAA,CAAxC;;kBAmHejB,+B","file":"AnalyticsRequestDimensionsMixin.js","sourcesContent":["import AnalyticsRequest from './AnalyticsRequest';\n\n/**\n * @private\n * @description\n * AnalyticsRequest dimensions mixin function\n *\n * @param {*} base The base class to mix onto\n * @return {module:analytics.AnalyticsRequestDimensionsMixin} The mixin class\n */\nconst AnalyticsRequestDimensionsMixin = base =>\n    /**\n     * @private\n     * @description\n     * AnalyticsRequest dimensions mixin class\n     *\n     * @alias module:analytics.AnalyticsRequestDimensionsMixin\n     */\n    class extends base {\n        /**\n         * Adds/updates the dx dimension to use in the request.\n         *\n         * @param {!(String|Array)} items The dimension items to add to the dx dimension\n         *\n         * @returns {AnalyticsRequest} A new instance of the class for chaining purposes\n         *\n         * @example\n         * const req = new d2.analytics.request()\n         *    .addDataDimension(['fbfJHSPpUQD', 'cYeuwXTCPkU'])\n         *    .addDataDimension('BfMAe6Itzgt.REPORTING_RATE');\n         *\n         * // dimension=dx:fbfJHSPpUQD;cYeuwXTCPkU;BfMAe6Itzgt.REPORTING_RATE\n         *\n         */\n        addDataDimension(items) {\n            return this.addDimension('dx', items);\n        }\n\n        /**\n         * Adds/updates the pe dimension to use in the request.\n         *\n         * @param {!(String|Array)} items The dimension items to add to the pe dimension\n         *\n         * @returns {AnalyticsRequest} A new instance of the class for chaining purposes\n         *\n         * @example\n         * const req = new d2.analytics.request()\n         *    .addPeriodDimension(['201701', '201702'])\n         *    .addPeriodDimension('LAST_4_QUARTERS');\n         *\n         * // dimension=pe:201701;201702;LAST_4_QUARTERS\n         */\n        addPeriodDimension(items) {\n            return this.addDimension('pe', items);\n        }\n\n        /**\n         * Adds/updates the ou dimension to use in the request.\n         *\n         * @param {!(String|Array)} items The dimension items to add to the ou dimension\n         *\n         * @returns {AnalyticsRequest} A new instance of the class for chaining purposes\n         *\n         * @example\n         * const req = new d2.analytics.request()\n         *    .addOrgUnitDimension(['O6uvpzGd5pu', 'lc3eMKXaEfw'])\n         *    .addOrgUnitDimension('OU_GROUP-w0gFTTmsUcF');\n         *\n         * // dimension=ou:O6uvpzGd5pu;lc3eMKXaEfw;OU_GROUP-w0gFTTmsUcF\n         */\n        addOrgUnitDimension(items) {\n            return this.addDimension('ou', items);\n        }\n\n        /**\n         * Adds a new dimension or updates an existing one to use in the request.\n         *\n         * @param {!String} dimension The dimension to add to the request\n         * @param {(String|Array)} items The dimension items to add to the dimension\n         *\n         * @returns {AnalyticsRequest} A new instance of the class for chaining purposes\n         *\n         * @example\n         * const req = new d2.analytics.request()\n         *    .addDimension('Bpx0589u8y0', ['oRVt7g429ZO', 'MAs88nJc9nL'])\n         *    .addDimension('qrur9Dvnyt5-Yf6UHoPkdS6');\n         *\n         * // dimension=Bpx0589u8y0:oRVt7g429ZO;MAs88nJc9nL&dimension=qrur9Dvnyt5-Yf6UHoPkdS6\n         */\n        addDimension(dimension, items) {\n            let dimensionIndex = 0;\n\n            const existingDimension = this.dimensions.find((item, index) => {\n                if (item.dimension === dimension) {\n                    dimensionIndex = index;\n\n                    return item;\n                }\n\n                return false;\n            });\n\n            let updatedItems = [];\n            let existingItems = [];\n\n            if (existingDimension) {\n                existingItems = existingDimension.items || [];\n            }\n\n            if (typeof items === 'string') {\n                updatedItems = [...new Set([...existingItems, items])];\n            } else if (Array.isArray(items)) {\n                updatedItems = [...new Set([...existingItems, ...items])];\n            }\n\n            if (existingDimension) {\n                this.dimensions.splice(dimensionIndex, 1, { dimension, items: updatedItems });\n            } else {\n                this.dimensions.push({ dimension, items: updatedItems });\n            }\n\n            return new AnalyticsRequest(this);\n        }\n    };\n\nexport default AnalyticsRequestDimensionsMixin;\n"]}