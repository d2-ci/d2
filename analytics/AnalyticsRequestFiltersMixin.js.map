{"version":3,"sources":["../../src/analytics/AnalyticsRequestFiltersMixin.js"],"names":["AnalyticsRequestFiltersMixin","items","addFilter","dimension","filterIndex","existingFilter","filters","find","item","index","updatedItems","existingItems","Set","Array","isArray","splice","push","base"],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;;;AAEA;;;;;;;;;AASA,IAAMA,+BAA+B,SAA/BA,4BAA+B;AAAA;AACjC;;;;;;;AADiC;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAS7B;;;;;;;;;;;;;;AAT6B,8CAuBfC,KAvBe,EAuBR;AACjB,2BAAO,KAAKC,SAAL,CAAe,IAAf,EAAqBD,KAArB,CAAP;AACH;;AAED;;;;;;;;;;;;;;;AA3B6B;AAAA;AAAA,gDAyCbA,KAzCa,EAyCN;AACnB,2BAAO,KAAKC,SAAL,CAAe,IAAf,EAAqBD,KAArB,CAAP;AACH;;AAED;;;;;;;;;;;;;;;AA7C6B;AAAA;AAAA,iDA2DZA,KA3DY,EA2DL;AACpB,2BAAO,KAAKC,SAAL,CAAe,IAAf,EAAqBD,KAArB,CAAP;AACH;;AAED;;;;;;;;;;;;;;;;AA/D6B;AAAA;AAAA,0CA8EnBE,SA9EmB,EA8ERF,KA9EQ,EA8ED;AACxB,wBAAIG,cAAc,CAAlB;;AAEA,wBAAMC,iBAAiB,KAAKC,OAAL,CAAaC,IAAb,CAAkB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACtD,4BAAID,KAAKL,SAAL,KAAmBA,SAAvB,EAAkC;AAC9BC,0CAAcK,KAAd;;AAEA,mCAAOD,IAAP;AACH;;AAED,+BAAO,KAAP;AACH,qBARsB,CAAvB;;AAUA,wBAAIE,eAAe,EAAnB;AACA,wBAAIC,gBAAgB,EAApB;;AAEA,wBAAIN,cAAJ,EAAoB;AAChBM,wCAAgBN,eAAeJ,KAAf,IAAwB,EAAxC;AACH;;AAED,wBAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC3BS,oEAAmB,IAAIE,GAAJ,8BAAYD,aAAZ,IAA2BV,KAA3B,GAAnB;AACH,qBAFD,MAEO,IAAIY,MAAMC,OAAN,CAAcb,KAAd,CAAJ,EAA0B;AAC7BS,oEAAmB,IAAIE,GAAJ,8BAAYD,aAAZ,sBAA8BV,KAA9B,GAAnB;AACH;;AAED,wBAAII,cAAJ,EAAoB;AAChB,6BAAKC,OAAL,CAAaS,MAAb,CAAoBX,WAApB,EAAiC,CAAjC,EAAoC,EAAED,oBAAF,EAAaF,OAAOS,YAApB,EAApC;AACH,qBAFD,MAEO;AACH,6BAAKJ,OAAL,CAAaU,IAAb,CAAkB,EAAEb,oBAAF,EAAaF,OAAOS,YAApB,EAAlB;AACH;;AAED,2BAAO,+BAAqB,IAArB,CAAP;AACH;AA/G4B;;AAAA;AAAA,UAQnBO,IARmB;AAAA;AAAA,CAArC;;kBAkHejB,4B","file":"AnalyticsRequestFiltersMixin.js","sourcesContent":["import AnalyticsRequest from './AnalyticsRequest';\n\n/**\n * @private\n * @description\n * AnalyticsRequest filters mixin function\n *\n * @param {*} base The base class to mix onto\n * @return {module:analytics.AnalyticsRequestFiltersMixin} The mixin class\n * @mixin\n */\nconst AnalyticsRequestFiltersMixin = base =>\n    /**\n     * @private\n     * @description\n     * AnalyticsRequest filters mixin class\n     *\n     * @alias module:analytics.AnalyticsRequestFiltersMixin\n     */\n    class extends base {\n        /**\n         * Adds/updates the dx dimension filter to use in the request.\n         *\n         * @param {!(String|Array)} items The dimension items to add to the dx dimension filter\n         *\n         * @returns {AnalyticsRequest} A new instance of the class for chaining purposes\n         *\n         * @example\n         * const req = new d2.analytics.request()\n         *    .addDataFilter(['fbfJHSPpUQD', 'cYeuwXTCPkU'])\n         *    .addDataFilter('BfMAe6Itzgt.REPORTING_RATE');\n         *\n         * // filter=dx:fbfJHSPpUQD;cYeuwXTCPkU;BfMAe6Itzgt.REPORTING_RATE\n         */\n        addDataFilter(items) {\n            return this.addFilter('dx', items);\n        }\n\n        /**\n         * Adds/updates the pe dimension filter to use in the request.\n         *\n         * @param {!(String|Array)} items The dimension items to add to the pe dimension filter\n         *\n         * @returns {AnalyticsRequest} A new instance of the class for chaining purposes\n         *\n         * @example\n         * const req = new d2.analytics.request()\n         *    .addPeriodFilter(['201701', '201702'])\n         *    .addPeriodFilter('LAST_4_QUARTERS')\n         *\n         * // filter=pe:201701;201702;LAST_4_QUARTERS\n         */\n        addPeriodFilter(items) {\n            return this.addFilter('pe', items);\n        }\n\n        /**\n         * Adds/updates the ou dimension filter to use in the request.\n         *\n         * @param {!(String|Array)} items The dimension items to add to the ou dimension filter\n         *\n         * @returns {AnalyticsRequest} A new instance of the class for chaining purposes\n         *\n         * @example\n         * const req = new d2.analytics.request()\n         *    .addOrgUnitFilter(['O6uvpzGd5pu', 'lc3eMKXaEfw'])\n         *    .addOrgUnitFilter('OU_GROUP-w0gFTTmsUcF')\n         *\n         * // filter=ou:O6uvpzGd5pu;lc3eMKXaEfw;OU_GROUP-w0gFTTmsUcF\n         */\n        addOrgUnitFilter(items) {\n            return this.addFilter('ou', items);\n        }\n\n        /**\n         * Adds a filter to the request.\n         *\n         * @param {!String} dimension The dimension to add as filter to the request\n         * @param {(String|Array)} items The dimension items to add to the dimension filter\n         *\n         * @returns {AnalyticsRequest} A new instance of the class for chaining purposes\n         *\n         * @example\n         * const req = new d2.analytics.request()\n         *    .addFilter('Bpx0589u8y0', ['oRVt7g429ZO', 'MAs88nJc9nL'])\n         *    .addFilter('qrur9Dvnyt5-Yf6UHoPkdS6');\n         *\n         * // filter=Bpx0589u8y0:oRVt7g429ZO;MAs88nJc9nL&filter=qrur9Dvnyt5-Yf6UHoPkdS6\n         */\n        addFilter(dimension, items) {\n            let filterIndex = 0;\n\n            const existingFilter = this.filters.find((item, index) => {\n                if (item.dimension === dimension) {\n                    filterIndex = index;\n\n                    return item;\n                }\n\n                return false;\n            });\n\n            let updatedItems = [];\n            let existingItems = [];\n\n            if (existingFilter) {\n                existingItems = existingFilter.items || [];\n            }\n\n            if (typeof items === 'string') {\n                updatedItems = [...new Set([...existingItems, items])];\n            } else if (Array.isArray(items)) {\n                updatedItems = [...new Set([...existingItems, ...items])];\n            }\n\n            if (existingFilter) {\n                this.filters.splice(filterIndex, 1, { dimension, items: updatedItems });\n            } else {\n                this.filters.push({ dimension, items: updatedItems });\n            }\n\n            return new AnalyticsRequest(this);\n        }\n    };\n\nexport default AnalyticsRequestFiltersMixin;\n"]}