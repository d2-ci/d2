{"version":3,"sources":["../../../src/current-user/__tests__/UserAuthorities.spec.js"],"names":["describe","authorities","userAuthorities","beforeEach","fixtures","get","UserAuthorities","create","it","expect","has","toBe"],"mappings":";;AAAA;;AACA;;;;AAEAA,QAAQ,CAAC,iBAAD,EAAoB,YAAM;AAC9B,MAAIC,WAAJ;AACA,MAAIC,eAAJ;AAEAC,EAAAA,UAAU,CAAC,YAAM;AACbF,IAAAA,WAAW,GAAGG,kBAASC,GAAT,CAAa,iBAAb,CAAd;AAEAH,IAAAA,eAAe,GAAGI,yBAAgBC,MAAhB,CAAuBN,WAAvB,CAAlB;AACH,GAJS,CAAV;AAMAO,EAAAA,EAAE,CAAC,iDAAD,EAAoD,YAAM;AACxDC,IAAAA,MAAM,CAACP,eAAe,CAACQ,GAAhB,CAAoB,oBAApB,CAAD,CAAN,CAAkDC,IAAlD,CAAuD,IAAvD;AACH,GAFC,CAAF;AAIAH,EAAAA,EAAE,CAAC,4DAAD,EAA+D,YAAM;AACnEC,IAAAA,MAAM,CAACP,eAAe,CAACQ,GAAhB,CAAoB,0BAApB,CAAD,CAAN,CAAwDC,IAAxD,CAA6D,KAA7D;AACH,GAFC,CAAF;AAIAH,EAAAA,EAAE,CAAC,6EAAD,EAAgF,YAAM;AACpFN,IAAAA,eAAe,GAAGI,yBAAgBC,MAAhB,CAAuB,CAAC,oBAAD,EAAuB,KAAvB,CAAvB,CAAlB;AAEAE,IAAAA,MAAM,CAACP,eAAe,CAACQ,GAAhB,CAAoB,0BAApB,CAAD,CAAN,CAAwDC,IAAxD,CAA6D,IAA7D;AACH,GAJC,CAAF;AAMAH,EAAAA,EAAE,CAAC,uEAAD,EAA0E,YAAM;AAC9EC,IAAAA,MAAM,CAACP,eAAe,CAACQ,GAAhB,CAAoB,KAApB,CAAD,CAAN,CAAmCC,IAAnC,CAAwC,KAAxC;AACH,GAFC,CAAF;AAIAH,EAAAA,EAAE,CAAC,uEAAD,EAA0E,YAAM;AAC9EN,IAAAA,eAAe,GAAGI,yBAAgBC,MAAhB,CAAuB,CAAC,oBAAD,EAAuB,KAAvB,CAAvB,CAAlB;AAEAE,IAAAA,MAAM,CAACP,eAAe,CAACQ,GAAhB,CAAoB,KAApB,CAAD,CAAN,CAAmCC,IAAnC,CAAwC,IAAxC;AACH,GAJC,CAAF;AAKH,CAjCO,CAAR","sourcesContent":["import fixtures from '../../__fixtures__/fixtures';\nimport UserAuthorities from '../../current-user/UserAuthorities';\n\ndescribe('UserAuthorities', () => {\n    let authorities;\n    let userAuthorities;\n\n    beforeEach(() => {\n        authorities = fixtures.get('/me/authorities');\n\n        userAuthorities = UserAuthorities.create(authorities);\n    });\n\n    it('should return true if the user has an authority', () => {\n        expect(userAuthorities.has('F_DATAVALUE_DELETE')).toBe(true);\n    });\n\n    it('should return false if the user does not have an authority', () => {\n        expect(userAuthorities.has('F_DOCUMENT_PUBLIC_DELETE')).toBe(false);\n    });\n\n    it('should return true if the user does not have an authority but does have ALL', () => {\n        userAuthorities = UserAuthorities.create(['F_DATAVALUE_DELETE', 'ALL']);\n\n        expect(userAuthorities.has('F_DOCUMENT_PUBLIC_DELETE')).toBe(true);\n    });\n\n    it('should return false when asking for ALL and the user does not have it', () => {\n        expect(userAuthorities.has('ALL')).toBe(false);\n    });\n\n    it('should return true when asking for ALL and the user has the authority', () => {\n        userAuthorities = UserAuthorities.create(['F_DATAVALUE_DELETE', 'ALL']);\n\n        expect(userAuthorities.has('ALL')).toBe(true);\n    });\n});\n"],"file":"UserAuthorities.spec.js"}