{"version":3,"sources":["../../src/period/parser.js"],"names":["periodTypeRegex","Daily","Weekly","WeeklyWednesday","WeeklyThursday","WeeklySaturday","WeeklySunday","Monthly","BiMonthly","Quarterly","SixMonthly","SixMonthlyApril","Yearly","FinancialApril","FinancialJuly","FinancialOct","weeklyMatcherParser","match","locale","year","parseInt","weekType","week","Error","monthNames","weekTypeDiff","startDate","startMonth","getMonth","startYear","getFullYear","startMonthName","startDayNum","getDate","id","endDate","endMonth","endDayNum","endMonthName","name","isValidDailyPeriod","month","day","regexMatchToPeriod","date","Date","substr","monthNum","lastDay","biMonth","startMonthNum","quarter","s","endMonthNum","getPeriodFromPeriodId","periodId","period","Object","keys","filter","periodType","test","hasOwnProperty","map"],"mappings":";;;;;;;;AAAA;;AASA;;AAEA,IAAMA,eAAe,GAAG;AACpBC,EAAAA,KAAK,EAAE,kCADa;AACgC;AACpDC,EAAAA,MAAM,EAAE,6BAFY;AAEgC;AACpDC,EAAAA,eAAe,EAAE,gCAHG;AAGgC;AACpDC,EAAAA,cAAc,EAAE,gCAJI;AAIgC;AACpDC,EAAAA,cAAc,EAAE,gCALI;AAKgC;AACpDC,EAAAA,YAAY,EAAE,gCANM;AAMgC;AACpDC,EAAAA,OAAO,EAAE,wBAPW;AAOgC;AACpDC,EAAAA,SAAS,EAAE,yBARS;AAQgC;AACpDC,EAAAA,SAAS,EAAE,uBATS;AASgC;AACpDC,EAAAA,UAAU,EAAE,qBAVQ;AAUgC;AACpDC,EAAAA,eAAe,EAAE,0BAXG;AAWgC;AACpDC,EAAAA,MAAM,EAAE,cAZY;AAYgC;AACpDC,EAAAA,cAAc,EAAE,mBAbI;AAagC;AACpDC,EAAAA,aAAa,EAAE,kBAdK;AAcgC;AACpDC,EAAAA,YAAY,EAAE,iBAfM,CAegC;;AAfhC,CAAxB;AAkBA;;AACA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD,EAA0B;AAAA,MAAlBC,MAAkB,uEAAT,IAAS;AAClD,MAAIC,IAAI,GAAGC,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAnB;AACA,MAAMI,QAAQ,GAAGJ,KAAK,CAAC,CAAD,CAAtB;AACA,MAAIK,IAAI,GAAGF,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAnB;;AACA,MAAIK,IAAI,GAAG,CAAP,IAAYA,IAAI,GAAG,EAAvB,EAA2B;AACvB,UAAM,IAAIC,KAAJ,CAAU,qBAAV,CAAN;AACH;;AAED,MAAMC,UAAU,GAAG,qCAAuBN,MAAvB,CAAnB;AAEA,MAAIO,YAAY,GAAG,CAAnB;;AACA,UAAQJ,QAAR;AACA,SAAK,KAAL;AAAYI,MAAAA,YAAY,GAAG,CAAf;AAAkB;;AAC9B,SAAK,KAAL;AAAYA,MAAAA,YAAY,GAAG,CAAf;AAAkB;;AAC9B,SAAK,KAAL;AAAYA,MAAAA,YAAY,GAAG,CAAC,CAAhB;AAAmB;;AAC/B,SAAK,KAAL;AAAYA,MAAAA,YAAY,GAAG,CAAC,CAAhB;AAAmB;;AAC/B;AAAS;AALT;;AAQA,MAAMC,SAAS,GAAG,sBAAQD,YAAR,EAAsB,iCAAmBN,IAAnB,EAAyBG,IAAzB,CAAtB,CAAlB;AACA,MAAMK,UAAU,GAAGD,SAAS,CAACE,QAAV,EAAnB;AACA,MAAMC,SAAS,GAAGH,SAAS,CAACI,WAAV,EAAlB;AACA,MAAMC,cAAc,GAAGP,UAAU,CAACG,UAAD,CAAjC;AACA,MAAMK,WAAW,GAAGN,SAAS,CAACO,OAAV,EAApB;;AAEA,MAAIX,IAAI,KAAK,EAAT,IAAeO,SAAS,KAAKV,IAAjC,EAAuC;AACnCG,IAAAA,IAAI,GAAG,CAAP;AACAH,IAAAA,IAAI,GAAGU,SAAP;AACH;;AACD,MAAMK,EAAE,aAAMf,IAAN,SAAaE,QAAb,cAAyBC,IAAzB,CAAR;AAEA,MAAMa,OAAO,GAAG,sBAAQ,CAAR,EAAWT,SAAX,CAAhB;AACA,MAAMU,QAAQ,GAAGD,OAAO,CAACP,QAAR,EAAjB;AACA,MAAMS,SAAS,GAAGF,OAAO,CAACF,OAAR,EAAlB;AACA,MAAMK,YAAY,GAAGd,UAAU,CAACY,QAAD,CAA/B;AAEA,MAAMG,IAAI,GAAGZ,UAAU,KAAKS,QAAf,aACJjB,IADI,eACKG,IADL,cACaS,cADb,cAC+BC,WAD/B,gBACgDK,SADhD,cAEJlB,IAFI,eAEKG,IAFL,cAEaS,cAFb,cAE+BC,WAF/B,gBAEgDM,YAFhD,cAEgED,SAFhE,CAAb;AAIA,SAAO;AACHH,IAAAA,EAAE,EAAFA,EADG;AAEHK,IAAAA,IAAI,EAAJA,IAFG;AAGHb,IAAAA,SAAS,EAAE,8BAAgBA,SAAhB,CAHR;AAIHS,IAAAA,OAAO,EAAE,8BAAgBA,OAAhB;AAJN,GAAP;AAMH,CA9CD;;AAgDA,IAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAQtB,IAAR,EAAcuB,GAAd;AAAA,SACvBD,KAAK,GAAG,EAAR,IAAcA,KAAK,GAAG,CAAtB,IACAC,GAAG,GAAG,EADN,IACYA,GAAG,GAAG,CADlB,IAEAvB,IAAI,GAAG,IAFP,IAEeA,IAAI,GAAG,IAHC;AAAA,CAA3B;AAIA;;;AAEA,IAAMwB,kBAAkB,GAAG;AACvB1C,EAAAA,KAAK,EAAE,eAACgB,KAAD,EAA0B;AAAA,QAAlBC,MAAkB,uEAAT,IAAS;AAC7B,QAAMC,IAAI,GAAGC,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAArB;AACA,QAAMwB,KAAK,GAAGrB,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAR,GAAyB,CAAvC;AACA,QAAMyB,GAAG,GAAGtB,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAApB;;AACA,QAAIuB,kBAAkB,CAACC,KAAD,EAAQtB,IAAR,EAAcuB,GAAd,CAAtB,EAA0C;AACtC,YAAM,IAAInB,KAAJ,CAAU,sBAAV,CAAN;AACH;;AACD,QAAMqB,IAAI,GAAG,IAAIC,IAAJ,CAAS5B,KAAK,CAAC,CAAD,CAAd,EAAmBA,KAAK,CAAC,CAAD,CAAL,GAAW,CAA9B,EAAiCA,KAAK,CAAC,CAAD,CAAtC,CAAb;AACA,WAAO;AACHiB,MAAAA,EAAE,YAAKU,IAAI,CAACd,WAAL,EAAL,SAA0B,WAAKc,IAAI,CAAChB,QAAL,KAAkB,CAAvB,EAA4BkB,MAA5B,CAAmC,CAAC,CAApC,CAA1B,SAAmE,WAAKF,IAAI,CAACX,OAAL,EAAL,EAAuBa,MAAvB,CAA8B,CAAC,CAA/B,CAAnE,CADC;AAEHP,MAAAA,IAAI,EAAE,mCAAkBK,IAAlB,EAAwB1B,MAAxB,CAFH;AAGHQ,MAAAA,SAAS,EAAE,8BAAgBkB,IAAhB,CAHR;AAIHT,MAAAA,OAAO,EAAE,8BAAgBS,IAAhB;AAJN,KAAP;AAMH,GAfsB;AAgBvB1C,EAAAA,MAAM,EAAEc,mBAhBe;AAiBvBb,EAAAA,eAAe,EAAEa,mBAjBM;AAkBvBZ,EAAAA,cAAc,EAAEY,mBAlBO;AAmBvBX,EAAAA,cAAc,EAAEW,mBAnBO;AAoBvBV,EAAAA,YAAY,EAAEU,mBApBS;AAqBvBT,EAAAA,OAAO,EAAE,iBAACU,KAAD,EAA0B;AAAA,QAAlBC,MAAkB,uEAAT,IAAS;AAC/B,QAAMgB,EAAE,GAAGjB,KAAK,CAAC,CAAD,CAAhB;AACA,QAAME,IAAI,GAAGC,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAArB;AACA,QAAMwB,KAAK,GAAGrB,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAR,GAAyB,CAAvC;;AACA,QAAIwB,KAAK,GAAG,EAAR,IAAcA,KAAK,GAAG,CAA1B,EAA6B;AACzB,YAAM,IAAIlB,KAAJ,CAAU,sBAAV,CAAN;AACH;;AACD,QAAMwB,QAAQ,GAAG,WAAIN,KAAK,GAAG,CAAZ,EAAgBK,MAAhB,CAAuB,CAAC,CAAxB,CAAjB;AACA,QAAMtB,UAAU,GAAG,qCAAuBN,MAAvB,CAAnB;AACA,QAAM8B,OAAO,GAAG,iCAAmB7B,IAAnB,EAAyBsB,KAAzB,CAAhB;AACA,WAAO;AACHP,MAAAA,EAAE,EAAFA,EADG;AAEHK,MAAAA,IAAI,YAAKf,UAAU,CAACiB,KAAD,CAAf,cAA0BtB,IAA1B,CAFD;AAGHO,MAAAA,SAAS,YAAKP,IAAL,cAAa4B,QAAb,QAHN;AAIHZ,MAAAA,OAAO,EAAE,8BAAgBa,OAAhB;AAJN,KAAP;AAMH,GArCsB;AAsCvBxC,EAAAA,SAAS,EAAE,mBAACS,KAAD,EAA0B;AAAA,QAAlBC,MAAkB,uEAAT,IAAS;AACjC,QAAMgB,EAAE,GAAGjB,KAAK,CAAC,CAAD,CAAhB;AACA,QAAME,IAAI,GAAGC,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAArB;AACA,QAAMgC,OAAO,GAAG7B,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAxB;;AACA,QAAIgC,OAAO,GAAG,CAAV,IAAeA,OAAO,GAAG,CAA7B,EAAgC;AAC5B,YAAM,IAAI1B,KAAJ,CAAU,wBAAV,CAAN;AACH;;AACD,QAAMI,UAAU,GAAG,CAACsB,OAAO,GAAG,CAAX,IAAgB,CAAnC;AACA,QAAMC,aAAa,GAAG,WAAIvB,UAAU,GAAG,CAAjB,EAAqBmB,MAArB,CAA4B,CAAC,CAA7B,CAAtB;AACA,QAAMV,QAAQ,GAAGT,UAAU,GAAG,CAA9B;AACA,QAAMH,UAAU,GAAG,qCAAuBN,MAAvB,CAAnB;AACA,WAAO;AACHgB,MAAAA,EAAE,EAAFA,EADG;AAEHK,MAAAA,IAAI,YAAKf,UAAU,CAACG,UAAD,CAAf,gBAAiCH,UAAU,CAACY,QAAD,CAA3C,cAAyDjB,IAAzD,CAFD;AAGHO,MAAAA,SAAS,YAAKP,IAAL,cAAa+B,aAAb,QAHN;AAIHf,MAAAA,OAAO,EAAE,8BAAgB,iCAAmBhB,IAAnB,EAAyBiB,QAAzB,CAAhB;AAJN,KAAP;AAMH,GAvDsB;AAwDvB3B,EAAAA,SAAS,EAAE,mBAACQ,KAAD,EAA0B;AAAA,QAAlBC,MAAkB,uEAAT,IAAS;AACjC,QAAMgB,EAAE,GAAGjB,KAAK,CAAC,CAAD,CAAhB;AACA,QAAME,IAAI,GAAGC,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAArB;AACA,QAAMkC,OAAO,GAAG/B,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAxB;AACA,QAAMU,UAAU,GAAG,CAACwB,OAAO,GAAG,CAAX,IAAgB,CAAnC;AACA,QAAMf,QAAQ,GAAIe,OAAO,GAAG,CAAX,GAAgB,CAAjC;AACA,QAAM3B,UAAU,GAAG,qCAAuBN,MAAvB,CAAnB;AACA,WAAO;AACHgB,MAAAA,EAAE,EAAFA,EADG;AAEHK,MAAAA,IAAI,YAAKf,UAAU,CAACG,UAAD,CAAf,gBAAiCH,UAAU,CAACY,QAAD,CAA3C,cAAyDjB,IAAzD,CAFD;AAGHO,MAAAA,SAAS,EAAE,8BAAgB,oCAAsBP,IAAtB,EAA4BgC,OAA5B,CAAhB,CAHR;AAIHhB,MAAAA,OAAO,EAAE,8BAAgB,mCAAqBhB,IAArB,EAA2BgC,OAA3B,CAAhB;AAJN,KAAP;AAMH,GArEsB;AAsEvBzC,EAAAA,UAAU,EAAE,oBAACO,KAAD,EAA0B;AAAA,QAAlBC,MAAkB,uEAAT,IAAS;AAClC,QAAMgB,EAAE,GAAGjB,KAAK,CAAC,CAAD,CAAhB;AACA,QAAME,IAAI,GAAGF,KAAK,CAAC,CAAD,CAAlB;AACA,QAAMmC,CAAC,GAAGhC,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAR,GAAyB,CAAnC;AACA,QAAMU,UAAU,GAAG,IAAIyB,CAAvB;AACA,QAAMhB,QAAQ,GAAI,IAAIgB,CAAL,GAAU,CAA3B;AACA,QAAMC,WAAW,GAAG,WAAIjB,QAAJ,EAAeU,MAAf,CAAsB,CAAC,CAAvB,CAApB;AACA,QAAMtB,UAAU,GAAG,qCAAuBN,MAAvB,CAAnB;AACA,WAAO;AACHgB,MAAAA,EAAE,EAAFA,EADG;AAEHK,MAAAA,IAAI,YAAKf,UAAU,CAACG,UAAD,CAAf,gBAAiCH,UAAU,CAACY,QAAQ,GAAG,CAAZ,CAA3C,cAA6DjB,IAA7D,CAFD;AAGHO,MAAAA,SAAS,YAAKP,IAAL,eAAeQ,UAAU,GAAG,CAA5B,QAHN;AAIHQ,MAAAA,OAAO,YAAKhB,IAAL,cAAckC,WAAd,cAA8BD,CAAC,KAAK,CAAN,GAAU,IAAV,GAAiB,IAA/C;AAJJ,KAAP;AAMH,GApFsB;AAqFvBzC,EAAAA,eAAe,EAAE,yBAACM,KAAD,EAA0B;AAAA,QAAlBC,MAAkB,uEAAT,IAAS;AACvC,QAAMgB,EAAE,GAAGjB,KAAK,CAAC,CAAD,CAAhB;AACA,QAAME,IAAI,GAAGC,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAArB;AACA,QAAMmC,CAAC,GAAGhC,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAR,GAAyB,CAAnC;AACA,QAAMU,UAAU,GAAGyB,CAAC,KAAK,CAAN,GAAU,CAAV,GAAc,EAAjC;AACA,QAAMF,aAAa,GAAG,WAAIvB,UAAJ,EAAiBmB,MAAjB,CAAwB,CAAC,CAAzB,CAAtB;AACA,QAAMV,QAAQ,GAAGgB,CAAC,KAAK,CAAN,GAAU,CAAV,GAAc,CAA/B;AACA,QAAMC,WAAW,GAAG,WAAIjB,QAAJ,EAAeU,MAAf,CAAsB,CAAC,CAAvB,CAApB;AACA,QAAMtB,UAAU,GAAG,qCAAuBN,MAAvB,CAAnB;AACA,WAAO;AACHgB,MAAAA,EAAE,EAAFA,EADG;AAEHK,MAAAA,IAAI,EAAEa,CAAC,KAAK,CAAN,aACG5B,UAAU,CAACG,UAAU,GAAG,CAAd,CADb,gBACmCH,UAAU,CAACY,QAAQ,GAAG,CAAZ,CAD7C,cAC+DjB,IAD/D,cAEGK,UAAU,CAACG,UAAU,GAAG,CAAd,CAFb,cAEiCR,IAFjC,gBAE2CK,UAAU,CAACY,QAAQ,GAAG,CAAZ,CAFrD,cAEuEjB,IAAI,GAAG,CAF9E,CAFH;AAKHO,MAAAA,SAAS,YAAKP,IAAL,cAAc+B,aAAd,QALN;AAMHf,MAAAA,OAAO,YAAKhB,IAAI,GAAGiC,CAAZ,cAAkBC,WAAlB,cAAkCD,CAAC,KAAK,CAAN,GAAU,IAAV,GAAiB,IAAnD;AANJ,KAAP;AAQH,GAtGsB;AAuGvBxC,EAAAA,MAAM,EAAE,gBAAAK,KAAK;AAAA,WAAK;AACdiB,MAAAA,EAAE,EAAEjB,KAAK,CAAC,CAAD,CADK;AAEdsB,MAAAA,IAAI,EAAEtB,KAAK,CAAC,CAAD,CAFG;AAGdS,MAAAA,SAAS,YAAKT,KAAK,CAAC,CAAD,CAAV,WAHK;AAIdkB,MAAAA,OAAO,YAAKlB,KAAK,CAAC,CAAD,CAAV;AAJO,KAAL;AAAA,GAvGU;AA6GvBJ,EAAAA,cAAc,EAAE,wBAACI,KAAD,EAA0B;AAAA,QAAlBC,MAAkB,uEAAT,IAAS;AACtC,QAAMC,IAAI,GAAGC,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAArB;AACA,QAAMO,UAAU,GAAG,qCAAuBN,MAAvB,CAAnB;AACA,WAAO;AACHgB,MAAAA,EAAE,EAAEjB,KAAK,CAAC,CAAD,CADN;AAEHsB,MAAAA,IAAI,YAAKf,UAAU,CAAC,CAAD,CAAf,cAAsBL,IAAtB,gBAAgCK,UAAU,CAAC,CAAD,CAA1C,cAAiDL,IAAI,GAAG,CAAxD,CAFD;AAGHO,MAAAA,SAAS,YAAKP,IAAL,WAHN;AAIHgB,MAAAA,OAAO,YAAKhB,IAAI,GAAG,CAAZ;AAJJ,KAAP;AAMH,GAtHsB;AAuHvBL,EAAAA,aAAa,EAAE,uBAACG,KAAD,EAA0B;AAAA,QAAlBC,MAAkB,uEAAT,IAAS;AACrC,QAAMC,IAAI,GAAGC,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAArB;AACA,QAAMO,UAAU,GAAG,qCAAuBN,MAAvB,CAAnB;AACA,WAAO;AACHgB,MAAAA,EAAE,EAAEjB,KAAK,CAAC,CAAD,CADN;AAEHsB,MAAAA,IAAI,YAAKf,UAAU,CAAC,CAAD,CAAf,cAAsBL,IAAtB,gBAAgCK,UAAU,CAAC,CAAD,CAA1C,cAAiDL,IAAI,GAAG,CAAxD,CAFD;AAGHO,MAAAA,SAAS,YAAKP,IAAL,WAHN;AAIHgB,MAAAA,OAAO,YAAKhB,IAAI,GAAG,CAAZ;AAJJ,KAAP;AAMH,GAhIsB;AAiIvBJ,EAAAA,YAAY,EAAE,sBAACE,KAAD,EAA0B;AAAA,QAAlBC,MAAkB,uEAAT,IAAS;AACpC,QAAMC,IAAI,GAAGC,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAArB;AACA,QAAMO,UAAU,GAAG,qCAAuBN,MAAvB,CAAnB;AACA,WAAO;AACHgB,MAAAA,EAAE,EAAEjB,KAAK,CAAC,CAAD,CADN;AAEHsB,MAAAA,IAAI,YAAKf,UAAU,CAAC,CAAD,CAAf,cAAsBL,IAAtB,gBAAgCK,UAAU,CAAC,CAAD,CAA1C,cAAiDL,IAAI,GAAG,CAAxD,CAFD;AAGHO,MAAAA,SAAS,YAAKP,IAAL,WAHN;AAIHgB,MAAAA,OAAO,YAAKhB,IAAI,GAAG,CAAZ;AAJJ,KAAP;AAMH;AA1IsB,CAA3B;;AA6IO,SAASmC,qBAAT,CAA+BC,QAA/B,EAAwD;AAAA,MAAfrC,MAAe,uEAAN,IAAM;AAC3D,MAAMsC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAY1D,eAAZ,EACV2D,MADU,CACH,UAAAC,UAAU;AAAA,WAAI5D,eAAe,CAAC4D,UAAD,CAAf,CAA4BC,IAA5B,CAAiCN,QAAjC,KACfZ,kBAAkB,CAACmB,cAAnB,CAAkCF,UAAlC,CADW;AAAA,GADP,EAIVG,GAJU,CAIN,UAAAH,UAAU;AAAA,WAAIjB,kBAAkB,CAACiB,UAAD,CAAlB,CAA+BL,QAAQ,CAACtC,KAAT,CAAejB,eAAe,CAAC4D,UAAD,CAA9B,CAA/B,EAA4E1C,MAA5E,CAAJ;AAAA,GAJJ,EAI6F,CAJ7F,CAAf;;AAMA,MAAI,CAACsC,MAAL,EAAa;AACT,UAAM,IAAIjC,KAAJ,CAAU,uBAAV,CAAN;AACH;;AAED,SAAOiC,MAAP;AACH;;eAEcF,qB","sourcesContent":["import {\n    getMonthNamesForLocale,\n    formatAsISODate,\n    getLastDateOfMonth,\n    getFirstDateOfQuarter,\n    getLastDateOfQuarter,\n    getFirstDateOfWeek,\n    addDays,\n} from './helpers';\nimport { toLocaleDayFormat } from './formatters';\n\nconst periodTypeRegex = {\n    Daily: /^([0-9]{4})([0-9]{2})([0-9]{2})$/,          // YYYYMMDD\n    Weekly: /^([0-9]{4})()W([0-9]{1,2})$/,              // YYYY\"W\"[1-53]\n    WeeklyWednesday: /^([0-9]{4})(Wed)W([0-9]{1,2})$/,  // YYYY\"WedW\"[1-53]\n    WeeklyThursday: /^([0-9]{4})(Thu)W([0-9]{1,2})$/,   // YYYY\"ThuW\"[1-53]\n    WeeklySaturday: /^([0-9]{4})(Sat)W([0-9]{1,2})$/,   // YYYY\"SatW\"[1-53]\n    WeeklySunday: /^([0-9]{4})(Sun)W([0-9]{1,2})$/,     // YYYY\"SunW\"[1-53]\n    Monthly: /^([0-9]{4})([0-9]{2})$/,                  // YYYYMM\n    BiMonthly: /^([0-9]{4})([0-9]{2})B$/,               // YYYY0[1-6]\"B\"\n    Quarterly: /^([0-9]{4})Q([1234])$/,                 // YYYY\"Q\"[1-4]\n    SixMonthly: /^([0-9]{4})S([12])$/,                  // YYYY\"S\"[1/2]\n    SixMonthlyApril: /^([0-9]{4})AprilS([12])$/,        // YYYY\"AprilS\"[1/2]\n    Yearly: /^([0-9]{4})$/,                             // YYYY\n    FinancialApril: /^([0-9]{4})April$/,                // YYYY\"April\"\n    FinancialJuly: /^([0-9]{4})July$/,                  // YYYY\"July\"\n    FinancialOct: /^([0-9]{4})Oct$/,                    // YYYY\"Oct\"\n};\n\n/* eslint-disable complexity */\nconst weeklyMatcherParser = (match, locale = 'en') => {\n    let year = parseInt(match[1], 10);\n    const weekType = match[2];\n    let week = parseInt(match[3], 10);\n    if (week < 1 || week > 53) {\n        throw new Error('Invalid week number');\n    }\n\n    const monthNames = getMonthNamesForLocale(locale);\n\n    let weekTypeDiff = 0;\n    switch (weekType) {\n    case 'Wed': weekTypeDiff = 2; break;\n    case 'Thu': weekTypeDiff = 3; break;\n    case 'Sat': weekTypeDiff = -2; break;\n    case 'Sun': weekTypeDiff = -1; break;\n    default: break;\n    }\n\n    const startDate = addDays(weekTypeDiff, getFirstDateOfWeek(year, week));\n    const startMonth = startDate.getMonth();\n    const startYear = startDate.getFullYear();\n    const startMonthName = monthNames[startMonth];\n    const startDayNum = startDate.getDate();\n\n    if (week === 53 && startYear !== year) {\n        week = 1;\n        year = startYear;\n    }\n    const id = `${year}${weekType}W${week}`;\n\n    const endDate = addDays(6, startDate);\n    const endMonth = endDate.getMonth();\n    const endDayNum = endDate.getDate();\n    const endMonthName = monthNames[endMonth];\n\n    const name = startMonth === endMonth\n        ? `${year} W${week} ${startMonthName} ${startDayNum} - ${endDayNum}`\n        : `${year} W${week} ${startMonthName} ${startDayNum} - ${endMonthName} ${endDayNum}`;\n\n    return {\n        id,\n        name,\n        startDate: formatAsISODate(startDate),\n        endDate: formatAsISODate(endDate),\n    };\n};\n\nconst isValidDailyPeriod = (month, year, day) =>\n    month > 11 || month < 0 ||\n    day > 31 || day < 1 ||\n    year < 1000 || year > 5000;\n/* eslint-enable */\n\nconst regexMatchToPeriod = {\n    Daily: (match, locale = 'en') => {\n        const year = parseInt(match[1], 10);\n        const month = parseInt(match[2], 10) - 1;\n        const day = parseInt(match[3], 10);\n        if (isValidDailyPeriod(month, year, day)) {\n            throw new Error('Invalid Daily period');\n        }\n        const date = new Date(match[1], match[2] - 1, match[3]);\n        return {\n            id: `${date.getFullYear()}${(`0${date.getMonth() + 1}`).substr(-2)}${(`0${date.getDate()}`).substr(-2)}`,\n            name: toLocaleDayFormat(date, locale),\n            startDate: formatAsISODate(date),\n            endDate: formatAsISODate(date),\n        };\n    },\n    Weekly: weeklyMatcherParser,\n    WeeklyWednesday: weeklyMatcherParser,\n    WeeklyThursday: weeklyMatcherParser,\n    WeeklySaturday: weeklyMatcherParser,\n    WeeklySunday: weeklyMatcherParser,\n    Monthly: (match, locale = 'en') => {\n        const id = match[0];\n        const year = parseInt(match[1], 10);\n        const month = parseInt(match[2], 10) - 1;\n        if (month > 11 || month < 0) {\n            throw new Error('Invalid month number');\n        }\n        const monthNum = `0${month + 1}`.substr(-2);\n        const monthNames = getMonthNamesForLocale(locale);\n        const lastDay = getLastDateOfMonth(year, month);\n        return {\n            id,\n            name: `${monthNames[month]} ${year}`,\n            startDate: `${year}-${monthNum}-01`,\n            endDate: formatAsISODate(lastDay),\n        };\n    },\n    BiMonthly: (match, locale = 'en') => {\n        const id = match[0];\n        const year = parseInt(match[1], 10);\n        const biMonth = parseInt(match[2], 10);\n        if (biMonth < 1 || biMonth > 6) {\n            throw new Error('Invalid BiMonth number');\n        }\n        const startMonth = (biMonth - 1) * 2;\n        const startMonthNum = `0${startMonth + 1}`.substr(-2);\n        const endMonth = startMonth + 1;\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id,\n            name: `${monthNames[startMonth]} - ${monthNames[endMonth]} ${year}`,\n            startDate: `${year}-${startMonthNum}-01`,\n            endDate: formatAsISODate(getLastDateOfMonth(year, endMonth)),\n        };\n    },\n    Quarterly: (match, locale = 'en') => {\n        const id = match[0];\n        const year = parseInt(match[1], 10);\n        const quarter = parseInt(match[2], 10);\n        const startMonth = (quarter - 1) * 3;\n        const endMonth = (quarter * 3) - 1;\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id,\n            name: `${monthNames[startMonth]} - ${monthNames[endMonth]} ${year}`,\n            startDate: formatAsISODate(getFirstDateOfQuarter(year, quarter)),\n            endDate: formatAsISODate(getLastDateOfQuarter(year, quarter)),\n        };\n    },\n    SixMonthly: (match, locale = 'en') => {\n        const id = match[0];\n        const year = match[1];\n        const s = parseInt(match[2], 10) - 1;\n        const startMonth = 6 * s;\n        const endMonth = (6 * s) + 6;\n        const endMonthNum = `0${endMonth}`.substr(-2);\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id,\n            name: `${monthNames[startMonth]} - ${monthNames[endMonth - 1]} ${year}`,\n            startDate: `${year}-0${(startMonth + 1)}-01`,\n            endDate: `${year}-${(endMonthNum)}-${s === 0 ? '30' : '31'}`,\n        };\n    },\n    SixMonthlyApril: (match, locale = 'en') => {\n        const id = match[0];\n        const year = parseInt(match[1], 10);\n        const s = parseInt(match[2], 10) - 1;\n        const startMonth = s === 0 ? 4 : 10;\n        const startMonthNum = `0${startMonth}`.substr(-2);\n        const endMonth = s === 0 ? 9 : 3;\n        const endMonthNum = `0${endMonth}`.substr(-2);\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id,\n            name: s === 0\n                ? `${monthNames[startMonth - 1]} - ${monthNames[endMonth - 1]} ${year}`\n                : `${monthNames[startMonth - 1]} ${year} - ${monthNames[endMonth - 1]} ${year + 1}`,\n            startDate: `${year}-${(startMonthNum)}-01`,\n            endDate: `${year + s}-${(endMonthNum)}-${s === 0 ? '30' : '31'}`,\n        };\n    },\n    Yearly: match => ({\n        id: match[0],\n        name: match[1],\n        startDate: `${match[1]}-01-01`,\n        endDate: `${match[1]}-12-31`,\n    }),\n    FinancialApril: (match, locale = 'en') => {\n        const year = parseInt(match[1], 10);\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id: match[0],\n            name: `${monthNames[3]} ${year} - ${monthNames[2]} ${year + 1}`,\n            startDate: `${year}-04-01`,\n            endDate: `${year + 1}-03-31`,\n        };\n    },\n    FinancialJuly: (match, locale = 'en') => {\n        const year = parseInt(match[1], 10);\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id: match[0],\n            name: `${monthNames[6]} ${year} - ${monthNames[5]} ${year + 1}`,\n            startDate: `${year}-07-01`,\n            endDate: `${year + 1}-06-30`,\n        };\n    },\n    FinancialOct: (match, locale = 'en') => {\n        const year = parseInt(match[1], 10);\n        const monthNames = getMonthNamesForLocale(locale);\n        return {\n            id: match[0],\n            name: `${monthNames[9]} ${year} - ${monthNames[8]} ${year + 1}`,\n            startDate: `${year}-10-01`,\n            endDate: `${year + 1}-09-30`,\n        };\n    },\n};\n\nexport function getPeriodFromPeriodId(periodId, locale = 'en') {\n    const period = Object.keys(periodTypeRegex)\n        .filter(periodType => periodTypeRegex[periodType].test(periodId)\n            && regexMatchToPeriod.hasOwnProperty(periodType),\n        )\n        .map(periodType => regexMatchToPeriod[periodType](periodId.match(periodTypeRegex[periodType]), locale))[0];\n\n    if (!period) {\n        throw new Error('Invalid period format');\n    }\n\n    return period;\n}\n\nexport default getPeriodFromPeriodId;\n"],"file":"parser.js"}