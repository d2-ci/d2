{"version":3,"sources":["../../src/analytics/AnalyticsRequest.js"],"names":["AnalyticsRequest","model","passFilterAsDimension","request","columns","rows","concat","forEach","d","dimension","filter","addDimension","items","map","item","id","filters","f","addFilter","AnalyticsRequestBase"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;IAaMA,gB;;;;;;;;;;;;;;AAGF;;;;;;;;;;;;;;;;;;;8BAmBUC,K,EAAsC;AAAA,UAA/BC,qBAA+B,uEAAP,KAAO;AAC5C,UAAIC,OAAO,GAAG,IAAd,CAD4C,CAG5C;;AACA,UAAMC,OAAO,GAAGH,KAAK,CAACG,OAAN,IAAiB,EAAjC;AACA,UAAMC,IAAI,GAAGJ,KAAK,CAACI,IAAN,IAAc,EAA3B;AAEAD,MAAAA,OAAO,CAACE,MAAR,CAAeD,IAAf,EAAqBE,OAArB,CAA6B,UAACC,CAAD,EAAO;AAChC,YAAIC,SAAS,GAAGD,CAAC,CAACC,SAAlB;;AAEA,YAAID,CAAC,CAACE,MAAN,EAAc;AACVD,UAAAA,SAAS,eAAQD,CAAC,CAACE,MAAV,CAAT;AACH;;AAEDP,QAAAA,OAAO,GAAGA,OAAO,CAACQ,YAAR,CAAqBF,SAArB,EAAgCD,CAAC,CAACI,KAAF,CAAQC,GAAR,CAAY,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,EAAT;AAAA,SAAhB,CAAhC,CAAV;AACH,OARD,EAP4C,CAiB5C;;AACA,UAAMC,OAAO,GAAGf,KAAK,CAACe,OAAN,IAAiB,EAAjC;AAEAA,MAAAA,OAAO,CAACT,OAAR,CAAgB,UAACU,CAAD,EAAO;AACnBd,QAAAA,OAAO,GAAGD,qBAAqB,GACzBC,OAAO,CAACQ,YAAR,CAAqBM,CAAC,CAACR,SAAvB,EAAkCQ,CAAC,CAACL,KAAF,CAAQC,GAAR,CAAY,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,EAAT;AAAA,SAAhB,CAAlC,CADyB,GAEzBZ,OAAO,CAACe,SAAR,CAAkBD,CAAC,CAACR,SAApB,EAA+BQ,CAAC,CAACL,KAAF,CAAQC,GAAR,CAAY,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,EAAT;AAAA,SAAhB,CAA/B,CAFN;AAGH,OAJD;AAMA,aAAOZ,OAAP;AACH;;;;EAjD0B,8CAC3B,2CAA6B,8CAAgCgB,6BAAhC,CAA7B,CAD2B,C;;eAoDhBnB,gB","sourcesContent":["import AnalyticsRequestDimensionsMixin from './AnalyticsRequestDimensionsMixin';\nimport AnalyticsRequestFiltersMixin from './AnalyticsRequestFiltersMixin';\nimport AnalyticsRequestPropertiesMixin from './AnalyticsRequestPropertiesMixin';\nimport AnalyticsRequestBase from './AnalyticsRequestBase';\n\n/**\n * @description\n * Class for constructing a request object to use for communicating with the analytics API endpoint.\n *\n * @param {!Object} options Object with analytics request options\n *\n * @memberof module:analytics\n *\n * @extends module:analytics.AnalyticsRequestDimensionsMixin\n * @extends module:analytics.AnalyticsRequestFiltersMixin\n * @extends module:analytics.AnalyticsRequestPropertiesMixin\n * @extends module:analytics.AnalyticsRequestBase\n */\nclass AnalyticsRequest extends AnalyticsRequestDimensionsMixin(\n    AnalyticsRequestFiltersMixin(AnalyticsRequestPropertiesMixin(AnalyticsRequestBase)),\n) {\n    /**\n     * Extracts dimensions and filters from an analytic object model and add them to the request\n     *\n     * @param {Object} model The analytics object model from which extract the dimensions/filters\n     * @param {Boolean} [passFilterAsDimension=false] Pass filters as dimension in the query string (used in dataValueSet requests)\n     *\n     * @returns {AnalyticsRequest} A new instance of the class for chaining purposes\n     *\n     * @example\n     * const req = new d2.analytics.request()\n     *    .fromModel(model);\n     *\n     * // dimension=pe:LAST_12_MONTH&dimension=dx:fbfJHSPpUQD;cYeuwXTCPkU;Jtf34kNZhzP;hfdmMSPBgLG&filter=ou:ImspTQPwCqd\n     *\n     * const req2 = new d2.analytics.request()\n     *    .fromModel(model, true);\n     *\n     * // dimension=pe:LAST_12_MONTH&dimension=dx:fbfJHSPpUQD;cYeuwXTCPkU;Jtf34kNZhzP;hfdmMSPBgLG&dimension=ou:ImspTQPwCqd\n     */\n    fromModel(model, passFilterAsDimension = false) {\n        let request = this;\n\n        // extract dimensions from model\n        const columns = model.columns || [];\n        const rows = model.rows || [];\n\n        columns.concat(rows).forEach((d) => {\n            let dimension = d.dimension;\n\n            if (d.filter) {\n                dimension += `:${d.filter}`;\n            }\n\n            request = request.addDimension(dimension, d.items.map(item => item.id));\n        });\n\n        // extract filters from model\n        const filters = model.filters || [];\n\n        filters.forEach((f) => {\n            request = passFilterAsDimension\n                ? request.addDimension(f.dimension, f.items.map(item => item.id))\n                : request.addFilter(f.dimension, f.items.map(item => item.id));\n        });\n\n        return request;\n    }\n}\n\nexport default AnalyticsRequest;\n"],"file":"AnalyticsRequest.js"}