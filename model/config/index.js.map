{"version":3,"sources":["../../../src/model/config/index.js"],"names":["getDefaultValuesForModelType","defaultValues","Map","modelDefinitionName","has","get","schemaFields","schemaPropertyFields","fieldsForSchemas","concat","join"],"mappings":";;;;;;QA0BgBA,4B,GAAAA,4B;;AA1BhB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEO,IAAMC,wCAAgB,IAAIC,GAAJ,CAAQ,CACjC,CAAC,0BAAD,qCADiC,EAEjC,CAAC,UAAD,qBAFiC,EAGjC,CAAC,wBAAD,mCAHiC,EAIjC,CAAC,aAAD,wBAJiC,EAKjC,CAAC,qBAAD,gCALiC,EAMjC,CAAC,SAAD,oBANiC,EAOjC,CAAC,kBAAD,6BAPiC,EAQjC,CAAC,gCAAD,2CARiC,EASjC,CAAC,gBAAD,2BATiC,EAUjC,CAAC,SAAD,oBAViC,EAWjC,CAAC,6BAAD,wCAXiC,CAAR,CAAtB;;AAcA,SAASF,4BAAT,CAAsCG,mBAAtC,EAA2D;AAC9D,QAAIF,cAAcG,GAAd,CAAkBD,mBAAlB,CAAJ,EAA4C;AACxC,eAAOF,cAAcI,GAAd,CAAkBF,mBAAlB,CAAP;AACH;AACD,WAAO,EAAP;AACH;;AAED,IAAMG,eAAe,CACjB,aADiB,EAEjB,MAFiB,EAGjB,aAHiB,EAIjB,aAJiB,EAKjB,UALiB,EAMjB,QANiB,EAOjB,WAPiB,EAQjB,UARiB,EASjB,OATiB,EAUjB,oBAViB,EAWjB,cAXiB,CAArB;;AAcA,IAAMC,uBAAuB,CACzB,MADyB,EAEzB,UAFyB,EAGzB,YAHyB,EAIzB,gBAJyB,EAKzB,MALyB,EAMzB,cANyB,EAOzB,WAPyB,EAQzB,UARyB,EASzB,KATyB,EAUzB,KAVyB,EAWzB,SAXyB,EAYzB,QAZyB,EAazB,WAbyB,EAczB,OAdyB,EAezB,kBAfyB,EAgBzB,gBAhByB,EAiBzB,gBAjByB,CAA7B;;AAoBO,IAAMC,8CAAmBF,aAAaG,MAAb,iBAAkCF,qBAAqBG,IAArB,CAA0B,GAA1B,CAAlC,QAAqEA,IAArE,CAA0E,GAA1E,CAAzB","file":"index.js","sourcesContent":["import organisationUnitGroupSetDefaults from './model-defaults/organisationUnitGroupSet';\nimport categoryDefaults from './model-defaults/category';\nimport categoryOptionGroupSetDefaults from './model-defaults/categoryOptionGroupSet';\nimport dataElementDefaults from './model-defaults/dataElement';\nimport dataElementGroupSetDefaults from './model-defaults/dataElementGroupSet';\nimport dataSetDefaults from './model-defaults/dataSet';\nimport externalMapLayer from './model-defaults/externalMapLayer';\nimport validationNotificationTemplate from './model-defaults/validationNotificationTemplate';\nimport validationRuleDefaults from './model-defaults/validationRule';\nimport programDefaults from './model-defaults/program';\nimport programNotificationTemplateDefaults from './model-defaults/programNotificationTemplate';\n\nexport const defaultValues = new Map([\n    ['organisationUnitGroupSet', organisationUnitGroupSetDefaults],\n    ['category', categoryDefaults],\n    ['categoryOptionGroupSet', categoryOptionGroupSetDefaults],\n    ['dataElement', dataElementDefaults],\n    ['dataElementGroupSet', dataElementGroupSetDefaults],\n    ['dataSet', dataSetDefaults],\n    ['externalMapLayer', externalMapLayer],\n    ['validationNotificationTemplate', validationNotificationTemplate],\n    ['validationRule', validationRuleDefaults],\n    ['program', programDefaults],\n    ['programNotificationTemplate', programNotificationTemplateDefaults],\n]);\n\nexport function getDefaultValuesForModelType(modelDefinitionName) {\n    if (defaultValues.has(modelDefinitionName)) {\n        return defaultValues.get(modelDefinitionName);\n    }\n    return {};\n}\n\nconst schemaFields = [\n    'apiEndpoint',\n    'name',\n    'displayName',\n    'authorities',\n    'singular',\n    'plural',\n    'shareable',\n    'metadata',\n    'klass',\n    'identifiableObject',\n    'translatable',\n];\n\nconst schemaPropertyFields = [\n    'href',\n    'writable',\n    'collection',\n    'collectionName',\n    'name',\n    'propertyType',\n    'persisted',\n    'required',\n    'min',\n    'max',\n    'ordered',\n    'unique',\n    'constants',\n    'owner',\n    'itemPropertyType',\n    'translationKey',\n    'embeddedObject',\n];\n\nexport const fieldsForSchemas = schemaFields.concat(`properties[${schemaPropertyFields.join(',')}]`).join(',');\n"]}