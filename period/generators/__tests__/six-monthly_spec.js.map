{"version":3,"sources":["../../../../src/period/generators/__tests__/six-monthly_spec.js"],"names":["describe","it","expect","toThrowError","Date","toHaveLength","toEqual","startDate","endDate","name","id","getFullYear"],"mappings":";;AAAA;;AAEAA,QAAQ,CAAC,oBAAD,EAAuB,YAAM;AACjCA,EAAAA,QAAQ,CAAC,oCAAD,EAAuC,YAAM;AACjDC,IAAAA,EAAE,CAAC,6CAAD,EAAgD,YAAM;AACpDC,MAAAA,MAAM,CAAC;AAAA,eAAM,kDAAiC,CAAC,EAAlC,CAAN;AAAA,OAAD,CAAN,CAAoDC,YAApD;AACH,KAFC,CAAF;AAIAF,IAAAA,EAAE,CAAC,kDAAD,EAAqD,YAAM;AACzDC,MAAAA,MAAM,CAAC;AAAA,eAAM,kDAAiC,IAAIE,IAAJ,EAAjC,CAAN;AAAA,OAAD,CAAN,CAA2DD,YAA3D;AACH,KAFC,CAAF;AAIAF,IAAAA,EAAE,CAAC,uCAAD,EAA0C,YAAM;AAC9CC,MAAAA,MAAM,CAAC,kDAAiC,IAAjC,CAAD,CAAN,CAA+CG,YAA/C,CAA4D,CAA5D;AACH,KAFC,CAAF;AAIAJ,IAAAA,EAAE,CAAC,qDAAD,EAAwD,YAAM;AAC5DC,MAAAA,MAAM,CAAC,kDAAiC,IAAjC,CAAD,CAAN,CAA+CI,OAA/C,CAAuD,CACnD;AACIC,QAAAA,SAAS,EAAE,YADf;AAEIC,QAAAA,OAAO,EAAE,YAFb;AAGIC,QAAAA,IAAI,EAAE,qBAHV;AAIIC,QAAAA,EAAE,EAAE;AAJR,OADmD,EAMhD;AACCH,QAAAA,SAAS,EAAE,YADZ;AAECC,QAAAA,OAAO,EAAE,YAFV;AAGCC,QAAAA,IAAI,EAAE,sBAHP;AAICC,QAAAA,EAAE,EAAE;AAJL,OANgD,CAAvD;AAaH,KAdC,CAAF;AAgBAT,IAAAA,EAAE,CAAC,2FAAD,EAA8F,YAAM;AAClGC,MAAAA,MAAM,CAAC,mDAAD,CAAN,CAA2CI,OAA3C,CAAmD,kDAAiC,IAAIF,IAAJ,GAAWO,WAAX,EAAjC,CAAnD;AACH,KAFC,CAAF;AAGH,GAhCO,CAAR;AAiCH,CAlCO,CAAR","sourcesContent":["import { generateSixMonthlyPeriodsForYear } from '../six-monthly';\n\ndescribe('Six-monthly period', () => {\n    describe('generateSixMonthlyPeriodsForYear()', () => {\n        it('should not allow years before the year zero', () => {\n            expect(() => generateSixMonthlyPeriodsForYear(-10)).toThrowError();\n        });\n\n        it('should throw an error when passing a Date object', () => {\n            expect(() => generateSixMonthlyPeriodsForYear(new Date())).toThrowError();\n        });\n\n        it('should generate two quarterly periods', () => {\n            expect(generateSixMonthlyPeriodsForYear(2017)).toHaveLength(2);\n        });\n\n        it('should generate the correct two six-monthly periods', () => {\n            expect(generateSixMonthlyPeriodsForYear(2017)).toEqual([\n                {\n                    startDate: '2017-01-01',\n                    endDate: '2017-06-30',\n                    name: 'January - June 2017',\n                    id: '2017S1',\n                }, {\n                    startDate: '2017-07-01',\n                    endDate: '2017-12-31',\n                    name: 'July - December 2017',\n                    id: '2017S2',\n                },\n            ]);\n        });\n\n        it('should generate the same periods when called without as when called with the current year', () => {\n            expect(generateSixMonthlyPeriodsForYear()).toEqual(generateSixMonthlyPeriodsForYear(new Date().getFullYear()));\n        });\n    });\n});\n"],"file":"six-monthly_spec.js"}